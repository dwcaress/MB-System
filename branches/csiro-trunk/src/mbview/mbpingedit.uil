/*
 * Generated by the ICS builderXcessory (BX).
 *
 *
 * BuilderXcessory Version 6.1.3.
 *
 * Identification: 
 */
module main_uil
version = 'V2.1'
names = case_sensitive
!(BX) bx_info("c_options", "")
!(BX) bx_info("c_libs", "-lGLw -lSgm -lXm -lXt -lGL -lXext -lX11 -lgen -lm")
!(BX) bx_info("c_cflags", "-Aa -I/usr/include/Motif1.2 -I/usr/include/X11R5")
!(BX) bx_info("c_cc", "cc")
!(BX) bx_info("c_excludeungenerated", "false")
!(BX) bx_info("c_target", "main-c")
!(BX) bx_info("c_information", "")
!(BX) bx_info("c_user_main_loop", "", false)
!(BX) bx_info("c_ignore_shell_geometry", "false")
!(BX) bx_info("c_visible_windows_only", "false")
!(BX) bx_info("c_rm_exp_callbacks", "false")
!(BX) bx_info("c_reverse_dialogs", "true")
!(BX) bx_info("c_dialogs_in_routine", "true")
!(BX) bx_info("c_unmanage_dialogs", "true")
!(BX) bx_info("c_use_locales", "false")
!(BX) bx_info("c_ansi", "true")
!(BX) bx_info("c_name", "mbpingedit")
!(BX) bx_info("c_class", "mbpingedit")
!(BX) bx_info("c_app_defaults", "mbpingedit", true)
!(BX) bx_info("c_utilities", "mbpingedit_bxutils.c", true)
!(BX) bx_info("c_constants", "mbpingedit_creation.h", true)
!(BX) bx_info("c_callbacks", "mbpingedit_callbacks.c", true)
!(BX) bx_info("c_creation", "mbpingedit_creation.c", true)
!(BX) bx_info("c_main", "mbpingedit.c", true)
!(BX) bx_info("c_acinclude_m4", "acinclude.m4", false)
!(BX) bx_info("c_configure_in", "configure.in", false)
!(BX) bx_info("c_makefile_am", "Makefile.am", false)
!(BX) bx_info("c_cvsmake", "CVSMake", false)
!(BX) bx_info("c_makefile", "Makefile.org", true)
!(BX) bx_info("c_imakefile", "Imakefile", true)
!(BX) bx_info("c_dirpath", "")
!(BX) bx_info("include_path", ".", false)
!(BX) bx_info("xrunner_command", "$(M_ROOT)/arch/X11.5/Xm1.2/mic_xm.o", false)
!(BX) bx_info("system_directory", "/opt/bx-6.1")
!(BX) bx_info("builder_version", "BuilderXcessory Version 6.1.3")
!(BX) bx_info("build_lang", "C")
!(BX) bx_info("default_cpp_args", "")
!(BX) bx_info("new_mrm_style", "true")
!(BX) bx_info("c_wrap_lines", "false")
!(BX) bx_info("uil_wrap_lines", "true")
!(BX) bx_info("integrate_purify", "false")
!(BX) bx_info("purify_command", "purify")
!(BX) bx_info("integrate_xrunner", "false")

procedure BxGlobalWidgetId;
identifier BXG_mbpingedit_window;
procedure BxManageCB(string);
procedure BxUnmanageCB(string);
procedure do_mbpingedit_check_median_ltrack();
procedure do_mbpingedit_check_median_xtrack();
procedure do_mbpingedit_dismiss();
procedure do_mbpingedit_event();
procedure do_mbpingedit_expose();
procedure do_mbpingedit_flag_view();
procedure do_mbpingedit_forward();
procedure do_mbpingedit_mode_erase();
procedure do_mbpingedit_mode_grab();
procedure do_mbpingedit_mode_info();
procedure do_mbpingedit_mode_pick();
procedure do_mbpingedit_mode_restore();
procedure do_mbpingedit_mode_toggle();
procedure do_mbpingedit_next_buffer();
procedure do_mbpingedit_number_pings();
procedure do_mbpingedit_number_step();
procedure do_mbpingedit_reset_filters();
procedure do_mbpingedit_reverse();
procedure do_mbpingedit_reverse_keys();
procedure do_mbpingedit_reverse_mouse();
procedure do_mbpingedit_scale_x();
procedure do_mbpingedit_scale_y();
procedure do_mbpingedit_set_filters();
procedure do_mbpingedit_show_detects();
procedure do_mbpingedit_show_flagged();
procedure do_mbpingedit_show_time();
procedure do_mbpingedit_unflag_all();
procedure do_mbpingedit_unflag_view();
procedure do_mbpingedit_view_mode();
procedure do_mbpingedit_x_interval();
procedure do_mbpingedit_y_interval();

list BaseStyle : arguments {
};

list BaseStyleReasons : callbacks {
};

!(BX)list BaseStyleHandlers : handlers {
!(BX)};

list Style_use : arguments {
        arguments BaseStyle;
        XmNfontList = font_table(
		font('-*-helvetica-bold-r-*-*-*-140-75-75-*-*-iso8859-1'));
};

list Style_useReasons : callbacks {
        callbacks BaseStyleReasons;
};

!(BX)list Style_useHandlers : handlers {
!(BX)    handlers BaseStyleHandlers;
!(BX)};


object mBpedit : XmFormDialog widget {
    arguments {
!(BX) BxNclass = "MBpedit";
!(BX) BxNsubclassDerived = "False";
        arguments Style_use;
        XmNdialogTitle = compound_string("MBeditviz Swath View");
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 518;
        XmNy = 310;
        XmNwidth = 1004;
        XmNheight = 694;
    };
    controls {
         managed XmBulletinBoard mBpedit_mbpingedit_controls;
         managed XmDrawingArea mBpedit_mbpingedit_canvas;
!(BX)         unmanaged XmDialogShell mBpedit_mbpingedit_dialogShell_filters;
!(BX)         unmanaged XmDialogShell mBpedit_mbpingedit_dialogShell_annotation;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

!(BX)object mbpingedit_dialogShell : XmDialogShell widget {
!(BX)    arguments {
!(BX)        arguments Style_use;
!(BX)        XmNtitle = "MBeditviz Swath View";
!(BX)        XmNwidth = 1004;
!(BX)        XmNheight = 694;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmFormDialog mBpedit;
!(BX)    };
!(BX)    callbacks {
!(BX)        callbacks Style_useReasons;
!(BX)    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
!(BX)};

object mbpingedit_window : XmMainWindow widget {
    arguments {
        arguments Style_use;
        XmNx = 135;
        XmNy = 180;
        XmNwidth = 143;
        XmNheight = 52;
    };
    controls {
!(BX)         unmanaged XmDialogShell mbpingedit_dialogShell;
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_mbpingedit_window);
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

!(BX)object topLevelShell : TopLevelShell widget {
!(BX)    arguments {
!(BX)        arguments Style_use;
!(BX)        XmNtitle = "MBpedit";
!(BX)        XmNiconName = "MBpedit";
!(BX)        XmNallowShellResize = false;
!(BX)        XmNdeleteResponse = XmDESTROY;
!(BX)        XmNx = 135;
!(BX)        XmNy = 180;
!(BX)        XmNwidth = 143;
!(BX)        XmNheight = 52;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmMainWindow mbpingedit_window;
!(BX)    };
!(BX)    callbacks {
!(BX)        callbacks Style_useReasons;
!(BX)        XmNdestroyCallback = procedure do_mbpingedit_dismiss();
!(BX)    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
!(BX)};

object mBpedit_mbpingedit_slider_x_interval_label : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_END;
        XmNlabelString = compound_string("X Axis Tick Interval (m): 1");
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopOffset = 10;
        XmNx = 10;
        XmNy = 10;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_slider_x_interval : XmScale widget {
    arguments {
        arguments Style_use;
        XmNminimum = 1;
        XmNvalue = 1000;
        XmNmaximum = 5000;
        XmNscaleHeight = 15;
        XmNshowArrows = TRUE;
        XmNscaleMultiple = 1;
        XmNshowValue = TRUE;
        XmNorientation = XmHORIZONTAL;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 190;
        XmNrightOffset = 64;
        XmNtopOffset = 0;
        XmNx = 190;
        XmNy = 0;
        XmNwidth = 270;
        XmNheight = 34;
    };
    controls {
        Xm_Title {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mbpingedit_x_interval();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_slider_x_max_interval_label : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("5000");
        XmNrecomputeSize = false;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 450;
        XmNrightOffset = 9;
        XmNtopOffset = 10;
        XmNx = 450;
        XmNy = 10;
        XmNwidth = 65;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_slider_y_interval_label : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_END;
        XmNlabelString = compound_string("Y Axis Tick Interval (m): 1");
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNtopOffset = 50;
        XmNx = 0;
        XmNy = 50;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_slider_y_interval : XmScale widget {
    arguments {
        arguments Style_use;
        XmNminimum = 1;
        XmNvalue = 250;
        XmNmaximum = 1000;
        XmNscaleHeight = 15;
        XmNshowArrows = TRUE;
        XmNscaleMultiple = 1;
        XmNshowValue = TRUE;
        XmNorientation = XmHORIZONTAL;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 190;
        XmNrightOffset = 64;
        XmNtopOffset = 40;
        XmNx = 190;
        XmNy = 40;
        XmNwidth = 270;
        XmNheight = 34;
    };
    controls {
        Xm_Title {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mbpingedit_y_interval();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_slider_y_max_interval_label : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("1000");
        XmNrecomputeSize = false;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 450;
        XmNrightOffset = 9;
        XmNtopOffset = 50;
        XmNx = 450;
        XmNy = 50;
        XmNwidth = 65;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_pushButton_annotation_dismiss : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Dismiss");
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 15;
        XmNleftOffset = 230;
        XmNrightOffset = 217;
        XmNx = 230;
        XmNy = 93;
        XmNwidth = 77;
        XmNheight = 28;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_form_annotation : XmFormDialog widget {
    arguments {
        arguments Style_use;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 630;
        XmNy = 480;
        XmNwidth = 524;
        XmNheight = 136;
    };
    controls {
         managed XmPushButton mBpedit_mbpingedit_pushButton_annotation_dismiss;
         managed XmLabel mBpedit_mbpingedit_slider_y_max_interval_label;
         managed XmScale mBpedit_mbpingedit_slider_y_interval;
         managed XmLabel mBpedit_mbpingedit_slider_y_interval_label;
         managed XmLabel mBpedit_mbpingedit_slider_x_max_interval_label;
         managed XmScale mBpedit_mbpingedit_slider_x_interval;
         managed XmLabel mBpedit_mbpingedit_slider_x_interval_label;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

!(BX)object mBpedit_mbpingedit_dialogShell_annotation : XmDialogShell widget {
!(BX)    arguments {
!(BX)        arguments Style_use;
!(BX)        XmNtitle = "MBeditviz Swath View Annotation";
!(BX)        XmNx = 630;
!(BX)        XmNy = 480;
!(BX)        XmNwidth = 524;
!(BX)        XmNheight = 136;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmFormDialog mBpedit_mbpingedit_form_annotation;
!(BX)    };
!(BX)    callbacks {
!(BX)        callbacks Style_useReasons;
!(BX)    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
!(BX)};

object mBpedit_mbpingedit_pushButton_filters_dismiss : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Dismiss");
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 10;
        XmNx = 260;
        XmNy = 311;
        XmNwidth = 90;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure BxUnmanageCB("mbpingedit_bulletinBoard_filter" &
 "s");
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_pushButton_filters_apply : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Apply");
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 10;
        XmNx = 40;
        XmNy = 311;
        XmNwidth = 90;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure do_mbpingedit_set_filters();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_pushButton_filters_reset : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Reset");
        XmNtopAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 10;
        XmNx = 150;
        XmNy = 311;
        XmNwidth = 90;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure do_mbpingedit_reset_filters();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_toggleButton_filters_medianspike : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Median", separate=true) &
 compound_string("Spike", separate=true) &
 compound_string("Filter");
        XmNx = 10;
        XmNy = 20;
        XmNwidth = 90;
        XmNheight = 60;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_scale_filters_medianspike : XmScale widget {
    arguments {
        arguments Style_use;
        XmNminimum = 1;
        XmNdecimalPoints = 0;
        XmNvalue = 10;
        XmNtitleString = compound_string("% Median Depth Threshold ");
        XmNshowArrows = TRUE;
        XmNshowValue = TRUE;
        XmNorientation = XmHORIZONTAL;
        XmNx = 100;
        XmNy = 10;
        XmNwidth = 260;
        XmNheight = 63;
    };
    controls {
        Xm_Title {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_toggleButton_filters_wrongside : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Wrong", separate=true) &
 compound_string("Side", separate=true) &
 compound_string("Filter");
        XmNx = 10;
        XmNy = 680;
        XmNwidth = 90;
        XmNheight = 60;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_scale_filters_wrongside : XmScale widget {
    arguments {
        arguments Style_use;
        XmNvalue = 10;
        XmNtitleString = compound_string("Beams from Center Threshold");
        XmNmaximum = 100;
        XmNshowArrows = TRUE;
        XmNshowValue = TRUE;
        XmNorientation = XmHORIZONTAL;
        XmNx = 100;
        XmNy = 670;
        XmNwidth = 260;
        XmNheight = 63;
    };
    controls {
        Xm_Title {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_separator3 : XmSeparator widget {
    arguments {
        arguments Style_use;
        XmNx = 10;
        XmNy = 360;
        XmNwidth = 350;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_toggleButton_filters_cutbeam : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Flag by", separate=true) &
 compound_string("Beam", separate=true) &
 compound_string("Number");
        XmNx = 10;
        XmNy = 240;
        XmNwidth = 90;
        XmNheight = 60;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_scale_filters_cutbeamstart : XmScale widget {
    arguments {
        arguments Style_use;
        XmNvalue = 10;
        XmNtitleString = compound_string("Start Flagging Beam Number");
        XmNmaximum = 100;
        XmNshowArrows = TRUE;
        XmNshowValue = TRUE;
        XmNorientation = XmHORIZONTAL;
        XmNx = 100;
        XmNy = 230;
        XmNwidth = 260;
        XmNheight = 63;
    };
    controls {
        Xm_Title {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_scale_filters_cutbeamend : XmScale widget {
    arguments {
        arguments Style_use;
        XmNvalue = 10;
        XmNtitleString = compound_string("End Flagging Beam Number");
        XmNmaximum = 100;
        XmNshowArrows = TRUE;
        XmNshowValue = TRUE;
        XmNorientation = XmHORIZONTAL;
        XmNx = 100;
        XmNy = 290;
        XmNwidth = 260;
        XmNheight = 63;
    };
    controls {
        Xm_Title {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_separator4 : XmSeparator widget {
    arguments {
        arguments Style_use;
        XmNx = 10;
        XmNy = 210;
        XmNwidth = 350;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_toggleButton_filters_cutdistance : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Flag by", separate=true) &
 compound_string("Distance");
        XmNx = 10;
        XmNy = 390;
        XmNwidth = 90;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_scale_filters_cutdistancestart : XmScale widget {
    arguments {
        arguments Style_use;
        XmNdecimalPoints = 2;
        XmNvalue = 1000;
        XmNtitleString = compound_string("Start Flagging Distance (m)");
        XmNmaximum = 10000;
        XmNshowArrows = TRUE;
        XmNscaleMultiple = 1;
        XmNshowValue = TRUE;
        XmNorientation = XmHORIZONTAL;
        XmNx = 100;
        XmNy = 380;
        XmNwidth = 260;
        XmNheight = 63;
    };
    controls {
        Xm_Title {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_scale_filters_cutdistanceend : XmScale widget {
    arguments {
        arguments Style_use;
        XmNdecimalPoints = 2;
        XmNvalue = 1000;
        XmNtitleString = compound_string("End Flagging Distance (m)");
        XmNmaximum = 10000;
        XmNshowArrows = TRUE;
        XmNscaleMultiple = 1;
        XmNshowValue = TRUE;
        XmNorientation = XmHORIZONTAL;
        XmNx = 100;
        XmNy = 440;
        XmNwidth = 260;
        XmNheight = 63;
    };
    controls {
        Xm_Title {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_separator5 : XmSeparator widget {
    arguments {
        arguments Style_use;
        XmNx = 10;
        XmNy = 500;
        XmNwidth = 350;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_toggleButton_filters_cutangle : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Flag by", separate=true) &
 compound_string("Beam", separate=true) &
 compound_string("Angle");
        XmNx = 10;
        XmNy = 530;
        XmNwidth = 80;
        XmNheight = 60;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_scale_filters_cutanglestart : XmScale widget {
    arguments {
        arguments Style_use;
        XmNdecimalPoints = 2;
        XmNvalue = 1000;
        XmNtitleString = compound_string("Start Flagging Angle (deg)");
        XmNmaximum = 10000;
        XmNshowArrows = TRUE;
        XmNscaleMultiple = 1;
        XmNshowValue = TRUE;
        XmNorientation = XmHORIZONTAL;
        XmNx = 100;
        XmNy = 520;
        XmNwidth = 260;
        XmNheight = 63;
    };
    controls {
        Xm_Title {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_scale_filters_cutangleend : XmScale widget {
    arguments {
        arguments Style_use;
        XmNdecimalPoints = 2;
        XmNvalue = 1000;
        XmNtitleString = compound_string("End Flagging Angle (deg)");
        XmNmaximum = 10000;
        XmNshowArrows = TRUE;
        XmNscaleMultiple = 1;
        XmNshowValue = TRUE;
        XmNorientation = XmHORIZONTAL;
        XmNx = 100;
        XmNy = 580;
        XmNwidth = 260;
        XmNheight = 63;
    };
    controls {
        Xm_Title {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_separator6 : XmSeparator widget {
    arguments {
        arguments Style_use;
        XmNx = 10;
        XmNy = 650;
        XmNwidth = 350;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_scale_median_local_xtrack : XmScale widget {
    arguments {
        arguments Style_use;
        XmNminimum = 1;
        XmNvalue = 5;
        XmNtitleString = compound_string("Median Acrosstrack Dimension");
        XmNshowArrows = TRUE;
        XmNscaleMultiple = 1;
        XmNshowValue = TRUE;
        XmNorientation = XmHORIZONTAL;
        XmNx = 100;
        XmNy = 80;
        XmNwidth = 260;
        XmNheight = 63;
    };
    controls {
        Xm_Title {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mbpingedit_check_median_xtrack();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_scale_median_local_ltrack : XmScale widget {
    arguments {
        arguments Style_use;
        XmNminimum = 1;
        XmNvalue = 1;
        XmNtitleString = compound_string("Median Alongtrack Dimension");
        XmNmaximum = 20;
        XmNshowArrows = TRUE;
        XmNscaleMultiple = 1;
        XmNshowValue = TRUE;
        XmNorientation = XmHORIZONTAL;
        XmNx = 100;
        XmNy = 140;
        XmNwidth = 260;
        XmNheight = 63;
    };
    controls {
        Xm_Title {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mbpingedit_check_median_ltrack();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_radioBox_mediancalc : XmRadioBox widget {
    arguments {
        arguments Style_use;
        XmNx = 90;
        XmNy = 70;
        XmNwidth = 16;
        XmNheight = 16;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_bulletinBoard_scrollfilters : XmBulletinBoard widget {
    arguments {
        arguments Style_use;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNwidth = 375;
        XmNheight = 810;
    };
    controls {
         managed XmRadioBox mBpedit_mbpingedit_radioBox_mediancalc;
         managed XmScale mBpedit_mbpingedit_scale_median_local_ltrack;
         managed XmScale mBpedit_mbpingedit_scale_median_local_xtrack;
         managed XmSeparator mBpedit_mbpingedit_separator6;
         managed XmScale mBpedit_mbpingedit_scale_filters_cutangleend;
         managed XmScale mBpedit_mbpingedit_scale_filters_cutanglestart;
         managed XmToggleButton mBpedit_mbpingedit_toggleButton_filters_cutangle;
         managed XmSeparator mBpedit_mbpingedit_separator5;
         managed XmScale mBpedit_mbpingedit_scale_filters_cutdistanceend;
         managed XmScale mBpedit_mbpingedit_scale_filters_cutdistancestart;
         managed XmToggleButton mBpedit_mbpingedit_toggleButton_filters_cutdistance;
         managed XmSeparator mBpedit_mbpingedit_separator4;
         managed XmScale mBpedit_mbpingedit_scale_filters_cutbeamend;
         managed XmScale mBpedit_mbpingedit_scale_filters_cutbeamstart;
         managed XmToggleButton mBpedit_mbpingedit_toggleButton_filters_cutbeam;
         managed XmSeparator mBpedit_mbpingedit_separator3;
         managed XmScale mBpedit_mbpingedit_scale_filters_wrongside;
         managed XmToggleButton mBpedit_mbpingedit_toggleButton_filters_wrongside;
         managed XmScale mBpedit_mbpingedit_scale_filters_medianspike;
         managed XmToggleButton mBpedit_mbpingedit_toggleButton_filters_medianspike;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_scrolledWindow_filters : XmScrolledWindow widget {
    arguments {
        arguments Style_use;
        XmNscrollingPolicy = XmAUTOMATIC;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 60;
        XmNleftOffset = 0;
        XmNrightOffset = 4;
        XmNtopOffset = 0;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 404;
        XmNheight = 301;
    };
    controls {
        Xm_VertScrollBar {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
        Xm_HorScrollBar {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
         managed XmBulletinBoard mBpedit_mbpingedit_bulletinBoard_scrollfilters;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_form_filters : XmFormDialog widget {
    arguments {
        arguments Style_use;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 950;
        XmNy = 657;
        XmNwidth = 408;
        XmNheight = 361;
    };
    controls {
         managed XmScrolledWindow mBpedit_scrolledWindow_filters;
         managed XmPushButton mBpedit_mbpingedit_pushButton_filters_reset;
         managed XmPushButton mBpedit_mbpingedit_pushButton_filters_apply;
         managed XmPushButton mBpedit_mbpingedit_pushButton_filters_dismiss;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

!(BX)object mBpedit_mbpingedit_dialogShell_filters : XmDialogShell widget {
!(BX)    arguments {
!(BX)        arguments Style_use;
!(BX)        XmNtitle = "MBeditviz Swath View Filters";
!(BX)        XmNx = 950;
!(BX)        XmNy = 657;
!(BX)        XmNwidth = 408;
!(BX)        XmNheight = 361;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmFormDialog mBpedit_mbpingedit_form_filters;
!(BX)    };
!(BX)    callbacks {
!(BX)        callbacks Style_useReasons;
!(BX)    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
!(BX)};

object mBpedit_mbpingedit_canvas : XmDrawingArea widget {
    arguments {
        arguments Style_use;
        XmNborderWidth = 1;
        XmNbackground = color('white');
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 2;
        XmNleftOffset = 0;
        XmNrightOffset = 2;
        XmNtopOffset = 150;
        XmNx = 0;
        XmNy = 150;
        XmNwidth = 1000;
        XmNheight = 540;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNinputCallback = procedure do_mbpingedit_event();
        XmNexposeCallback = procedure do_mbpingedit_expose();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_togglebutton_toggle : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Toggle");
        XmNwidth = 75;
        XmNheight = 28;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mbpingedit_mode_toggle();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_togglebutton_pick : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Pick");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mbpingedit_mode_pick();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_togglebutton_erase : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Erase");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mbpingedit_mode_erase();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_togglebutton_restore : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Restore");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mbpingedit_mode_restore();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_togglebutton_grab : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Grab");
        XmNwidth = 62;
        XmNheight = 28;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mbpingedit_mode_grab();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_togglebutton_info : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Info");
        XmNwidth = 54;
        XmNheight = 28;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mbpingedit_mode_info();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_setting_mode : XmRowColumn widget {
    arguments {
        arguments Style_use;
        XmNnumColumns = 1;
        XmNpacking = XmPACK_TIGHT;
        XmNradioBehavior = true;
        XmNspacing = 0;
        XmNorientation = XmHORIZONTAL;
        XmNx = 120;
        XmNy = 120;
        XmNwidth = 405;
        XmNheight = 34;
    };
    controls {
         managed XmToggleButton mBpedit_mbpingedit_togglebutton_toggle;
         managed XmToggleButton mBpedit_mbpingedit_togglebutton_pick;
         managed XmToggleButton mBpedit_mbpingedit_togglebutton_erase;
         managed XmToggleButton mBpedit_mbpingedit_togglebutton_restore;
         managed XmToggleButton mBpedit_mbpingedit_togglebutton_grab;
         managed XmToggleButton mBpedit_mbpingedit_togglebutton_info;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_setting_mode_label : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Mode:");
        XmNmarginWidth = 0;
        XmNx = 70;
        XmNy = 120;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_slider_number_max_step_label : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("20");
        XmNrecomputeSize = false;
        XmNx = 960;
        XmNy = 90;
        XmNwidth = 50;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_slider_number_step : XmScale widget {
    arguments {
        arguments Style_use;
        XmNminimum = 1;
        XmNvalue = 5;
        XmNmaximum = 20;
        XmNscaleHeight = 15;
        XmNshowArrows = TRUE;
        XmNscaleMultiple = 1;
        XmNshowValue = TRUE;
        XmNorientation = XmHORIZONTAL;
        XmNx = 670;
        XmNy = 80;
        XmNwidth = 290;
        XmNheight = 34;
    };
    controls {
        Xm_Title {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mbpingedit_number_step();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_slider_number_step_label : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_END;
        XmNlabelString = compound_string("Pings to step:  1");
        XmNx = 550;
        XmNy = 90;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_slider_num_pings_max_label : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("20");
        XmNrecomputeSize = false;
        XmNx = 960;
        XmNy = 50;
        XmNwidth = 50;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_slider_number_pings : XmScale widget {
    arguments {
        arguments Style_use;
        XmNminimum = 1;
        XmNvalue = 10;
        XmNmaximum = 20;
        XmNscaleHeight = 15;
        XmNshowArrows = TRUE;
        XmNscaleMultiple = 1;
        XmNshowValue = TRUE;
        XmNorientation = XmHORIZONTAL;
        XmNx = 670;
        XmNy = 40;
        XmNwidth = 290;
        XmNheight = 34;
    };
    controls {
        Xm_Title {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mbpingedit_number_pings();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_slider_number_pings_label : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_END;
        XmNlabelString = compound_string("Pings shown:   1");
        XmNx = 550;
        XmNy = 50;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_slider_mbpingedit_scale_y_max_label : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("20.00");
        XmNrecomputeSize = false;
        XmNx = 470;
        XmNy = 90;
        XmNwidth = 65;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_slider_mbpingedit_scale_y : XmScale widget {
    arguments {
        arguments Style_use;
        XmNminimum = 1;
        XmNdecimalPoints = 2;
        XmNvalue = 100;
        XmNmaximum = 2000;
        XmNscaleHeight = 15;
        XmNshowArrows = TRUE;
        XmNscaleMultiple = 1;
        XmNshowValue = TRUE;
        XmNorientation = XmHORIZONTAL;
        XmNx = 210;
        XmNy = 80;
        XmNwidth = 260;
        XmNheight = 34;
    };
    controls {
        Xm_Title {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mbpingedit_scale_y();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_slider_mbpingedit_scale_y_label : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_END;
        XmNlabelString = compound_string("Vertical Exaggeration: 0.01");
        XmNx = 20;
        XmNy = 90;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_slider_mbpingedit_scale_x_max_label : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("20000");
        XmNrecomputeSize = false;
        XmNx = 470;
        XmNy = 50;
        XmNwidth = 60;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_slider_mbpingedit_scale_x : XmScale widget {
    arguments {
        arguments Style_use;
        XmNminimum = 1;
        XmNvalue = 1000;
        XmNmaximum = 20000;
        XmNscaleHeight = 15;
        XmNshowArrows = TRUE;
        XmNscaleMultiple = 1;
        XmNshowValue = TRUE;
        XmNorientation = XmHORIZONTAL;
        XmNx = 210;
        XmNy = 40;
        XmNwidth = 260;
        XmNheight = 34;
    };
    controls {
        Xm_Title {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mbpingedit_scale_x();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_slider_mbpingedit_scale_x_label : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_END;
        XmNlabelString = compound_string("Acrosstrack Width (m):  1");
        XmNx = 30;
        XmNy = 50;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_pushButton_reverse : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Reverse");
        XmNx = 180;
        XmNy = 0;
        XmNwidth = 80;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure do_mbpingedit_reverse();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_pushButton_forward : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Forward");
        XmNx = 270;
        XmNy = 0;
        XmNwidth = 80;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure do_mbpingedit_forward();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_pushButton_dismiss : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Dismiss");
        XmNx = 910;
        XmNy = 0;
        XmNwidth = 80;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure do_mbpingedit_dismiss();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_pushButton_next : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Next File");
        XmNx = 360;
        XmNy = 0;
        XmNwidth = 90;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure do_mbpingedit_next_buffer();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_pushButton_goto : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Go To Specified Time...");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure BxManageCB("mbpingedit_bulletinBoard_goto");
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_pushButton_buffer : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Buffer Controls...");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure BxManageCB("mbpingedit_bulletinBoard_buffer" &
 "");
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_pushButton_annotation : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Annotation...");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure BxManageCB("mbpingedit_bulletinBoard_annota" &
 "tion");
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_pushButton_filters : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Filters...");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure BxManageCB("mbpingedit_bulletinBoard_filter" &
 "s");
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_separator7 : XmSeparator widget {
    arguments {
        arguments Style_use;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_toggleButton_reverse_keys : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Reverse Right/Left Key Macros");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mbpingedit_reverse_keys();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_toggleButton_reverse_mouse : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Reverse Mouse Buttons");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mbpingedit_reverse_mouse();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_pulldownMenu_controls : XmPulldownMenu widget {
    arguments {
        arguments Style_use;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 240;
        XmNheight = 150;
    };
    controls {
         managed XmPushButton mBpedit_mbpingedit_pushButton_goto;
         managed XmPushButton mBpedit_mbpingedit_pushButton_buffer;
         managed XmPushButton mBpedit_mbpingedit_pushButton_annotation;
         managed XmPushButton mBpedit_mbpingedit_pushButton_filters;
         managed XmSeparator mBpedit_mbpingedit_separator7;
         managed XmToggleButton mBpedit_mbpingedit_toggleButton_reverse_keys;
         managed XmToggleButton mBpedit_mbpingedit_toggleButton_reverse_mouse;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_cascadeButton_controls : XmCascadeButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Controls");
        XmNx = 5;
        XmNy = 5;
        XmNwidth = 77;
        XmNheight = 24;
    };
    controls {
         unmanaged XmPulldownMenu mBpedit_mbpingedit_pulldownMenu_controls;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_menuBar_controls : XmMenuBar widget {
    arguments {
        arguments Style_use;
        XmNx = 80;
        XmNy = 0;
        XmNwidth = 87;
        XmNheight = 34;
    };
    controls {
         managed XmCascadeButton mBpedit_mbpingedit_cascadeButton_controls;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_pushButton_unflag_view : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Unflag View");
        XmNx = 610;
        XmNy = 0;
        XmNwidth = 120;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure do_mbpingedit_unflag_view();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_pushButton_unflag_all : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Unflag Forward");
        XmNx = 730;
        XmNy = 0;
        XmNwidth = 120;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure do_mbpingedit_unflag_all();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_toggleButton_view_waterfall : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Waterfall View");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mbpingedit_view_mode();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_toggleButton_view_alongtrack : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Alongtrack View");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mbpingedit_view_mode();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_toggleButton_view_acrosstrack : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Acrosstrack View");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mbpingedit_view_mode();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_separator2 : XmSeparator widget {
    arguments {
        arguments Style_use;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_toggleButton_show_flagged_on : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Show Flagged Profile");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mbpingedit_show_flagged();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_toggleButton_show_detects : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Show Bottom Detect Algorithms");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mbpingedit_show_detects();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_separator9 : XmSeparator widget {
    arguments {
        arguments Style_use;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_toggleButton_show_wideplot : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Wide Bathymetry Profiles");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mbpingedit_show_time();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_toggleButton_show_time : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Print Time Stamps");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mbpingedit_show_time();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_toggleButton_show_interval : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Plot Ping Interval");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mbpingedit_show_time();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_toggleButton_show_lon : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Plot Longitude");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mbpingedit_show_time();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_toggleButton_show_latitude : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Plot Latitude");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mbpingedit_show_time();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_toggleButton_show_heading : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Plot Heading");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mbpingedit_show_time();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_toggleButton_show_speed : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Plot Speed");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mbpingedit_show_time();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_toggleButton_show_depth : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Plot Center Beam Depth");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mbpingedit_show_time();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_toggleButton_show_altitude : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Plot Sonar Altitude");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mbpingedit_show_time();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_toggleButton_show_sonardepth : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Plot Sonar Depth");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mbpingedit_show_time();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_toggleButton_show_roll : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Plot Roll");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mbpingedit_show_time();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_toggleButton_show_pitch : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Plot Pitch");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mbpingedit_show_time();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_toggleButton_show_heave : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Plot Heave");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mbpingedit_show_time();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_pulldownMenu_view : XmPulldownMenu widget {
    arguments {
        arguments Style_use;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 247;
        XmNheight = 440;
    };
    controls {
         managed XmToggleButton mBpedit_mbpingedit_toggleButton_view_waterfall;
         managed XmToggleButton mBpedit_mbpingedit_toggleButton_view_alongtrack;
         managed XmToggleButton mBpedit_mbpingedit_toggleButton_view_acrosstrack;
         managed XmSeparator mBpedit_mbpingedit_separator2;
         managed XmToggleButton mBpedit_mbpingedit_toggleButton_show_flagged_on;
         managed XmToggleButton mBpedit_mbpingedit_toggleButton_show_detects;
         managed XmSeparator mBpedit_mbpingedit_separator9;
         managed XmToggleButton mBpedit_mbpingedit_toggleButton_show_wideplot;
         managed XmToggleButton mBpedit_mbpingedit_toggleButton_show_time;
         managed XmToggleButton mBpedit_mbpingedit_toggleButton_show_interval;
         managed XmToggleButton mBpedit_mbpingedit_toggleButton_show_lon;
         managed XmToggleButton mBpedit_mbpingedit_toggleButton_show_latitude;
         managed XmToggleButton mBpedit_mbpingedit_toggleButton_show_heading;
         managed XmToggleButton mBpedit_mbpingedit_toggleButton_show_speed;
         managed XmToggleButton mBpedit_mbpingedit_toggleButton_show_depth;
         managed XmToggleButton mBpedit_mbpingedit_toggleButton_show_altitude;
         managed XmToggleButton mBpedit_mbpingedit_toggleButton_show_sonardepth;
         managed XmToggleButton mBpedit_mbpingedit_toggleButton_show_roll;
         managed XmToggleButton mBpedit_mbpingedit_toggleButton_show_pitch;
         managed XmToggleButton mBpedit_mbpingedit_toggleButton_show_heave;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_cascadeButton_view : XmCascadeButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("View");
        XmNx = 5;
        XmNy = 5;
        XmNwidth = 48;
        XmNheight = 24;
    };
    controls {
         unmanaged XmPulldownMenu mBpedit_mbpingedit_pulldownMenu_view;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_menuBar_view : XmMenuBar widget {
    arguments {
        arguments Style_use;
        XmNpacking = XmPACK_TIGHT;
        XmNx = 10;
        XmNy = 0;
        XmNwidth = 58;
        XmNheight = 34;
    };
    controls {
         managed XmCascadeButton mBpedit_mbpingedit_cascadeButton_view;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_pushButton_flag_view : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Flag View");
        XmNx = 480;
        XmNy = 0;
        XmNwidth = 120;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure do_mbpingedit_flag_view();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_controls : XmBulletinBoard widget {
    arguments {
        arguments Style_use;
        XmNmarginHeight = 0;
        XmNmarginWidth = 0;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNrightOffset = -1;
        XmNtopOffset = 0;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 1005;
        XmNheight = 154;
    };
    controls {
         managed XmPushButton mBpedit_mbpingedit_pushButton_flag_view;
         managed XmMenuBar mBpedit_mbpingedit_menuBar_view;
         managed XmPushButton mBpedit_mbpingedit_pushButton_unflag_all;
         managed XmPushButton mBpedit_mbpingedit_pushButton_unflag_view;
         managed XmMenuBar mBpedit_mbpingedit_menuBar_controls;
         managed XmPushButton mBpedit_mbpingedit_pushButton_next;
         managed XmPushButton mBpedit_mbpingedit_pushButton_dismiss;
         managed XmPushButton mBpedit_mbpingedit_pushButton_forward;
         managed XmPushButton mBpedit_mbpingedit_pushButton_reverse;
         managed XmLabel mBpedit_mbpingedit_slider_mbpingedit_scale_x_label;
         managed XmScale mBpedit_mbpingedit_slider_mbpingedit_scale_x;
         managed XmLabel mBpedit_mbpingedit_slider_mbpingedit_scale_x_max_label;
         managed XmLabel mBpedit_mbpingedit_slider_mbpingedit_scale_y_label;
         managed XmScale mBpedit_mbpingedit_slider_mbpingedit_scale_y;
         managed XmLabel mBpedit_mbpingedit_slider_mbpingedit_scale_y_max_label;
         managed XmLabel mBpedit_mbpingedit_slider_number_pings_label;
         managed XmScale mBpedit_mbpingedit_slider_number_pings;
         managed XmLabel mBpedit_mbpingedit_slider_num_pings_max_label;
         managed XmLabel mBpedit_mbpingedit_slider_number_step_label;
         managed XmScale mBpedit_mbpingedit_slider_number_step;
         managed XmLabel mBpedit_mbpingedit_slider_number_max_step_label;
         managed XmLabel mBpedit_mbpingedit_setting_mode_label;
         managed XmRowColumn mBpedit_mbpingedit_setting_mode;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mBpedit_mbpingedit_form : XmForm widget {
    arguments {
!(BX) BxNclassOnly = "MBpedit";
!(BX) BxNsubclassDerived = "False";
!(BX) BxNclassOnlyFile = "False";
!(BX) BxNbaseInclude = asciz_string_table('');
!(BX) BxNderivedInclude = asciz_string_table('');
!(BX) BxNderived = "MBpeditDerived";
!(BX) BxNfilebase = "MBpeditDerived";
!(BX) BxNclassFilebase = "MBpedit";
!(BX) BxNclassGeometry = "1004x694+452+354";
!(BX) BxNgenerate = "True";
!(BX) BxNreference = "True";
!(BX) BxNpaletteGroup = "Project Classes";
!(BX) BxNpaletteName = "MBpedit";
!(BX) BxNpaletteGeom = "+0+0";
        arguments Style_use;
        XmNdialogTitle = compound_string("MBeditviz Swath View");
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 452;
        XmNy = 354;
        XmNwidth = 1004;
        XmNheight = 694;
    };
    controls {
         managed XmBulletinBoard mBpedit_mbpingedit_controls;
         managed XmDrawingArea mBpedit_mbpingedit_canvas;
!(BX)         unmanaged XmDialogShell mBpedit_mbpingedit_dialogShell_filters;
!(BX)         unmanaged XmDialogShell mBpedit_mbpingedit_dialogShell_annotation;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};
end module;
