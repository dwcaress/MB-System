#!/bin/sh
#
#  map_swath
#
#  Interactive front end to swath_process.sh (also swath_plot.sh and quick_map.sh)
#
#  This script is part of a suite of scripts that allow fully automated map generation
#  from data logged by the em300.
#
#  usage:  map_swath
#          Then respond to the questions
#          A map type and boundaries are required
#          all other responses can be left blank
#
#          The map type and boundaries may be provided by setting 
#          the environment variables MAPTYPE and
#          REGION to the appropriate values before running the script.
#
#  Author : Gordon Keith, CSIRO, 28 April 2004 ss0404
#
#  Revision history:
#    20040420 GJK - Initial version
#    20040428 GJK - Added gridding support, it works, it needs work, not fully tested.
#    20050627 GJK - Added support for reading answers from input file
#    20070808 GJK - log answers to a command file


if [ $# -gt 0 ] ; then
#    cat $@ | awk ' { if (substr($1, 0, 1) != "#")  {sub ("[^:]*:", "") ; print $0 }}' | $0
        cat $@ | awk ' { if (substr($1, 0, 1) != "#") print $0 }' | sed s/[^:]*:// | $0


    exit
fi

CMDFILE=map_swath$$.cmd

gotmaptype=0

while [ $gotmaptype = 0 ]; do

	if [ -z "$MAPTYPE" ] ; then 

		echo 	
		echo Please enter type of map:
		echo   "1: Color fill of bathymetry data."
		echo   "2: Color shaded relief bathymetry. (colour sun illumination)"
		echo   "3: Color fill of slope data."
		echo   "4: Grayscale fill of amplitude data. (backscatter)"
		echo   "5: Grayscale fill of sidescan data."
		echo   "6: Bathymetry shaded using amplitude data."
		echo   "7: Vessel track only"
		echo   "8: Quick and dirty color shaded relief bathymetry"
		echo   "9: Grayscale relief bathymetry (sun illumination)"
		echo 

		read MAPTYPE
	fi

	case  "$MAPTYPE"	in
	1)
		PLOT_OPTIONS="$PLOT_OPTIONS -G1 -MGS-1"
		GRID_OPTIONS="$GRID_OPTIONS -A1 -N "
		GRID=1
		gotmaptype=1
	;;
	2)
		PLOT_OPTIONS="$PLOT_OPTIONS -G2 -MGS-1"
		GRID_OPTIONS="$GRID_OPTIONS -A1 -N "
		GRID=1
		gotmaptype=1
	;;
	3)
		PLOT_OPTIONS="$PLOT_OPTIONS -G4"
		GRID_OPTIONS="$GRID_OPTIONS -A1 -N"
		GRID=1
		gotmaptype=1
	;;

	4)
		PLOT_OPTIONS="$PLOT_OPTIONS -G1 -W1/4 -D"
		GRID_OPTIONS="$GRID_OPTIONS -A3 -N"
		GRID=1
		gotmaptype=1
	;;

	5)
		PLOT_OPTIONS="$PLOT_OPTIONS -G1 -W1/4 -D"
		GRID_OPTIONS="$GRID_OPTIONS -A4 -N"
		GRID=1
		gotmaptype=1
	;;
        6)
		echo "Please enter name of backscatter .grd file:"
		ls -l *.grd
		read BACK_FILE
		PLOT_OPTIONS="$PLOT_OPTIONS -G3 -MGS-1"
		GRID_OPTIONS="$GRID_OPTIONS -A1 -N"
		gotmaptype=1
		GRID=1
        ;;
                
	7)
		GRID=0
		gotmaptype=1
	;;

	8)
		PLOT_OPTIONS=-G2
		GRID=0
		gotmaptype=1
	;;
	9)
                PLOT_OPTIONS="$PLOT_OPTIONS -G2 -MGS-1 -W1/5"
                GRID_OPTIONS="$GRID_OPTIONS -A1 -N"
                GRID=1
		MAPTYPE=2
                gotmaptype=1
        ;;

	*)
		echo Map type not recognised.
		MAPTYPE=
		sleep 1
	;;

	esac
done

echo Map type:		$MAPTYPE	> $CMDFILE

if [ -z "$REGION" ] ; then
	gotregion=0
else
	gotregion=1
fi

while [ $gotregion -eq 0 ] ; do 

	echo
	echo "Please enter northern limit of map in decimal degrees (negative for south) or dd:mm:ss"
	read north

	case "$north" in
	*/*)
		REGION=$north
		;;
	*)
		echo
		echo Please enter southern limit of map in decimal degrees
		read south

		echo
		echo Please enter western limit of map in decimal degrees
		read west

		echo
		echo Please enter eastern limit of map in decimal degrees
		read east

		REGION=$west/$east/$south/$north
		;;
	esac

	if [ "OK" = "`echo $REGION | awk -F/ '/:/ {print "OK"} !/:/ { if ( $1 + 0 < $2 + 0  && $3 + 0 < $4 + 0 )  print "OK"  }'`" ] ; then
		echo $REGION
		echo REGION:		$REGION		>> $CMDFILE
		gotregion=1
	else
		echo Please reenter boundaries, they don\'t seem correct
		if [ ! $north -gt $south ] ; then
			echo North must be greater than South
		fi
		if [ ! $east -gt $west ] ; then
			echo East must be greater than west
		fi
	fi
done

echo
echo "Would you like more options (y/n/a) [n]?"
read options
echo Options:		$options		>> $CMDFILE

adprompt=0
if [ "$options" = "a" -o "$options" = "A" ] ; then
	adprompt=1
	options=y
fi

if [ "$options" = "y" -o "$options" = "Y" ] ; then

	map=$REGION_NAME
	if [ -z "$map" ] ; then
	    map=map
	fi

	echo 
	echo "Map file name prefix (no spaces or /) [$map]"
	if [ $adprompt = 1 ] ; then
		echo "surveyarea_grid_level_variable_contours_track_scale_size"
	fi
	read MAPNAME
	echo Map file name:	$MAPNAME		>> $CMDFILE

	if [ -z "$MAPNAME" ] ; then
		MAPNAME=$map
	else
		MAPNAME=`echo $MAPNAME | sed "s/ /_/g" | sed "s:/:~:g"`
	fi
	export MAPNAME

	if [ $adprompt = 1 ] ; then
		
		lat0=`echo $REGION | awk -F/ '{ print (($3 + $4) / 2) }'`
		lon0=`echo $REGION | awk -F/ '{ print (($1 + $2) / 2) }'`

	
		echo
		echo "Select map scale [0]"
		echo "0:  Automatic"
		echo "1:  1:100,000	"
		echo "2:  1:25,000	"
		echo "3:  1:150,000	"
		echo "5:  1:50,000	"
		echo "7:  1:75,000	"
		echo "10, 20, 25, 50, 75, 100, 125, 150, 200, 250, 500, 750, 1000:  1:n,000"
		echo "any plot option starting with -"
		read MAPSCALE
		echo Map scale:		$MAPSCALE		>> $CMDFILE
		
		case "$MAPSCALE" in
		1)	mapscale=100000
		;;
		2)	mapscale=25000
		;;
		3)	mapscale=150000
		;;
		5)	mapscale=50000
		;;
		7)	mapscale=75000
		;;
		-*)	PLOT_OPTIONS="$PLOT_OPTIONS $MAPSCALE"
			mapscale=""
		;;
		0)	mapscale=""
		;;
		"")	
		;;
		*)	mapscale=${MAPSCALE}000
		;;
		esac

		if [ ! -z "$mapscale" ] ; then
			PLOT_OPTIONS="$PLOT_OPTIONS -Jm$lon0/$lat0/1:$mapscale"
		fi
	fi

	if [ $MAPTYPE != 7 -a $MAPTYPE != 8 ] ; then
		echo
		echo "Would you like a GeoTIFF (y/n) [n]?"
		read tiff
		echo TIFF:		$tiff		>> $CMDFILE

		if [ "y" = "$tiff" -o "Y" = "$tiff" ] ; then
			TIFF_OPTIONS=$PLOT_OPTIONS
		fi

		if [ $adprompt = 1 ] ; then

	                echo
        	        echo "Would you like a 3D plot (y/n) [n]?"
                	read plot3d
			echo 3D plot:		$plot3d		>> $CMDFILE

                	if [ "y" = "$plot3d" -o "Y" = "$plot3d" ] ; then
                        	PLOT3D=true
				export PLOT3D
                	fi
		fi
	fi
	

	echo
	echo Please enter a map title [$MAPNAME]
	read title
	echo Title:		$title		>> $CMDFILE

	if [ ! -z "$title" ]; then
		LABEL=$title
		export LABEL
	fi

	echo 
	echo Please enter paper size [A4]
	if [ $adprompt = 1 ] ; then
		echo Paper size may be followed by other plot options
	fi
	read paper
	echo Paper:		$paper		>> $CMDFILE
	
	scale=1001
	if [ -z "$paper" ] ; then
		paper=A4
	fi
	
	PLOT_OPTIONS="$PLOT_OPTIONS -P$paper"

        case "$paper" in
        a0|A0)
                 scale=4001
                 ;;
        esac
 

	if [ $MAPTYPE != 7 -a $MAPTYPE != 8 ] ; then
		echo
		echo Please enter grid size in metres
		if [ $adprompt = 1 ] ; then
			echo "n  n/m  or grid options eg -Dpixels/pixels -Ecellsize/cellsize -Smin_speed"
		fi
		read grid
		echo Grid size:		$grid		>> $CMDFILE

		if [ -z "$grid" ] ; then
			GRID_OPTIONS="$GRID_OPTIONS -D$scale/$scale"
		else
			case $grid in
			-*)
				GRID_OPTIONS="$GRID_OPTIONS $grid"
				;;
			*/*)
				GRID_OPTIONS="$GRID_OPTIONS -E$grid"
				;;
			*)
				GRID_OPTIONS="$GRID_OPTIONS -E$grid/$grid"
				;;
			esac
		fi

		echo
		echo "Please enter number of cells to interpolate (size of holes to fill)"
		if [ $adprompt = 1 ] ; then
                        echo "n   n/m  or grid options"
		fi
		read interp
		echo Interpolate:	$interp		>> $CMDFILE

		if [ ! -z "interp" ] ; then
                       case $interp in
                        -*)
                                GRID_OPTIONS="$GRID_OPTIONS $interp"
                                ;;
                        */*)
                                GRID_OPTIONS="$GRID_OPTIONS -C$interp"
                                ;;
                        *)
                                GRID_OPTIONS="$GRID_OPTIONS -C$interp/1"
                                ;;
                        esac
                fi

	fi


	echo
	echo Please enter contour interval - blank for none, 0 for default, c for 10/100, C for 100/1000.
	if [ $adprompt = 1 ] ; then
		echo "n [plot_options] eg 10 -MCA100t for 10m contours with 100m annotated."
	fi
	read contour
	echo Contour:		$contour		>> $CMDFILE

	if [  ! -z "$contour" ] ; then
		if [ "$contour" = 0 ] ; then
			PLOT_OPTIONS="$PLOT_OPTIONS -C"
		elif [ "$contour" = c ] ; then
			PLOT_OPTIONS="$PLOT_OPTIONS -C10 -MCA100t -MCQ20  -MCWc1"
                elif [ "$contour" = C ] ; then
                        PLOT_OPTIONS="$PLOT_OPTIONS -C100 -MCA1000t -MCQ20  -MCWc1"
		else
			PLOT_OPTIONS="$PLOT_OPTIONS -C$contour"
		fi
	fi

	if [ "$GRID" = "0" ] ; then
	    echo
	    echo 'Do you want vessel track (y/n/f) [n]?'
	    read track
	    echo Vessel track:		$track		>> $CMDFILE

	    
	    if [ "$track" = "y" -o "$track" = "Y" ] ; then
		PLOT_OPTIONS="$PLOT_OPTIONS -N"
	    elif [ "$track" = "f" -o "$track" = "F" ] ; then
		PLOT_OPTIONS="$PLOT_OPTIONS -NF"
	    elif [ "$track" = "n" -o "$track" = "N" ] ; then
		# do nothing, if MAPTYPE and is 7 and track is N you can get just contours
		MAPTYPE=$MAPTYPE
	    elif [ "$MAPTYPE" = 7 ] ; then
		# if they haven't said no they get one
		PLOT_OPTIONS="$PLOT_OPTIONS -N"
		
	    fi
	fi

	echo 
	echo "What format would you like latitude and longitude in: decimal degrees, minutes or seconds (d,m,s) [d]"
	read format
	echo LL format:		$format		>> $CMDFILE

	case "$format" in 
	m*|M*)
		PLOT_OPTIONS="$PLOT_OPTIONS -MGDPLOT_DEGREE_FORMAT/ddd:mm"
		;;
	s*|S*)
		PLOT_OPTIONS="$PLOT_OPTIONS -MGDPLOT_DEGREE_FORMAT/ddd:mm:ss"
		;;
	-*)
		PLOT_OPTIONS="$PLOT_OPTIONS $format"
		;;
	*)
		PLOT_OPTIONS="$PLOT_OPTIONS -MGDPLOT_DEGREE_FORMAT/D -Ba.1g.1f.01"
		;;
	esac
	
	if [ $MAPTYPE = 2 -o $MAPTYPE = 8 ] ; then
		echo 
		echo "Vertical exageration [4]?"
		read vertical
		echo Vertical exageration:		$vertical		>> $CMDFILE

		echo 
		echo "Sun direction [45]?"
		read azimuth
		echo Sun direction:		$azimuth		>> $CMDFILE

		if [ ! \( -z "$vertical" -a -z "$azimuth" \) ] ; then
			if [ -z "$vertical" ] ; then
				vertical=1
			fi
			if [ -z "$azimuth" ] ; then
				azimuth=0
			fi
			PLOT_OPTIONS="$PLOT_OPTIONS -A$vertical/$azimuth"
                        if [ "y" = "$tiff" -o "Y" = "$tiff" ] ; then
                                TIFF_OPTIONS="$TIFF_OPTIONS -A$vertical/$azimuth"
                        fi
		fi
	fi

	if [ $MAPTYPE = 3 ] ; then
		echo 
		echo "Use slope classes? (y/n/r) [y]"
		read slope_class
		echo Use slope classes:		$slope_class		>> $CMDFILE

		case "$slope_class" in
		N*|n* )

		
			echo 
			echo "Magnitude [1]?"
			read vertical
			echo Magnitude:		$vertical		>> $CMDFILE

			echo 
			echo "Zero value [0]?"
			read azimuth
			echo Zero value:		$azimuth		>> $CMDFILE

			if [ ! \( -z "$vertical" -a -z "$azimuth" \) ] ; then
				if [ -z "$vertical" ] ; then
					vertical=1
				fi
				if [ -z "$azimuth" ] ; then
					azimuth=0
				fi
				PLOT_OPTIONS="$PLOT_OPTIONS -A$vertical/$azimuth"
				if [ "y" = "$tiff" -o "Y" = "$tiff" ] ; then
                                	TIFF_OPTIONS="$TIFF_OPTIONS -A$vertical/$azimuth"
                        	fi
			fi
			;;
		r*|R* )
		    
                        MAP_CPT=$MAPNAME.cpt

			echo F 255 0 0 				>  $MAP_CPT
			echo N 255				>> $MAP_CPT
			echo 0 255 255 255	0.052 0 0 255	>> $MAP_CPT
			echo 0.052 0 255 255	0.087 0 255 255	>> $MAP_CPT
			echo 0.087 255 255 0 	0.176 255 255 0	>> $MAP_CPT


                        PLOT_OPTIONS="$PLOT_OPTIONS -W $MAP_CPT"
                        if [ "y" = "$tiff" -o "Y" = "$tiff" ] ; then
                                TIFF_OPTIONS="$TIFF_OPTIONS -W $MAP_CPT"
                        fi

			;;
		* )
                        MAP_CPT=$MAPNAME.cpt

			echo F 0				>  $MAP_CPT
			echo N 255				>> $MAP_CPT
		
			echo 0 255 255 255	0.035 255 255 0	>> $MAP_CPT
			echo 0.035 255 255 0	0.087 0 255 0	>> $MAP_CPT
			echo 0.087 0 255 0 	0.176 0 255 255	>> $MAP_CPT
			echo 0.176 0 255 255 	0.268 0 0 255	>> $MAP_CPT
			echo 0.268 0 0 255 	0.577 255 0 255	>> $MAP_CPT
			echo 0.577 255 0 255 	1.192 255 0 0	>> $MAP_CPT


                        PLOT_OPTIONS="$PLOT_OPTIONS -W $MAP_CPT"
                        if [ "y" = "$tiff" -o "Y" = "$tiff" ] ; then
                                TIFF_OPTIONS="$TIFF_OPTIONS -W $MAP_CPT"
                        fi

			;;
		esac		
	fi

	if [ $MAPTYPE = 4 ] ; then
		echo
		echo 'Shading: a) auto,  b)-45 to -15 dB, c) -45 to -15 dB red/green out of range d) 3 colour [b]?'
		if [ $adprompt = 1 ] ; then
			echo 'a, b, c, d or low/high eg -45/-15'
		fi

		read backrange
		echo Shading:		$backrange		>> $CMDFILE

		case "$backrange" in
		A*|a*)
			;;
		50/10|-50/-10)
			MAP_CPT=$MAPNAME.cpt
			echo N 255	> $MAP_CPT
			echo B 0 255 0	>> $MAP_CPT
			echo F 255 0 0	>> $MAP_CPT
			echo 14 255 19 224	>> $MAP_CPT
			echo 19 224 24 192	>> $MAP_CPT
			echo 24 192 29 160	>> $MAP_CPT
			echo 29 160 34 128	>> $MAP_CPT
			echo 34 128 39 96	>> $MAP_CPT
			echo 39  96 44 64	>> $MAP_CPT
			echo 44  64 49 32	>> $MAP_CPT
			echo 49  32 54 0	>> $MAP_CPT

			PLOT_OPTIONS="$PLOT_OPTIONS -W $MAP_CPT"
	                if [ "y" = "$tiff" -o "Y" = "$tiff" ] ; then
        	                TIFF_OPTIONS="$TIFF_OPTIONS -W $MAP_CPT"
                	fi

			;;
		45/15|-45/-15)
			MAP_CPT=$MAPNAME.cpt
			echo N 255	> $MAP_CPT
			echo B 0 255 0	>> $MAP_CPT
			echo F 255 0 0	>> $MAP_CPT
			echo 19 255 21 238 	>> $MAP_CPT
			echo 21 238 23 221	>> $MAP_CPT
			echo 23 221 25 204	>> $MAP_CPT
			echo 25 204 27 187	>> $MAP_CPT
			echo 27 187 29 170	>> $MAP_CPT
			echo 29 170 31 153	>> $MAP_CPT
			echo 31 153 33 136	>> $MAP_CPT
			echo 33 136 35 119	>> $MAP_CPT
 			echo 35 119 37 102	>> $MAP_CPT
			echo 37 102 39  85	>> $MAP_CPT
			echo 39  85 41  68	>> $MAP_CPT
			echo 41  68 43  51	>> $MAP_CPT
			echo 43  51 45  34	>> $MAP_CPT
			echo 45  34 47  17	>> $MAP_CPT
			echo 47  17 49   0	>> $MAP_CPT


			PLOT_OPTIONS="$PLOT_OPTIONS -W $MAP_CPT"
	                if [ "y" = "$tiff" -o "Y" = "$tiff" ] ; then
        	                TIFF_OPTIONS="$TIFF_OPTIONS -W $MAP_CPT"
                	fi

			;;
                40/20|-40/-20)
                        MAP_CPT=$MAPNAME.cpt
                        echo N 255      > $MAP_CPT
                        echo B 0 255 0 	>> $MAP_CPT
                        echo F 255 0 0 	>> $MAP_CPT
                        echo 24 255 26 229      >> $MAP_CPT
                        echo 26 229 28 204      >> $MAP_CPT
                        echo 28 204 30 178      >> $MAP_CPT
                        echo 30 178 32 153      >> $MAP_CPT
                        echo 32 153 34 127      >> $MAP_CPT
                        echo 34 127 36 102      >> $MAP_CPT
                        echo 36 102 38  75      >> $MAP_CPT
                        echo 38  75 40  51      >> $MAP_CPT
                        echo 40  51 42  25      >> $MAP_CPT
                        echo 42  25 44   0      >> $MAP_CPT

                        PLOT_OPTIONS="$PLOT_OPTIONS -W $MAP_CPT"
                        if [ "y" = "$tiff" -o "Y" = "$tiff" ] ; then
                                TIFF_OPTIONS="$TIFF_OPTIONS -W $MAP_CPT"
                        fi

                        ;;
		*/*)
			low=`echo $backrange | awk -F/ '{ print $1 + 64 }'`
			hig=`echo $backrange | awk -F/ '{ print $2 + 64 }'`
                        MAP_CPT=$MAPNAME.cpt
                        echo N 255      > $MAP_CPT
                        echo B 255	>> $MAP_CPT
                        echo F 0	>> $MAP_CPT
			echo $low 255 $hig 0 >> $MAP_CPT

                        PLOT_OPTIONS="$PLOT_OPTIONS -W $MAP_CPT"
                        if [ "y" = "$tiff" -o "Y" = "$tiff" ] ; then
                                TIFF_OPTIONS="$TIFF_OPTIONS -W $MAP_CPT"
                        fi

                        ;;
		*:*)
			low=`echo $backrange | awk -F: '{ print $1 + 64 }'`
			hig=`echo $backrange | awk -F: '{ print $2 + 64 }'`
                        MAP_CPT=$MAPNAME.cpt
                        echo N 255      > $MAP_CPT
                        echo B   0 255   0	>> $MAP_CPT
                        echo F 255   0   0	>> $MAP_CPT
			echo $low 255 255 0 $hig 255 255 0 >> $MAP_CPT
			echo $low 255 255 0 $hig 255 255 0 

                        PLOT_OPTIONS="$PLOT_OPTIONS -W $MAP_CPT"
                        if [ "y" = "$tiff" -o "Y" = "$tiff" ] ; then
                                TIFF_OPTIONS="$TIFF_OPTIONS -W $MAP_CPT"
                        fi

                        ;;
                c)
                        MAP_CPT=$MAPNAME.cpt
                        echo N 255      > $MAP_CPT
                        echo B 0 255 0 	>> $MAP_CPT
                        echo F 255 0 0 	>> $MAP_CPT
			echo 19 255 21 238 	>> $MAP_CPT
			echo 21 238 23 221	>> $MAP_CPT
			echo 23 221 25 204	>> $MAP_CPT
			echo 25 204 27 187	>> $MAP_CPT
			echo 27 187 29 170	>> $MAP_CPT
			echo 29 170 31 153	>> $MAP_CPT
			echo 31 153 33 136	>> $MAP_CPT
			echo 33 136 35 119	>> $MAP_CPT
 			echo 35 119 37 102	>> $MAP_CPT
			echo 37 102 39  85	>> $MAP_CPT
			echo 39  85 41  68	>> $MAP_CPT
			echo 41  68 43  51	>> $MAP_CPT
			echo 43  51 45  34	>> $MAP_CPT
			echo 45  34 47  17	>> $MAP_CPT
			echo 47  17 49   0	>> $MAP_CPT

                        PLOT_OPTIONS="$PLOT_OPTIONS -W $MAP_CPT"
                        if [ "y" = "$tiff" -o "Y" = "$tiff" ] ; then
                                TIFF_OPTIONS="$TIFF_OPTIONS -W $MAP_CPT"
                        fi

                        ;;
               d)
                        MAP_CPT=$MAPNAME.cpt
                        echo N 255      	> $MAP_CPT
			echo B 255		>> $MAP_CPT
			echo F 0 		>> $MAP_CPT
			echo 19 0   255 0 31 0   255 0	>> $MAP_CPT
			echo 31 255 255 0 33 255 255 0	>> $MAP_CPT
			echo 33	255   0 0 49 255   0 0  >> $MAP_CPT

                        PLOT_OPTIONS="$PLOT_OPTIONS -W $MAP_CPT"
                        if [ "y" = "$tiff" -o "Y" = "$tiff" ] ; then
                                TIFF_OPTIONS="$TIFF_OPTIONS -W $MAP_CPT"
                        fi

                        ;;

 
		*)
                        MAP_CPT=$MAPNAME.cpt
                        echo N 255      > $MAP_CPT
                        echo B 255   	>> $MAP_CPT
                        echo F 0  	>> $MAP_CPT
			echo 19 255 21 238 	>> $MAP_CPT
			echo 21 238 23 221	>> $MAP_CPT
			echo 23 221 25 204	>> $MAP_CPT
			echo 25 204 27 187	>> $MAP_CPT
			echo 27 187 29 170	>> $MAP_CPT
			echo 29 170 31 153	>> $MAP_CPT
			echo 31 153 33 136	>> $MAP_CPT
			echo 33 136 35 119	>> $MAP_CPT
 			echo 35 119 37 102	>> $MAP_CPT
			echo 37 102 39  85	>> $MAP_CPT
			echo 39  85 41  68	>> $MAP_CPT
			echo 41  68 43  51	>> $MAP_CPT
			echo 43  51 45  34	>> $MAP_CPT
			echo 45  34 47  17	>> $MAP_CPT
			echo 47  17 49   0	>> $MAP_CPT

                        PLOT_OPTIONS="$PLOT_OPTIONS -W $MAP_CPT"
                        if [ "y" = "$tiff" -o "Y" = "$tiff" ] ; then
                                TIFF_OPTIONS="$TIFF_OPTIONS -W $MAP_CPT"
                        fi

			;;
		esac
			
	fi

	if [ $MAPTYPE = 6 ] ; then
		echo "Minimum backscatter? [-40]"
		read minback
		echo Minimum backscatter:	$minback		>> $CMDFILE

		[ -z "$minback" ] && minback=-40

		echo "Maximum backscatter? [-20]"
		read maxback

		[ -z "$maxback" ] && maxback=-20
		echo Maximum backscatter:	$maxback		>> $CMDFILE

                INT_FILE=$MAPNAME.int
                grdmath $BACK_FILE $minback 64 ADD SUB $minback $maxback SUB DIV 2 MUL 1 SUB -1 MAX 1 MIN = $INT_FILE
                PLOT_OPTIONS="$PLOT_OPTIONS -K$INT_FILE "

                if [ "y" = "$tiff" -o "Y" = "$tiff" ] ; then
                        TIFF_OPTIONS="$TIFF_OPTIONS -K$INT_FILE"
                fi
	fi

	if [ $MAPTYPE != 6 -a $MAPTYPE != 7 -a $MAPTYPE != 8 ] ; then
		echo 
		echo "Do you want basic data cleaning? (y/n) [n]"
		if [ $adprompt = 1 ] ; then
                        echo "y for -C1.2 -U20 or clean options, "
			echo "eg -Amax_dev -Bmin/max_depth -Cmax_slope -Gfract_low/fract_high -Dmin_space/max_space"
		fi
		read clean
		echo Clean:		$clean		>> $CMDFILE

		case "$clean" in
		Y*|y*)
			;;
		-*)
			CLEAN_OPTIONS="$clean"
			;;
		*)
                        CLEAN_OPTIONS=NONE
                        ;;
		esac
	else
		CLEAN_OPTIONS=NONE
	fi

	echo
	echo "Save answers in:"
	read cmdfile

	if [ -z "$cmdfile" ] ; then
		rm $CMDFILE
	else
		mv $CMDFILE "$cmdfile"
	fi

else
	PLOT_OPTIONS="$PLOT_OPTIONS -PA4 -MGDPLOT_DEGREE_FORMAT/D -Ba.1g.1f.01 -MGU"
	GRID_OPTIONS="$GRID_OPTIONS -D1001/1001" 
	CLEAN_OPTIONS="NONE"
fi

echo
echo "Please be patient, this may take a while. [typically 5-50 min]"
echo

if [ $MAPTYPE = 8 ] ; then
	quick_map.sh $REGION "$PLOT_OPTIONS"
elif [ $MAPTYPE = 7 ] ; then
	echo swath_plot.sh $REGION \"$PLOT_OPTIONS\" \"$CLEAN_OPTIONS\"
	swath_plot.sh $REGION "$PLOT_OPTIONS" "$CLEAN_OPTIONS"
else
	echo swath_process.sh  $REGION \"$PLOT_OPTIONS\" \"$CLEAN_OPTIONS\" \"$GRID_OPTIONS\" \"$TIFF_OPTIONS\"
	swath_process.sh  $REGION "$PLOT_OPTIONS" "$CLEAN_OPTIONS" "$GRID_OPTIONS" "$TIFF_OPTIONS"
fi
