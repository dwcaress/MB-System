.TH mbnavadjust l "26 July 2002" "MB-System 5.0" "MB-System 5.0"
.SH NAME
\fBmbnavadjust\fP - Package that solves for optimal navigation by
matching bathymetry of overlapping swathes.

.SH VERSION
Version 5.0

.SH SYNOPSIS
\fBmbnavadjust\fP [\fB-V -H\fP] 

.SH DESCRIPTION
\fBMBnavadjust\fP is an interactive graphical program used to
adjust swath data navigation by matching bathymetric features
in overlapping and crossing swathes. The primary purpose of
\fBmbnavadjust\fP is to eliminate relative navigational errors in swath
data obtained from poorly navigated sonars. Submerged platforms
such as towed vehicles, remotely operated vehicles (ROVs) and
autonomous underwater vehicles (AUVs) are frequently not navigated 
with accuracy equivalent to the lateral resolution of 
swath bathymetry obtained with high frequency sonars operated
close to the seafloor. This is  particularly true for systems
that depend on ultra-short baseline navigation (USBL) or on
inertial navigation (as opposed to long baseline (LBL) navigation
obtained using transponder networks). Many old, 
pre-GPS surveys with hull mounted
sonars also suffer from poor navigation relative to the resolution
of the swath bathymetry, and can thus be improved with application
of this tool. \fBMBnavadjust\fP also works
well to co-register surveys at different scales. For instance, our
initial use of this tool involved co-registering a deep-towed Reson
8101 multibeam survey of the Loihi Seamount summit (offshore Hawaii)
with a hull mounted Simrad EM300 multibeam survey. 

When swath surveys are poorly navigated, features clearly imaged
by the sonar may not match in overlapping and crossing swathes.
However, by systematically determining the lateral offsets between
matching features throughout a survey, it is possible to solve,
or invert, for a navigation model which is consistent with the
original navigational constraints, satisfies the requirement
of reasonableness, and also causes features in overlapping swathes
to match within the sonar's resolution. 

Previous attempts to address this problem (e.g. Nishimura et al.)
have focused on automating the identification of matching features
and their navigational offsets. The automated approach is 
problematic because seafloor features are complex, and the
cross correlation function of matching features often exhibits
multiple local minima. Our approach is to automate the identification
of matching features and the ultimate solution for an optimal
indentification while depending on interactive determination of
the navigational offsets. We have not found an automatic algorithm
that can reliably replace the human eye and brain in correctly 
lining up real seafloor features.

\fBMBnavadjust\fP operates within the context of the \fBmbprocess\fP
parallel processing scheme, but it should used on data for which
the initial navigation processing (e.g. \fBmbnavedit\fP is complete.
When swath data files are imported into \fmbnavadjust\fP, the data is
taken from processed files generated by \fBmbprocess\fP whenever
possible (when those files exist). If no processed file exists,
the raw data is used. When the processing with \fBmbnavadjust\fP
is completed and an optimal navigation solution is achieved, new
navigation files are generated (".na#" files, see below for full
description) which supercede the ".nve" files
generated by \mbnavedit\fP. Rerunning \fBmbprocess\fP will merge
the new navigation into a new set of processed files. Once
a swath file is processed with \fmbnavadjust\fP, any further attempts
to process the navigation with \fBmbnavedit\fP will only produce
navigation files that are ignored by \fBmbprocess\fP. This behavior
can be reversed manually using \fBmbset\fP, but then the user will
unnecessarily complicating his or her efforts.

The inversion for an optimal navigation which fits the offsets identified
at matching features must also be reasonable. This is achieved by
minimizing perturbations to speed and acceleration in the inversion.
This approach of penalizing first and second derivatives within
a linear inverse problem is common within both the geophysical
inverse theory literature (e.g. Parker, Constable et al.) and
within general linear optimization theory (e.g. Lawson and Hanson).

.SH USING MBNAVADJUST 1: IMPORTING DATA
Users begin using \fBmbnavadjust\fP by starting up the program
on the command line:
.br
 	mbnavadjust
.br
In order to get started, one must either open an existing
\fBmbnavadjust\fP project or initialize a new one. Both options
are available under the <File> menu with the <File->New> and <File->Open>
menu buttons. When one clicks the <File->New> option, a dialog opens
that allows navigation of the filesystem and specification of 
a project name. Whatever project location and name is chosen,
a directory "{project_path}/{project_name}.dir" and a file
"{project_path}/{project_name}.nvh" will be created. Once
a project exists and has been opened, swath data can be imported and then
analyzed. To open an existing \fBmbnavadjust\fP project, click
the <File->Open> option and select the corresponding "*.nvh" file.

Swath data can be imported in single files or through
datalists (see the \fBMB-System\fP manual page for a description
of recursive datalists). Each file that is imported is broken into
a number of sections. The maximum size of the sections in line length or
in number of soundings is set in a dialog opened by clicking on 
<Option->Controls>. The data for each section is written as a format 71
bathymetry-only file in the "*.dir" directory.
As the files are imported, the areal extent of each section is 
compared to the other sections. Any pair of sections that overlap
is added to a list of crossings to be investigated graphically. 

The main \fBmbnavadjust\fP window displays basic information in a set of
labels in the upper left, including the open project name, the number of
files imported, the number of crossings found, the number of crossings
analyzed, the number of navigation tie points set, and whether an
up-to-date inversion for optimal navigation has been performed. A scrollable
text window in the lower left displays messages regarding all actions
performed by the program during the current session. Another scrollable
window on the right displays one of three tables of information according
a user selection under the <View> menu. The three choices are a table
of the imported swath files, a table of the swath crossings, and a table
of the interactively defined navigation tie points. Immediately following
the initial data importation, a number of crossings will be defined (assuming that 
swathes do overlap and cross), but no tie points will yet be defined.

As the user
later works through the crossings, he or she will will define tie points
whenever the overlapping bathymetry allows the navigational offset
to be determined reliably. Ultimately, some crossings will allow one, or in
some case multiple tie points to be defined. Other crossings will still have 
no tie points, either
because the swathes don't really overlap or because there aren't any
distinctive features to match. When all of the crossings have been inspected, 
then the user can invoke inversion for an optimal navigation solution.

.SH USING MBNAVADJUST 2: INSPECTING CROSSINGS
The heart of \fBmbnavadjust\fP is the interactive inspection of the
swath crossings. One can bring up the crossing inspection window
(entitled "Nav Error") in a number of ways. If one pulls down the
menu option <Action->Analyze Crossings>, then the "Nav Error" window 
will come up with the first Crossing loading. Alternatively, if the
user specifies 








THIS MANUAL PAGE IS NOT COMPLETE!!!

.SH AUTHORSHIP
David W. Caress (caress@mbari.org)
.br
  Monterey Bay Aquarium Research Institute
.br
Dale N. Chayes (dale@ldeo.columbia.edu)
.br
  Lamont-Doherty Earth Observatory

.SH OPTIONS
.TP
.B \-H
This "help" flag cause the program to print out a description
of its operation and then exit immediately.
.TP
.B \-V
Normally, \fBmbnavadjust\fP outputs nothing to the stderr stream.
If the \fB-V\fP flag is given, then \fBmbnavadjust\fP 
works in a "verbose" mode and
outputs the program version being used, all error status messages, 
and a large amount of other information.

.SH INTERACTIVE CONTROLS
.TP
.B File

.SH SEE ALSO
\fBmbsystem\fP(l), \fBmbio\fP(l), \fBmbprocess\fP(l), 
\fBmbnavedit\fP(l), \fBmbinfo\fP(l)

.SH BUGS
It's too new to be bulletproof.

