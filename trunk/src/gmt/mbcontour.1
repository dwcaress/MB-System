.TH MBCONTOUR 1 "20 June 1993"
.SH NAME
\fBmbcontour\fP - GMT compatible utility for color fill or color shaded relief
swath plots of multibeam data using Postscript.

.SH VERSION
Version 3.00

.SH SYNOPSIS
\fBmbcontour\fP \fB-I\fIdatalist \fB-J\fIparameters \fB-R\fIwest/east/south/north \fP[\fB-A\fIcontour_int/color_int/tick_int/label_int/tick_len/label_hgt \fB-B\fItickinfo \fB-C\fIcontourfile \fB-F\fIred/green/blue \fB-K\fI \fB-L\fIlonflip \fB-M\fI \fB-O\fI \fB-P\fI \fB-p\fIpings \fB-U\fI \fB-X\fIx-shift \fB-Y\fIy-shift \fB-#\fIcopies \fB-V -H\fP]

.SH DESCRIPTION
\fBmbcontour\fP is an utility for plotting multibeam swath data in color fill
or color shaded relief using Postscript.  Like \fBmbswath\fP, \fBmbcontour\fP
is fully compatible with the GMT package version 2.1.  The contour levels 
and colors can be controlled directly or set implicitly using contour 
and color change intervals. Contours can also be set to have ticks 
pointing downhill.

.SH AUTHORSHIP
David W. Caress (caress@lamont.ldeo.columbia.edu)
.br
Dale N. Chayes (dale@lamont.ldeo.columbia.edu)
.br
Lamont-Doherty Earth Observatory
.br
Palisades, NY 10964

.SH OPTIONS
.TP
.B \-C
Sets the color palette file which controls the color of the plot.
See documentation of the GMT package for a complete description
of cpt files.
.TP
.B \fB-I\fIdatalist\fP
Sets the filename of the file containing a list of the input multibeam
data files and their formats.  In the \fIdatalist\fP file, each
data file should be followed by a data format identifier, e.g.:
 	datafile1 1
 	datafile2 8
.br
This program uses the \fBMBIO\fP library and will read or write any multibeam
format supported by \fBMBIO\fP. A list of the multibeam data formats
currently supported by \fBMBIO\fP and their identifier values
is given in the \fBMBIO\fP manual page.  A format identifier of 0 indicates
that the file contains lines of (lon, lat, depth) triples which can be read
in free format.
.TP
.B \fB-J\fP
Selects the map projection.  Choose one of the following:
.br
\fB\-Ja\fP\fIlon0/lat0/scale[r]\fP (Lambert Azimuthal Equal-Area).
.br
\fB\-Jb\fP\fIlon0/lat0/lat1/lat2/scale[r]\fP (Albers Conic Equal-Area).
.br
\fB\-Jc\fP\fIlon0/lat0/scale[r]\fP (Cassini).
.br
\fB\-Je\fP\fIlon0/lat0/scale[r]\fP (Azimuthal Equidistant).
.br
\fB\-Jg\fP\fIlon0/lat0/scale[r]\fP (Orthographic).
.br
\fB\-Jh\fP\fIlongitude/radius\fP (Hammer Equal-Area)
.br
\fB\-Ji\fP\fIwidth\fP (Interrupted Sinusoidal)
.br
\fB\-Jl\fP\fIlon0/lat0/lat1/lat2/scale\fP (Lambert Conic Conformal)
.br
\fB\-Jm\fP\fIscale\fP (Mercator)
.br
\fB\-Joa\fP\fIorigin_x/origin_y/azimuth/scale[r]\fP (Oblique Mercator - point and azimuth)
.br
\fB\-Job\fP\fIorigin_x/origin_y/point_x/point_y/scale[r]\fP (Oblique Mercator - two points)
.br
\fB\-Joc\fP\fIorigin_x/origin_y/pole_x/pole_y/scale[r]\fP (Oblique Mercator - point and pole)
.br
\fB\-Jr\fP\fIlongitude/radius\fP (Winkel Tripel)
.br
\fB\-Js\fP\fIlon0/lat0/scale[r]\fP (Stereographic)
.br
\fB\-Jt\fP\fIlongitude/scale\fP (TM - Transverse Mercator)
.br
\fB\-Ju\fP\fIzone/scale\fP (UTM - Universal Transverse Mercator)
.br
\fB\-Jw\fP\fIlongitude/radius\fP (Mollweide Equal-Area)
.br
\fB\-Jp\fP\fIradius\fP (Linear scaling of polar (theta,r) coordinates)
.br
\fB\-Jx\fP\fIxscale[/yscale]\fP (Linear scaling of cartesian coordinates)
.br
More details can be found in the \fBpsbasemap\fP man pages.
.TP
.B \fB-R\fIwest/east/south/north\fP
Sets the longitude and latitude bounds within which multibeam 
data will be read and plotted. Only the data which lies within 
these bounds will be read. 
Default: \fIwest\fP=-360, east\fI=360\fP, \fIsouth\fP=-90, \fInorth\fP=90.
.TP
.B \fB-A\fIcontour_int/color_int/tick_int/label_int/tick_len/label_hgt\fP
If specific contour levels are not specified with the \fI-C\fP option,
then contours will be
generated in four colors (black, red, green, and blue) with intervals,
annotations, and tickmarks controlled by these parameters.  Contours will be
generated at invervals of \fIcontour_int\fP meters.  Color changes
will occur at intervals of \fIcolor_int\fP meters.  Contours will have
downhill facing tickmarks \fItick_len\fP inches long every \fItick_int\fP
meters. Contours will have annotations 
\fIlabel_len\fP inches high every \fIlabel_int\fP meters.
Defaults: \fIcontour_int\fP = 25; \fIcolor_int\fP = 100; 
\fItick_int\fP = 100; \fIlabel_int\fP = 100; \fItick_len\fP = 0.1; 
\fIlabel_len\fP = 0.05.
.TP
.B \fB-B\fItickinfo\fP
Sets map boundary tickmark intervals. See \fBpsbasemap\fP for details.
.TP
.B \fB-C\fPcontourfile
Sets the file from which the contour levels and their style and color are read.
This file consists of lines in the format:
 	\fIlevel label tick red green blue\fP
.br
where \fIlevel\fP is the depth value to be contoured in meters, \fIlabel\fP
is either 'a' for annotated or 'n' for not annotated, \fItick\fP is either
't' for tick marks or 'n' for no tick marks, and \fIred\fP, \fIgreen\fP,
and \fIblue\fP set the color of the contour lines (these values can
range from 0 to 255). If a GMT cpt file is given as the \fIcontourfile\fP,
the color boundaries specified in the cpt file will be interpreted as
contour levels to be plotted with unannotated, unticked, black contours.
If contours are specified using the \fB-C\fP option, then any use
of the \fB-A\fP option will be ignored.
.TP
.B \fB-F\fIred/green/blue\fP
Sets the color used for Frame and annotation. [Default is black]
.TP
.B \-K
More \fIPostScript\fP code will be appended later [Default terminates the plot system].
.TP
.B \fB-L\fIlonflip\fP
Sets the range of the longitude values returned by the multibeam i/o routines.
If \fIlonflip\fP=-1 then the longitude values will be in
the range from -360 to 0 degrees. If \fIlonflip\fP=0 
then the longitude values will be in
the range from -180 to 180 degrees. If \fIlonflip\fP=1 
then the longitude values will be in
the range from 0 to 360 degrees.
Default: \fIlonflip\fP = 0.
.TP
.B \-M
Force conversion to monochrome image using the [television] YIQ transformation.
.TP
.B \-O
Selects Overlay plot mode [Default initializes a new plot system].
.TP
.B \-P
Selects Portrait plotting mode [GMT Default is Landscape, see gmtdefaults to change this].
.TP
.B \fB-p\fIpings\fP
Sets the ping averaging of the input data. If \fIpings\fP = 1, then
no ping averaging is performed. If \fIpings\fP > 0, then
that number of input pings will be averaged to produce one output
ping.  If \fIpings\fP = 0, then the ping averaging will automatically
be done so that the along-track ping spacing is equal to the across-track
beam spacing. If ping averaging is used (\fIpings\fP != 1), then
only a partial data stream can be copied (see the \fB-F\fP option).
Default: \fIpings\fP = 1 (no ping averaging).
.TP
.B \fB-T\fItimegap\fP
Sets the maximum time gap in minutes between adjacent pings allowed before
the data is considered to have a gap. Default: \fItimegap\fP = 1.
.TP
.B \-U
Draw Unix System time stamp on plot.  Optionally, append a label, or 'c' which will plot
the command string.
.TP
.B \-X \-Y
Shift origin of plot by (\fIx-shift,y-shift\fP) inches  [Default is (1,1) for new plots, (0,0) for overlays].
.TP
.B \-#
Specifies the number of plot copies. [Default is 1]
.TP
.B \-V
Selects verbose mode, which will send progress reports to stderr [Default runs "silently"].
.TP
.B \fB-H\fP
This "help" flag cause the program to print out a description
of its operation and then exit immediately.
.SH EXAMPLES
Suppose the user has a Hydrosweep data file in the L-DEO in-house
binary format (\fBMBIO\fP format id 8) called hs_ew9302_161_mn.mb8
which lies in the region w/s/e/n = -32.1874/-26.6236/54.6349/56.7536.
The following will suffice to generate a traditional four-color contour plot:
 	mbcontour -Idatalist -Jm2.44652 -R-25.7252/-23.0683/59.7415/61.0699 
 		-Ba0.5314g0.5314 -A50.0000/250.0000/250.0000/250.0000/0.01/0.1 
 		-p1 -P -X1 -Y1 -K -V > mbcontour.ps
.br
where the file datalist contains:
 	hs_ew9302_161_mn.mb8 8
.br
A more complicated plot including a navigation track
can be created using \fBmbcontour\fP in conjunction with other GMT
and GMT-compatible utilities.  The following is an example of a shellscript
which generates such a plot and then displays it on the screen (assuming
you have a Sun workstation):

 #
 # Shellscript to create Postscript plot of multibeam data
 # Created by macro mbm_plot
 #
 # Make datalist file 
 echo Making datalist file...
 echo hs_ew9302_161_bmn.mb8 8 > datalist
 #
 # Run mbcontour
 echo Running mbcontour...
 mbcontour -Idatalist -Jm2.44652 -R-25.7252/-23.0683/59.7415/61.0699 \
 	-Ba0.5314g0.5314":.Data File hs_ew9302_161_bmn.mb8:" \
 	-A50.0000/250.0000/250.0000/250.0000/0.01/0.1 -p1 -P -X1 \
 	-Y1 -K -V > hs_ew9302_161_bmn.mb8.ps
 #
 # Run mblist
 echo Running mblist...
 mblist -F8 -Ihs_ew9302_161_bmn.mb8 -OXYU > hs_ew9302_161_bmn.mb8.nav
 #
 # Run pstrack
 echo Running pstrack...
 pstrack hs_ew9302_161_bmn.mb8.nav -Jm2.44652 -R-25.7252/-23.0683/59.7415/61.0699 \
 	-Ba0.5314g0.5314":.Data File hs_ew9302_161_bmn.mb8:" -W2 \
 	-Mt15ma1h -P -O >> hs_ew9302_161_bmn.mb8.ps
 #
 # Delete surplus files
 echo Deleting surplus files...
 rm -f hs_ew9302_161_bmn.mb8.cpt datalist hs_ew9302_161_bmn.mb8.nav
 #
 # Run pageview
 echo Running pageview in background...
 pageview hs_ew9302_161_bmn.mb8.ps &
 #
 # All done!
 echo All done!

.SH BUGS
Of course.  What do you expect for free software?
