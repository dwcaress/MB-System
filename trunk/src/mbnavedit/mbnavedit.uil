/*
 * Generated by the ICS builderXcessory (BX).
 *
 *
 * Builder Xcessory 4.0.
 *
 * Identification: 
 */
module main_uil
version = 'V1.0'
names = case_sensitive
!(BX) bx_info("java_flags", "-verbose")
!(BX) bx_info("java_unmanage_dialogs", "true")
!(BX) bx_info("java_html_all_class", "true")
!(BX) bx_info("java_applet_runnable", "false")
!(BX) bx_info("java_main_applet", "true")
!(BX) bx_info("java_constants", "Defs", true)
!(BX) bx_info("java_html", "MainApp", true)
!(BX) bx_info("java_main", "MainApp", true)
!(BX) bx_info("java_makefile", "makefile-java", true)
!(BX) bx_info("vk_libs", "-lvk -lvkmsg -lvkhelp -ltt -lSgm -lXm -lXt -lX11 -lgen")
!(BX) bx_info("vk_cflags", "-DFUNCPROTO -DXTFUNCPROTO -I/usr/ToolTalk/include")
!(BX) bx_info("vk_cc", "CC")
!(BX) bx_info("vk_target", "main-vk")
!(BX) bx_info("vk_use_tooltalk", "false")
!(BX) bx_info("vk_use_runonce", "false")
!(BX) bx_info("vk_ignore_shell_geometry", "false")
!(BX) bx_info("vk_subclass_vk_components", "true")
!(BX) bx_info("vk_del_nested_classes", "false")
!(BX) bx_info("vk_rm_exp_callbacks", "false")
!(BX) bx_info("vk_unmanage_dialogs", "true")
!(BX) bx_info("vk_name", "BuilderProduct")
!(BX) bx_info("vk_class", "BuilderProduct")
!(BX) bx_info("vk_hdrext", "h")
!(BX) bx_info("vk_srcext", "C")
!(BX) bx_info("vk_app_defaults", "app-defaults", true)
!(BX) bx_info("vk_callbacks", "callbacks-vk", true)
!(BX) bx_info("vk_utilities", "bxutils-vk", true)
!(BX) bx_info("vk_constants", "defs-vk", true)
!(BX) bx_info("vk_main", "main-vk", true)
!(BX) bx_info("vk_makefile", "makefile-vk", true)
!(BX) bx_info("vk_imakefile", "Imakefile", true)
!(BX) bx_info("c++_libs", "-lGLw -lSgm -lXm -lXt -lGL -lXext -lX11 -lgen -lm")
!(BX) bx_info("c++_cflags", "-DFUNCPROTO -DXTFUNCPROTO")
!(BX) bx_info("c++_cc", "CC")
!(BX) bx_info("c++_target", "main-C")
!(BX) bx_info("c++_del_nested_classes", "false")
!(BX) bx_info("c++_ignore_shell_geometry", "false")
!(BX) bx_info("c++_visible_windows_only", "false")
!(BX) bx_info("c++_rm_exp_callbacks", "false")
!(BX) bx_info("c++_old_construct", "false")
!(BX) bx_info("c++_unmanage_dialogs", "true")
!(BX) bx_info("c++_gen_derived", "true")
!(BX) bx_info("c++_name", "BuilderProduct")
!(BX) bx_info("c++_class", "BuilderProduct")
!(BX) bx_info("c++_hdrext", "h")
!(BX) bx_info("c++_srcext", "C")
!(BX) bx_info("c++_app_defaults", "app-defaults", true)
!(BX) bx_info("c++_callbacks", "callbacks-C", true)
!(BX) bx_info("c++_utilities", "bxutil-C.C", true)
!(BX) bx_info("c++_constants", "defs-C", true)
!(BX) bx_info("c++_main", "main-C.C", true)
!(BX) bx_info("c++_baseclass", "UIComponent", true)
!(BX) bx_info("c++_makefile", "makefile-C", true)
!(BX) bx_info("c++_imakefile", "Imakefile", true)
!(BX) bx_info("c_libs", "-lGLw -lSgm -lXm -lXt -lGL -lXext -lX11 -lgen -lm")
!(BX) bx_info("c_cc", "cc")
!(BX) bx_info("c_target", "main-c")
!(BX) bx_info("c_ignore_shell_geometry", "false")
!(BX) bx_info("c_visible_windows_only", "false")
!(BX) bx_info("c_rm_exp_callbacks", "false")
!(BX) bx_info("c_reverse_dialogs", "true")
!(BX) bx_info("c_dialogs_in_routine", "true")
!(BX) bx_info("c_unmanage_dialogs", "true")
!(BX) bx_info("c_name", "mbnavedit")
!(BX) bx_info("c_class", "mbnavedit")
!(BX) bx_info("c_app_defaults", "mbnavedit", true)
!(BX) bx_info("c_utilities", "mbnavedit_util.c", true)
!(BX) bx_info("c_constants", "mbnavedit_creation.h", true)
!(BX) bx_info("c_callbacks", "mbnavedit_callbacks.c", true)
!(BX) bx_info("c_creation", "mbnavedit_creation.c", true)
!(BX) bx_info("c_main", "mbnavedit.c", true)
!(BX) bx_info("c_makefile", "Makefile.org", true)
!(BX) bx_info("c_imakefile", "Imakefile", false)
!(BX) bx_info("uil_libs", "-lGLw -lSgm -lMrm -lXm -lXt -lGL -lXext -lX11 -lgen -lm")
!(BX) bx_info("uil_uilflags", "-w -I/usr/include/uil")
!(BX) bx_info("uil_cc", "cc")
!(BX) bx_info("uil_target", "main-uil")
!(BX) bx_info("uil_ignore_shell_geometry", "false")
!(BX) bx_info("uil_visible_windows_only", "false")
!(BX) bx_info("uil_name", "BuilderProduct")
!(BX) bx_info("uil_class", "BuilderProduct")
!(BX) bx_info("uil_app_defaults", "app_defaults", true)
!(BX) bx_info("uil_utilities", "bxutil-uil.c", true)
!(BX) bx_info("uil_constants", "main-uil.h", true)
!(BX) bx_info("uil_callbacks", "callbacks-uil.c", true)
!(BX) bx_info("uil_uil", "mbnavedit.uil", true)
!(BX) bx_info("uil_main", "main-uil.c", true)
!(BX) bx_info("uil_makefile", "makefile-uil", true)
!(BX) bx_info("uil_imakefile", "Imakefile", true)
!(BX) bx_info("include_path", ".", false)
!(BX) bx_info("xrunner_command", "$(M_ROOT)/arch/X11.5/Xm1.2/mic_xm.o", false)
!(BX) bx_info("system_directory", "/SB7/bxpro")
!(BX) bx_info("builder_version", "Builder Xcessory 4.0")
!(BX) bx_info("build_lang", "C")
!(BX) bx_info("ansi", "false")
!(BX) bx_info("use_locales", "false")
!(BX) bx_info("new_mrm_style", "true")
!(BX) bx_info("c_wrap_lines", "false")
!(BX) bx_info("uil_wrap_lines", "true")
!(BX) bx_info("integrate_purify", "false")
!(BX) bx_info("purify_command", "purify")
!(BX) bx_info("integrate_xrunner", "false")

procedure BxGlobalWidgetId;
identifier BXG_pushButton_file;
identifier BXG_toggleButton_vru;
identifier BXG_pushButton_revert;
identifier BXG_pushButton_interpolate;
identifier BXG_toggleButton_deselectall;
identifier BXG_toggleButton_selectall;
identifier BXG_toggleButton_deselect;
identifier BXG_toggleButton_select;
identifier BXG_toggleButton_pick;
identifier BXG_radioBox;
identifier BXG_pushButton_heading_cmg;
identifier BXG_toggleButton_show_cmg;
identifier BXG_toggleButton_org_heading;
identifier BXG_pushButton_speed_smg;
identifier BXG_toggleButton_show_smg;
identifier BXG_toggleButton_org_speed;
identifier BXG_toggleButton_org_lat;
identifier BXG_toggleButton_org_lon;
identifier BXG_toggleButton_speed;
identifier BXG_toggleButton_heading;
identifier BXG_toggleButton_lat;
identifier BXG_toggleButton_lon;
identifier BXG_drawingArea;
identifier BXG_scrolledWindow;
identifier BXG_label_timestep_2;
identifier BXG_label_timestep_1;
identifier BXG_label_timespan_2;
identifier BXG_label_timespan_1;
identifier BXG_scale_timestep;
identifier BXG_scale_timespan;
identifier BXG_label_message;
identifier BXG_bulletinBoard_message;
identifier BXG_label_error_two;
identifier BXG_label_error_one;
identifier BXG_label_error_three;
identifier BXG_bulletinBoard_error;
identifier BXG_textField_output_file;
identifier BXG_label_filename;
identifier BXG_label_output_mode;
identifier BXG_toggleButton_output_off;
identifier BXG_toggleButton_output_on;
identifier BXG_radioBox_output;
identifier BXG_textField_format;
identifier BXG_label_format;
identifier BXG_fileSelectionBox;
identifier BXG_bulletinBoard_fileselection;
identifier BXG_xmDialogShell_fileselection;
procedure BxManageCB(string);
procedure BxUnmanageCB(string);
procedure BxSetValuesCB(string);
procedure BxExitCB(integer);
procedure do_nextbuffer();
procedure do_done();
procedure do_forward();
procedure do_reverse();
procedure do_timespan();
procedure do_timestep();
procedure do_event();
procedure do_resize();
procedure do_toggle_lon();
procedure do_toggle_lat();
procedure do_toggle_heading();
procedure do_toggle_speed();
procedure do_toggle_org_lon();
procedure do_toggle_org_lat();
procedure do_toggle_org_speed();
procedure do_toggle_show_smg();
procedure do_toggle_org_heading();
procedure do_toggle_show_cmg();
procedure do_button_use_smg();
procedure do_button_use_cmg();
procedure do_toggle_output_on();
procedure do_toggle_output_off();
procedure do_fileselection_cancel();
procedure do_fileselection_ok();
procedure do_fileselection_filter();
procedure do_fileselection_nomatch();
procedure do_toggle_pick();
procedure do_toggle_select();
procedure do_toggle_deselect();
procedure do_toggle_selectall();
procedure do_toggle_deselectall();
procedure do_interpolation();
procedure do_revert();
procedure do_showall();
procedure do_set_interval();
procedure do_toggle_vru();
procedure do_expose();

list BaseStyle : arguments {
};

list BaseStyleReasons : callbacks {
};

!(BX)list BaseStyleHandlers : handlers {
!(BX)};

list Style_use : arguments {
        arguments BaseStyle;
        XmNfontList = font_table(
		font('-*-helvetica-bold-r-*-*-*-140-75-75-*-*-iso8859-1'));
};

list Style_useReasons : callbacks {
        callbacks BaseStyleReasons;
};

!(BX)list Style_useHandlers : handlers {
!(BX)    handlers BaseStyleHandlers;
!(BX)};


!(BX)object topLevelShell : TopLevelShell widget {
!(BX)    arguments {
!(BX)        XmNtitle = "MBnavedit";
!(BX)        XmNiconName = "MBnavedit";
!(BX)        XmNx = 70;
!(BX)        XmNy = 208;
!(BX)        XmNwidth = 1125;
!(BX)        XmNheight = 849;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmMainWindow mainWindow;
!(BX)    };
!(BX)    callbacks {
!(BX)        XmNdestroyCallback = procedure BxExitCB(0);
!(BX)    };
!(BX)};

object mainWindow : XmMainWindow widget {
    arguments {
        XmNx = 70;
        XmNy = 208;
        XmNwidth = 1125;
        XmNheight = 849;
    };
    controls {
!(BX)         unmanaged XmDialogShell xmDialogShell_fileselection;
!(BX)         unmanaged XmDialogShell xmDialogShell_error;
!(BX)         unmanaged XmDialogShell xmDialogShell_message;
!(BX)         unmanaged XmDialogShell xmDialogShell_about;
         managed XmBulletinBoard bulletinBoard;
    };
    callbacks {
    };
};

!(BX)object xmDialogShell_fileselection : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNallowShellResize = false;
!(BX)        XmNtitle = "Select Input Data File";
!(BX)        XmNwidth = 737;
!(BX)        XmNheight = 727;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmBulletinBoardDialog bulletinBoard_fileselection;
!(BX)    };
!(BX)    callbacks {
!(BX)        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_xmDialogShell_fileselection);
!(BX)    };
!(BX)};

object bulletinBoard_fileselection : XmBulletinBoardDialog widget {
    arguments {
        XmNresizePolicy = XmRESIZE_NONE;
        XmNx = 264;
        XmNy = 339;
        XmNwidth = 737;
        XmNheight = 727;
    };
    controls {
         managed XmTextField textField_output_file;
         managed XmLabel label_filename;
         managed XmLabel label_output_mode;
         managed XmRadioBox radioBox_output;
         managed XmTextField textField_format;
         managed XmLabel label_format;
         managed XmFileSelectionBox fileSelectionBox;
    };
    callbacks {
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_bulletinBoard_fileselection);
    };
};

object fileSelectionBox : XmFileSelectionBox widget {
    arguments {
        XmNbuttonFontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNlabelFontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNtextFontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNautoUnmanage = false;
        XmNresizePolicy = XmRESIZE_NONE;
        XmNnoResize = true;
        XmNdialogTitle = compound_string("");
        XmNlistVisibleItemCount = 17;
        XmNx = 10;
        XmNy = 10;
        XmNwidth = 720;
        XmNheight = 540;
    };
    controls {
    };
    callbacks {
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_fileSelectionBox);
        XmNnoMatchCallback = procedure do_fileselection_nomatch();
       XmNokCallback = procedures {
                 do_fileselection_ok();
                 BxUnmanageCB("bulletinBoard_fileselection");
        };
        XmNapplyCallback = procedure do_fileselection_filter();
       XmNcancelCallback = procedures {
                 do_fileselection_cancel();
                 BxUnmanageCB("bulletinBoard_fileselection");
        };
    };
};

object label_format : XmLabel widget {
    arguments {
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNlabelString = compound_string("MBIO Format ID:");
        XmNrecomputeSize = false;
        XmNx = 10;
        XmNy = 550;
        XmNwidth = 150;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_label_format);
    };
};

object textField_format : XmTextField widget {
    arguments {
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNx = 150;
        XmNy = 550;
        XmNwidth = 100;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_textField_format);
    };
};

object radioBox_output : XmRadioBox widget {
    arguments {
        XmNx = 360;
        XmNy = 590;
        XmNwidth = 168;
        XmNheight = 65;
    };
    controls {
         managed XmToggleButton toggleButton_output_on;
         managed XmToggleButton toggleButton_output_off;
    };
    callbacks {
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_radioBox_output);
    };
};

object toggleButton_output_on : XmToggleButton widget {
    arguments {
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNlabelString = compound_string("Output Edited Data");
        XmNwidth = 162;
        XmNheight = 28;
    };
    controls {
    };
    callbacks {
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_toggleButton_output_on);
        XmNvalueChangedCallback = procedure do_toggle_output_on();
    };
};

object toggleButton_output_off : XmToggleButton widget {
    arguments {
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNlabelString = compound_string("Browse Only");
        XmNwidth = 162;
        XmNheight = 28;
    };
    controls {
    };
    callbacks {
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_toggleButton_output_off);
        XmNvalueChangedCallback = procedure do_toggle_output_off();
    };
};

object label_output_mode : XmLabel widget {
    arguments {
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNlabelString = compound_string("Output Mode:");
        XmNrecomputeSize = false;
        XmNx = 340;
        XmNy = 550;
        XmNwidth = 120;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_label_output_mode);
    };
};

object label_filename : XmLabel widget {
    arguments {
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNlabelString = compound_string("Output File Name:");
        XmNrecomputeSize = false;
        XmNx = 10;
        XmNy = 630;
        XmNwidth = 150;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_label_filename);
    };
};

object textField_output_file : XmTextField widget {
    arguments {
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNx = 20;
        XmNy = 670;
        XmNwidth = 700;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_textField_output_file);
    };
};

!(BX)object xmDialogShell_error : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNtitle = "Error";
!(BX)        XmNwidth = 311;
!(BX)        XmNheight = 161;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmBulletinBoardDialog bulletinBoard_error;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object bulletinBoard_error : XmBulletinBoardDialog widget {
    arguments {
        arguments Style_use;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNdialogStyle = XmDIALOG_APPLICATION_MODAL;
        XmNx = 477;
        XmNy = 552;
        XmNwidth = 311;
        XmNheight = 161;
    };
    controls {
         managed XmLabel label_error_two;
         managed XmLabel label_error_one;
         managed XmLabel label_error_three;
         managed XmPushButton pushButton_error;
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_bulletinBoard_error);
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object pushButton_error : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("OK");
        XmNx = 110;
        XmNy = 110;
        XmNwidth = 90;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object label_error_three : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("permission in this directory!");
        XmNrecomputeSize = false;
        XmNx = 10;
        XmNy = 70;
        XmNwidth = 290;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_label_error_three);
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object label_error_one : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Unable to open output file.");
        XmNrecomputeSize = false;
        XmNx = 10;
        XmNy = 10;
        XmNwidth = 290;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_label_error_one);
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object label_error_two : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("You probably do not have write");
        XmNrecomputeSize = false;
        XmNx = 10;
        XmNy = 40;
        XmNwidth = 290;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_label_error_two);
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

!(BX)object xmDialogShell_message : XmDialogShell widget {
!(BX)    arguments {
!(BX)        arguments Style_use;
!(BX)        XmNtitle = "Please Wait...";
!(BX)        XmNdeleteResponse = XmUNMAP;
!(BX)        XmNmwmInputMode = MWM_INPUT_MODELESS;
!(BX)        XmNwidth = 379;
!(BX)        XmNheight = 86;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmBulletinBoardDialog bulletinBoard_message;
!(BX)    };
!(BX)    callbacks {
!(BX)        callbacks Style_useReasons;
!(BX)    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
!(BX)};

object bulletinBoard_message : XmBulletinBoardDialog widget {
    arguments {
        arguments Style_use;
        XmNresizePolicy = XmRESIZE_NONE;
        XmNdialogStyle = XmDIALOG_FULL_APPLICATION_MODAL;
        XmNx = 443;
        XmNy = 589;
        XmNwidth = 379;
        XmNheight = 86;
    };
    controls {
         managed XmLabel label_pleasewait;
         managed XmLabel label_message;
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_bulletinBoard_message);
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object label_message : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("MBvelocitytool is loading data.." &
 ".");
        XmNx = 10;
        XmNy = 10;
        XmNwidth = 360;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_label_message);
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object label_pleasewait : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Thank you for your patience.");
        XmNrecomputeSize = false;
        XmNx = 10;
        XmNy = 40;
        XmNwidth = 360;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

!(BX)object xmDialogShell_about : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNtitle = "About MBedit";
!(BX)        XmNdeleteResponse = XmUNMAP;
!(BX)        XmNwidth = 481;
!(BX)        XmNheight = 451;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmBulletinBoardDialog bulletinBoard_about;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object bulletinBoard_about : XmBulletinBoardDialog widget {
    arguments {
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 392;
        XmNy = 407;
        XmNwidth = 481;
        XmNheight = 451;
    };
    controls {
         managed XmPushButton pushButton_about_dismiss;
         managed XmLabel label_about_create;
         managed XmLabel label_about_lamont;
         managed XmLabel label_about_palisades;
         managed XmLabel label_about_columbia;
         managed XmLabel label_about_mbsystem;
         managed XmLabel label_about_mbpub;
         managed XmLabel label_about_component;
         managed XmLabel label_about_for;
         managed XmSeparator separator;
         managed XmLabel label_about_date;
         managed XmLabel label_about_version;
         managed XmLabel label_about_function;
         managed XmLabel label_about_mbedit;
    };
    callbacks {
    };
};

object label_about_mbedit : XmLabel widget {
    arguments {
        XmNfontList = font_table(
		font('-*-times-bold-r-*-*-*-360-*-*-*-*-iso8859-1'));
        XmNlabelString = compound_string("MBnavedit");
        XmNx = 10;
        XmNy = 10;
        XmNwidth = 450;
        XmNheight = 50;
    };
    controls {
    };
    callbacks {
    };
};

object label_about_function : XmLabel widget {
    arguments {
        XmNfontList = font_table(
		font('-*-times-bold-r-*-*-*-200-*-*-*-*-iso8859-1'));
        XmNlabelString = compound_string("Interactive Navigation Editor");
        XmNx = 10;
        XmNy = 60;
        XmNwidth = 450;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
    };
};

object label_about_version : XmLabel widget {
    arguments {
        XmNfontList = font_table(
		font('-*-times-medium-r-*-*-*-140-*-*-*-*-iso8859-1'));
        XmNlabelString = compound_string("MB-System Release 4.5");
        XmNx = 10;
        XmNy = 350;
        XmNwidth = 450;
        XmNheight = 24;
    };
    controls {
    };
    callbacks {
    };
};

object label_about_date : XmLabel widget {
    arguments {
        XmNfontList = font_table(
		font('-*-times-medium-r-*-*-*-140-*-*-*-*-iso8859-1'));
        XmNlabelString = compound_string("April 4, 1997");
        XmNx = 10;
        XmNy = 370;
        XmNwidth = 450;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object separator : XmSeparator widget {
    arguments {
        XmNx = 10;
        XmNy = 100;
        XmNwidth = 450;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object label_about_for : XmLabel widget {
    arguments {
        XmNfontList = font_table(
		font('-*-times-bold-r-*-*-*-140-*-*-*-*-iso8859-1'));
        XmNlabelString = compound_string("for Processing and Display of Sw" &
 "ath Sonar Data");
        XmNx = 10;
        XmNy = 220;
        XmNwidth = 460;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object label_about_component : XmLabel widget {
    arguments {
        XmNfontList = font_table(
		font('-*-times-bold-r-*-*-*-140-*-*-*-*-iso8859-1'));
        XmNlabelString = compound_string("One Component of the");
        XmNx = 10;
        XmNy = 120;
        XmNwidth = 450;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object label_about_mbpub : XmLabel widget {
    arguments {
        XmNfontList = font_table(
		font('-*-times-bold-r-*-*-*-140-*-*-*-*-iso8859-1'));
        XmNlabelString = compound_string("A Public Domain Software Package" &
 "");
        XmNx = 10;
        XmNy = 190;
        XmNwidth = 450;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object label_about_mbsystem : XmLabel widget {
    arguments {
        XmNfontList = font_table(
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1'));
        XmNlabelString = compound_string("MB-System");
        XmNx = 10;
        XmNy = 150;
        XmNwidth = 450;
        XmNheight = 38;
    };
    controls {
    };
    callbacks {
    };
};

object label_about_columbia : XmLabel widget {
    arguments {
        XmNfontList = font_table(
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1'));
        XmNlabelString = compound_string("of Columbia University");
        XmNx = 10;
        XmNy = 300;
        XmNwidth = 450;
        XmNheight = 22;
    };
    controls {
    };
    callbacks {
    };
};

object label_about_palisades : XmLabel widget {
    arguments {
        XmNfontList = font_table(
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1'));
        XmNlabelString = compound_string("Palisades, NY 10964");
        XmNx = 10;
        XmNy = 320;
        XmNwidth = 450;
        XmNheight = 22;
    };
    controls {
    };
    callbacks {
    };
};

object label_about_lamont : XmLabel widget {
    arguments {
        XmNfontList = font_table(
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1'));
        XmNlabelString = compound_string("Lamont-Doherty Earth Observatory" &
 "");
        XmNx = 10;
        XmNy = 280;
        XmNwidth = 450;
        XmNheight = 22;
    };
    controls {
    };
    callbacks {
    };
};

object label_about_create : XmLabel widget {
    arguments {
        XmNfontList = font_table(
		font('-*-times-bold-r-*-*-*-140-*-*-*-*-iso8859-1'));
        XmNlabelString = compound_string("Created by David W. Caress and D" &
 "ale N. Chayes");
        XmNx = 10;
        XmNy = 250;
        XmNwidth = 450;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object pushButton_about_dismiss : XmPushButton widget {
    arguments {
        XmNfontList = font_table(
		font('-*-times-bold-r-*-*-*-140-*-*-*-*-iso8859-1'));
        XmNlabelString = compound_string("Dismiss");
        XmNx = 180;
        XmNy = 400;
        XmNwidth = 83;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure BxUnmanageCB("bulletinBoard_about");
    };
};

object bulletinBoard : XmBulletinBoard widget {
    arguments {
        arguments Style_use;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNwidth = 1125;
        XmNheight = 849;
    };
    controls {
         managed XmPushButton pushButton_file;
         managed XmPushButton pushButton_nextbuffer;
         managed XmPushButton pushButton_done;
         managed XmPushButton pushButton_forward;
         managed XmPushButton pushButton_reverse;
         managed XmPushButton pushButton_quit;
         managed XmPushButton pushButton_about;
         managed XmToggleButton toggleButton_vru;
         managed XmPushButton pushButton_set_interval;
         managed XmPushButton pushButton_showall;
         managed XmPushButton pushButton_revert;
         managed XmPushButton pushButton_interpolate;
         managed XmRadioBox radioBox;
         managed XmPushButton pushButton_heading_cmg;
         managed XmToggleButton toggleButton_show_cmg;
         managed XmToggleButton toggleButton_org_heading;
         managed XmPushButton pushButton_speed_smg;
         managed XmToggleButton toggleButton_show_smg;
         managed XmToggleButton toggleButton_org_speed;
         managed XmToggleButton toggleButton_org_lat;
         managed XmToggleButton toggleButton_org_lon;
         managed XmToggleButton toggleButton_speed;
         managed XmToggleButton toggleButton_heading;
         managed XmToggleButton toggleButton_lat;
         managed XmToggleButton toggleButton_lon;
         managed XmScrolledWindow scrolledWindow;
         managed XmLabel label_timestep_2;
         managed XmLabel label_timestep_1;
         managed XmLabel label_timespan_2;
         managed XmLabel label_timespan_1;
         managed XmScale scale_timestep;
         managed XmScale scale_timespan;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object scale_timespan : XmScale widget {
    arguments {
        arguments Style_use;
        XmNstringDirection = XmSTRING_DIRECTION_L_TO_R;
        XmNorientation = XmHORIZONTAL;
        XmNtitleString = compound_string(" ");
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNshowValue = true;
        XmNx = 210;
        XmNy = 50;
        XmNwidth = 360;
        XmNheight = 50;
    };
    controls {
        Xm_Title {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_scale_timespan);
        XmNvalueChangedCallback = procedure do_timespan();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object scale_timestep : XmScale widget {
    arguments {
        arguments Style_use;
        XmNorientation = XmHORIZONTAL;
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNshowValue = true;
        XmNx = 210;
        XmNy = 100;
        XmNwidth = 360;
        XmNheight = 40;
    };
    controls {
        Xm_Title {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_scale_timestep);
        XmNvalueChangedCallback = procedure do_timestep();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object label_timespan_1 : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_END;
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNlabelString = compound_string("TIme Span Shown (sec):  1");
        XmNrecomputeSize = false;
        XmNx = 10;
        XmNy = 60;
        XmNwidth = 200;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_label_timespan_1);
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object label_timespan_2 : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNlabelString = compound_string("500");
        XmNrecomputeSize = false;
        XmNx = 580;
        XmNy = 60;
        XmNwidth = 40;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_label_timespan_2);
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object label_timestep_1 : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_END;
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNlabelString = compound_string("Time Step (sec):  1");
        XmNrecomputeSize = false;
        XmNx = 10;
        XmNy = 110;
        XmNwidth = 200;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_label_timestep_1);
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object label_timestep_2 : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNlabelString = compound_string("500");
        XmNrecomputeSize = false;
        XmNx = 580;
        XmNy = 110;
        XmNwidth = 40;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_label_timestep_2);
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object scrolledWindow : XmScrolledWindow widget {
    arguments {
        arguments Style_use;
        XmNscrollingPolicy = XmAUTOMATIC;
        XmNx = 250;
        XmNy = 150;
        XmNwidth = 870;
        XmNheight = 700;
    };
    controls {
         managed XmDrawingArea drawingArea;
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_scrolledWindow);
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object drawingArea : XmDrawingArea widget {
    arguments {
        arguments Style_use;
        XmNborderWidth = 1;
        XmNbackground = color('white');
        XmNwidth = 837;
        XmNheight = 2000;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_drawingArea);
        XmNresizeCallback = procedure do_resize();
        XmNexposeCallback = procedure do_expose();
        XmNinputCallback = procedure do_event();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object toggleButton_lon : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNlabelString = compound_string("Longitude Plot");
        XmNrecomputeSize = false;
        XmNstringDirection = XmSTRING_DIRECTION_R_TO_L;
        XmNx = 10;
        XmNy = 330;
        XmNwidth = 150;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_toggleButton_lon);
        XmNvalueChangedCallback = procedure do_toggle_lon();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object toggleButton_lat : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNlabelString = compound_string("Latitude Plot");
        XmNrecomputeSize = false;
        XmNx = 10;
        XmNy = 400;
        XmNwidth = 200;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_toggleButton_lat);
        XmNvalueChangedCallback = procedure do_toggle_lat();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object toggleButton_heading : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNlabelString = compound_string("Heading Plot");
        XmNrecomputeSize = false;
        XmNx = 10;
        XmNy = 600;
        XmNwidth = 180;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_toggleButton_heading);
        XmNvalueChangedCallback = procedure do_toggle_heading();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object toggleButton_speed : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNlabelString = compound_string("Speed Plot");
        XmNrecomputeSize = false;
        XmNx = 10;
        XmNy = 470;
        XmNwidth = 160;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_toggleButton_speed);
        XmNvalueChangedCallback = procedure do_toggle_speed();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object toggleButton_org_lon : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNlabelString = compound_string("Show Original Data");
        XmNrecomputeSize = false;
        XmNx = 30;
        XmNy = 360;
        XmNwidth = 210;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_toggleButton_org_lon);
        XmNvalueChangedCallback = procedure do_toggle_org_lon();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object toggleButton_org_lat : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNlabelString = compound_string("Show Original Data");
        XmNrecomputeSize = false;
        XmNx = 30;
        XmNy = 430;
        XmNwidth = 180;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_toggleButton_org_lat);
        XmNvalueChangedCallback = procedure do_toggle_org_lat();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object toggleButton_org_speed : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNlabelString = compound_string("Show Original Data");
        XmNrecomputeSize = false;
        XmNx = 30;
        XmNy = 500;
        XmNwidth = 210;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_toggleButton_org_speed);
        XmNvalueChangedCallback = procedure do_toggle_org_speed();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object toggleButton_show_smg : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNlabelString = compound_string("Show Speed-Made-Good");
        XmNrecomputeSize = false;
        XmNx = 30;
        XmNy = 530;
        XmNwidth = 220;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_toggleButton_show_smg);
        XmNvalueChangedCallback = procedure do_toggle_show_smg();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object pushButton_speed_smg : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNlabelString = compound_string("Use Speed-Made-Good");
        XmNrecomputeSize = false;
        XmNx = 30;
        XmNy = 560;
        XmNwidth = 200;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_speed_smg);
        XmNactivateCallback = procedure do_button_use_smg();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object toggleButton_org_heading : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNlabelString = compound_string("Show Original Data");
        XmNrecomputeSize = false;
        XmNx = 30;
        XmNy = 630;
        XmNwidth = 180;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_toggleButton_org_heading);
        XmNvalueChangedCallback = procedure do_toggle_org_heading();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object toggleButton_show_cmg : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNlabelString = compound_string("Show Course-Made-Good");
        XmNrecomputeSize = false;
        XmNx = 30;
        XmNy = 660;
        XmNwidth = 220;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_toggleButton_show_cmg);
        XmNvalueChangedCallback = procedure do_toggle_show_cmg();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object pushButton_heading_cmg : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNlabelString = compound_string("Use Course-Made-Good");
        XmNrecomputeSize = false;
        XmNx = 30;
        XmNy = 690;
        XmNwidth = 210;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_heading_cmg);
        XmNactivateCallback = procedure do_button_use_cmg();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object radioBox : XmRadioBox widget {
    arguments {
        arguments Style_use;
        XmNorientation = XmHORIZONTAL;
        XmNpacking = XmPACK_TIGHT;
        XmNlabelString = compound_string("");
        XmNx = 640;
        XmNy = 50;
        XmNwidth = 441;
        XmNheight = 40;
    };
    controls {
         managed XmToggleButton toggleButton_pick;
         managed XmToggleButton toggleButton_select;
         managed XmToggleButton toggleButton_deselect;
         managed XmToggleButton toggleButton_selectall;
         managed XmToggleButton toggleButton_deselectall;
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_radioBox);
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object toggleButton_pick : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNlabelString = compound_string("Pick");
        XmNwidth = 59;
        XmNheight = 34;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_toggleButton_pick);
        XmNvalueChangedCallback = procedure do_toggle_pick();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object toggleButton_select : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNlabelString = compound_string("Select");
        XmNwidth = 72;
        XmNheight = 34;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_toggleButton_select);
        XmNvalueChangedCallback = procedure do_toggle_select();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object toggleButton_deselect : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNlabelString = compound_string("Deselect");
        XmNwidth = 89;
        XmNheight = 34;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_toggleButton_deselect);
        XmNvalueChangedCallback = procedure do_toggle_deselect();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object toggleButton_selectall : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNlabelString = compound_string("Select All");
        XmNrecomputeSize = false;
        XmNwidth = 93;
        XmNheight = 34;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_toggleButton_selectall);
        XmNvalueChangedCallback = procedure do_toggle_selectall();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object toggleButton_deselectall : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNlabelString = compound_string("Deselect All");
        XmNrecomputeSize = false;
        XmNwidth = 110;
        XmNheight = 34;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_toggleButton_deselectall);
        XmNvalueChangedCallback = procedure do_toggle_deselectall();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object pushButton_interpolate : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNlabelString = compound_string("Interpolate Selection");
        XmNrecomputeSize = false;
        XmNx = 640;
        XmNy = 100;
        XmNwidth = 190;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_interpolate);
        XmNactivateCallback = procedure do_interpolation();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object pushButton_revert : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNlabelString = compound_string("Revert Selection");
        XmNrecomputeSize = false;
        XmNx = 860;
        XmNy = 100;
        XmNwidth = 190;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_revert);
        XmNactivateCallback = procedure do_revert();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object pushButton_showall : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNlabelString = compound_string("Show Entire Buffer");
        XmNrecomputeSize = false;
        XmNx = 40;
        XmNy = 170;
        XmNwidth = 170;
        XmNheight = 50;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure do_showall();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object pushButton_set_interval : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNlabelString = compound_string("Pick Time Interval");
        XmNrecomputeSize = false;
        XmNx = 40;
        XmNy = 240;
        XmNwidth = 170;
        XmNheight = 50;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure do_set_interval();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object toggleButton_vru : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNlabelString = compound_string("Roll, Pitch, and Heave Plots");
        XmNx = 10;
        XmNy = 730;
        XmNwidth = 219;
        XmNheight = 26;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_toggleButton_vru);
        XmNvalueChangedCallback = procedure do_toggle_vru();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object pushButton_about : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("About");
        XmNx = 1010;
        XmNy = 10;
        XmNwidth = 90;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure BxManageCB("bulletinBoard_about");
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object pushButton_quit : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Quit");
        XmNx = 840;
        XmNy = 10;
        XmNwidth = 90;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure BxExitCB(0);
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object pushButton_reverse : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Reverse");
        XmNx = 680;
        XmNy = 10;
        XmNwidth = 90;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure do_reverse();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object pushButton_forward : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Forward");
        XmNx = 520;
        XmNy = 10;
        XmNwidth = 90;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure do_forward();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object pushButton_done : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Done");
        XmNx = 350;
        XmNy = 10;
        XmNwidth = 90;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure do_done();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object pushButton_nextbuffer : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Next Buffer");
        XmNx = 180;
        XmNy = 10;
        XmNwidth = 90;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure do_nextbuffer();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object pushButton_file : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("File");
        XmNx = 10;
        XmNy = 10;
        XmNwidth = 90;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_file);
       XmNactivateCallback = procedures {
                 BxManageCB("bulletinBoard_fileselection");
                 BxSetValuesCB("label_format.labelString=MBIO F" &
 "ormat ID:");
        };
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};
end module;
