/*
 * Generated by the ICS builderXcessory (BX).
 *
 *
 * Builder Xcessory Version 5.0.3.
 *
 * Identification: 
 */
module main_uil
version = 'V1.0'
names = case_sensitive
!(BX) bx_info("c_options", "")
!(BX) bx_info("c_libs", "-L/usr/lib/Motif1.2 -lXm -lXt -lX11")
!(BX) bx_info("c_cflags", "-Aa -I/usr/include/Motif1.2 -I/usr/include/X11R5")
!(BX) bx_info("c_cc", "cc")
!(BX) bx_info("c_excludeungenerated", "false")
!(BX) bx_info("c_target", "main-c")
!(BX) bx_info("c_information", "")
!(BX) bx_info("c_user_main_loop", "", false)
!(BX) bx_info("c_ignore_shell_geometry", "false")
!(BX) bx_info("c_visible_windows_only", "false")
!(BX) bx_info("c_rm_exp_callbacks", "false")
!(BX) bx_info("c_reverse_dialogs", "true")
!(BX) bx_info("c_dialogs_in_routine", "true")
!(BX) bx_info("c_unmanage_dialogs", "true")
!(BX) bx_info("c_use_locales", "false")
!(BX) bx_info("c_ansi", "true")
!(BX) bx_info("c_name", "MB-System")
!(BX) bx_info("c_class", "MB-System")
!(BX) bx_info("c_app_defaults", "app-defaults", true)
!(BX) bx_info("c_utilities", "mbeditviz_bxutils.c", true)
!(BX) bx_info("c_constants", "mbeditviz_creation.h", true)
!(BX) bx_info("c_callbacks", "mbeditviz_callbacks.c", true)
!(BX) bx_info("c_creation", "mbeditviz_creation.c", true)
!(BX) bx_info("c_main", "mbeditviz_main.c", true)
!(BX) bx_info("c_makefile", "mbeditviz_makefile-c", true)
!(BX) bx_info("c_imakefile", "mbeditviz_Imakefile", true)
!(BX) bx_info("c_dirpath", "")
!(BX) bx_info("include_path", ".", false)
!(BX) bx_info("xrunner_command", "$(M_ROOT)/arch/X11.5/Xm1.2/mic_xm.o", false)
!(BX) bx_info("purify_command", "purify", false)
!(BX) bx_info("system_directory", "/usr/bx50")
!(BX) bx_info("builder_version", "Builder Xcessory Version 5.0.3")
!(BX) bx_info("build_lang", "C")
!(BX) bx_info("default_cpp_args", "")
!(BX) bx_info("new_mrm_style", "true")
!(BX) bx_info("c_wrap_lines", "false")
!(BX) bx_info("uil_wrap_lines", "true")
!(BX) bx_info("integrate_purify", "false")
!(BX) bx_info("purify_command", "purify")
!(BX) bx_info("integrate_xrunner", "false")

procedure BxGlobalWidgetId;
identifier BXG_pushButton_file_openprimary;
identifier BXG_label_about_version;
identifier BXG_textField_format;
identifier BXG_fileSelectionBox_open;
identifier BXG_bulletinBoard_open;
identifier BXG_bulletinBoard_gridparameters;
procedure BxManageCB(string);
procedure BxUnmanageCB;
procedure BxExitCB(integer);
procedure do_mbeditviz_quit();
procedure do_mbeditviz_setupfileselection();
procedure do_mbeditviz_openfile();
procedure do_mbeditviz_newview();

list BaseStyle : arguments {
};

list BaseStyleReasons : callbacks {
};

!(BX)list BaseStyleHandlers : handlers {
!(BX)};

list Style_use : arguments {
        arguments BaseStyle;
        XmNfontList = font_table(
		font('-*-helvetica-bold-r-*-*-*-140-75-75-*-*-iso8859-1'));
};

list Style_useReasons : callbacks {
        callbacks BaseStyleReasons;
};

!(BX)list Style_useHandlers : handlers {
!(BX)    handlers BaseStyleHandlers;
!(BX)};


object bulletinBoard_gridparameters : XmBulletinBoardDialog widget {
    arguments {
        arguments Style_use;
        XmNdialogTitle = compound_string("Grid Parameters");
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 62;
        XmNy = 121;
        XmNwidth = 72;
        XmNheight = 16;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_bulletinBoard_gridparameters);
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

!(BX)object dialogShell_gridparameters : XmDialogShell widget {
!(BX)    arguments {
!(BX)        arguments Style_use;
!(BX)        XmNwidth = 72;
!(BX)        XmNheight = 16;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmBulletinBoardDialog bulletinBoard_gridparameters;
!(BX)    };
!(BX)    callbacks {
!(BX)        callbacks Style_useReasons;
!(BX)    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
!(BX)};

object fileSelectionBox_open : XmFileSelectionBox widget {
    arguments {
        arguments Style_use;
        XmNautoUnmanage = true;
        XmNpattern = compound_string("*");
        XmNx = 83;
        XmNy = 440;
        XmNwidth = 340;
        XmNheight = 370;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_fileSelectionBox_open);
        XmNokCallback = procedure do_mbeditviz_openfile();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object label_format : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("MBIO Format ID:");
        XmNx = 10;
        XmNy = 380;
        XmNwidth = 120;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object textField_format : XmTextField widget {
    arguments {
        arguments Style_use;
        XmNx = 130;
        XmNy = 380;
        XmNwidth = 100;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_textField_format);
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object bulletinBoard_open : XmBulletinBoardDialog widget {
    arguments {
        arguments Style_use;
        XmNdialogTitle = compound_string("Open Swath Data");
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 193;
        XmNy = 200;
        XmNwidth = 358;
        XmNheight = 433;
    };
    controls {
         managed XmTextField textField_format;
         managed XmLabel label_format;
         managed XmFileSelectionBox fileSelectionBox_open;
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_bulletinBoard_open);
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

!(BX)object dialogShell_open : XmDialogShell widget {
!(BX)    arguments {
!(BX)        arguments Style_use;
!(BX)        XmNtitle = "Open Swath Data";
!(BX)        XmNwidth = 358;
!(BX)        XmNheight = 433;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmBulletinBoardDialog bulletinBoard_open;
!(BX)    };
!(BX)    callbacks {
!(BX)        callbacks Style_useReasons;
!(BX)    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
!(BX)};

object pushButton_about_dismiss : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Dismiss");
        XmNx = 170;
        XmNy = 470;
        XmNwidth = 120;
        XmNheight = 50;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure BxUnmanageCB("bulletinBoard_about");
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object label_about_title : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNfontList = font_table(
		font('-*-times-bold-r-*-*-*-180-*-*-*-*-iso8859-1',character_set=character_set('TimesBold18')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')));
        XmNlabelString = compound_string(#character_set("TimesBold24")"MBe" &
 "ditviz") &
 compound_string("", separate=true) &
 compound_string(#character_set("TimesBold18")"Visualization-Based", separate=true) &
 compound_string(#character_set("TimesBold18")"Editing of Swath Bathymetry");
        XmNx = 10;
        XmNy = 10;
        XmNwidth = 440;
        XmNheight = 90;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object separator1 : XmSeparator widget {
    arguments {
        arguments Style_use;
        XmNx = 10;
        XmNy = 100;
        XmNwidth = 440;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object label_about_mbsystem : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNfontList = font_table(
		font('-*-times-bold-r-*-*-*-140-*-*-*-*-iso8859-1',character_set=character_set('TimesBold14')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')));
        XmNlabelString = compound_string(#character_set("TimesBold14")"One" &
 " component of the", separate=true) &
 compound_string(#character_set("T" &
 "imesBold24")"MB-System") &
 compound_string(#character_set("TimesBold14")"", separate=true) &
 compound_string(#character_set("TimesBold14")"An open Source Software Package", separate=true) &
 compound_string(#character_set("TimesBold14")"for Processing and Display", separate=true) &
 compound_string(#character_set("TimesBold14")"of Swath Sonar Data");
        XmNx = 10;
        XmNy = 120;
        XmNwidth = 440;
        XmNheight = 140;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object separator3 : XmSeparator widget {
    arguments {
        arguments Style_use;
        XmNx = 10;
        XmNy = 260;
        XmNwidth = 440;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object label_about_LDEO : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNfontList = font_table(
		font('-*-times-bold-r-*-*-*-140-*-*-*-*-iso8859-1',character_set=character_set('TimesBold14')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')));
        XmNlabelString = compound_string(#character_set("TimesBold12")"Lam" &
 "ont-Doherty", separate=true) &
 compound_string(#character_set("T" &
 "imesBold12")"Earth Observatory", separate=true) &
 compound_string(#character_set("TimesBold12")"of Columbia University");
        XmNx = 230;
        XmNy = 340;
        XmNwidth = 180;
        XmNheight = 80;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object label_about_MBARI : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNfontList = font_table(
		font('-*-times-bold-r-*-*-*-140-*-*-*-*-iso8859-1',character_set=character_set('TimesBold14')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')));
        XmNlabelString = compound_string(#character_set("TimesBold12")"Mon" &
 "terey Bay", separate=true) &
 compound_string(#character_set("T" &
 "imesBold12")"Aquarium", separate=true) &
 compound_string(#character_set("TimesBold12")"Research Institute");
        XmNx = 70;
        XmNy = 340;
        XmNwidth = 140;
        XmNheight = 80;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object label_about_authors : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNfontList = font_table(
		font('-*-times-bold-r-*-*-*-140-*-*-*-*-iso8859-1',character_set=character_set('TimesBold14')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')));
        XmNlabelString = compound_string(#character_set("TimesBold14")"Cre" &
 "ated By:", separate=true) &
 compound_string(#character_set("T" &
 "imesBold14")"David W. Caress   and   Dale N. Chayes ");
        XmNx = 10;
        XmNy = 280;
        XmNwidth = 440;
        XmNheight = 60;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object label_about_version : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNfontList = font_table(
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')),
		font('-*-times-bold-r-*-*-*-140-*-*-*-*-iso8859-1',character_set=character_set('TimesBold14')),
		font('-*-times-medium-r-*-*-*-140-*-*-*-*-iso8859-1',character_set=character_set('TimesMedium14')));
        XmNlabelString = compound_string(#character_set("TimesMedium14")"M" &
 "B-System Release 5.0.1", separate=true) &
 compound_string(#character_set("T" &
 "imesMedium14")"December 15, 2003");
        XmNx = 10;
        XmNy = 410;
        XmNwidth = 440;
        XmNheight = 50;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_label_about_version);
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object bulletinBoard_about : XmBulletinBoardDialog widget {
    arguments {
        arguments Style_use;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 317;
        XmNy = 51;
        XmNwidth = 463;
        XmNheight = 531;
    };
    controls {
         managed XmLabel label_about_version;
         managed XmLabel label_about_authors;
         managed XmLabel label_about_MBARI;
         managed XmLabel label_about_LDEO;
         managed XmSeparator separator3;
         managed XmLabel label_about_mbsystem;
         managed XmSeparator separator1;
         managed XmLabel label_about_title;
         managed XmPushButton pushButton_about_dismiss;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

!(BX)object dialogShell_about : XmDialogShell widget {
!(BX)    arguments {
!(BX)        arguments Style_use;
!(BX)        XmNtitle = "About mbeditviz...";
!(BX)        XmNwidth = 463;
!(BX)        XmNheight = 531;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmBulletinBoardDialog bulletinBoard_about;
!(BX)    };
!(BX)    callbacks {
!(BX)        callbacks Style_useReasons;
!(BX)    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
!(BX)};

object label_status : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNx = 10;
        XmNy = 10;
        XmNwidth = 230;
        XmNheight = 150;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object bulletinBoard_mbeditviz : XmBulletinBoard widget {
    arguments {
        arguments Style_use;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNwidth = 269;
        XmNheight = 180;
    };
    controls {
         managed XmLabel label_status;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object pushButton_file_open : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Open Swath Data");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_file_openprimary);
        XmNactivateCallback = procedure do_mbeditviz_setupfileselection();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object separator2 : XmSeparator widget {
    arguments {
        arguments Style_use;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object pushButton_quit : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Quit");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
       XmNactivateCallback = procedures {
                 do_mbeditviz_quit();
                 BxExitCB(0);
        };
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object pulldownMenu_file : XmPulldownMenu widget {
    arguments {
        arguments Style_use;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 132;
        XmNheight = 54;
    };
    controls {
         managed XmPushButton pushButton_file_open;
         managed XmSeparator separator2;
         managed XmPushButton pushButton_quit;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object cascadeButton_file : XmCascadeButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("File");
        XmNx = 5;
        XmNy = 5;
        XmNwidth = 41;
        XmNheight = 24;
    };
    controls {
         unmanaged XmPulldownMenu pulldownMenu_file;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object pushButton_help_about : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("About");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure BxManageCB("bulletinBoard_about");
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object pulldownMenu_help : XmPulldownMenu widget {
    arguments {
        arguments Style_use;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 54;
        XmNheight = 28;
    };
    controls {
         managed XmPushButton pushButton_help_about;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object cascadeButton_help : XmCascadeButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Help");
        XmNx = 217;
        XmNy = 5;
        XmNwidth = 47;
        XmNheight = 24;
    };
    controls {
         unmanaged XmPulldownMenu pulldownMenu_help;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object pushButton_newview : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("New View");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure do_mbeditviz_newview();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object pulldownMenu_action : XmPulldownMenu widget {
    arguments {
        arguments Style_use;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 77;
        XmNheight = 28;
    };
    controls {
         managed XmPushButton pushButton_newview;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object cascadeButton_action : XmCascadeButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Action");
        XmNx = 46;
        XmNy = 5;
        XmNwidth = 61;
        XmNheight = 24;
    };
    controls {
         unmanaged XmPulldownMenu pulldownMenu_action;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object menuBar_mbeditviz : XmMenuBar widget {
    arguments {
        arguments Style_use;
        XmNpacking = XmPACK_TIGHT;
        XmNmenuHelpWidget = XmCascadeButton cascadeButton_help;
        XmNwidth = 269;
        XmNheight = 34;
    };
    controls {
         managed XmCascadeButton cascadeButton_file;
         managed XmCascadeButton cascadeButton_help;
         managed XmCascadeButton cascadeButton_action;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mainWindow_mbeditviz : XmMainWindow widget {
    arguments {
        arguments Style_use;
        XmNx = 78;
        XmNy = 774;
        XmNwidth = 269;
        XmNheight = 214;
    };
    controls {
        Xm_Separator1 {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
        Xm_Separator2 {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
        Xm_Separator3 {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
!(BX)         unmanaged XmDialogShell dialogShell_gridparameters;
!(BX)         unmanaged XmDialogShell dialogShell_open;
!(BX)         unmanaged XmDialogShell dialogShell_about;
         managed XmBulletinBoard bulletinBoard_mbeditviz;
         managed XmMenuBar menuBar_mbeditviz;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

!(BX)object topLevelShell : TopLevelShell widget {
!(BX)    arguments {
!(BX)        arguments Style_use;
!(BX)        XmNtitle = "mbeditviz";
!(BX)        XmNx = 78;
!(BX)        XmNy = 774;
!(BX)        XmNwidth = 269;
!(BX)        XmNheight = 214;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmMainWindow mainWindow_mbeditviz;
!(BX)    };
!(BX)    callbacks {
!(BX)        callbacks Style_useReasons;
!(BX)    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
!(BX)};
end module;
