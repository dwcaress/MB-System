/*
 * Generated by the ICS builderXcessory (BX).
 *
 *
 * BuilderXcessory Version 6.1.3.
 *
 * Identification: 
 */
module main_uil
version = 'V2.1'
names = case_sensitive
!(BX) bx_info("c_options", "")
!(BX) bx_info("c_libs", "-L/usr/lib/Motif1.2 -lXm -lXt -lX11")
!(BX) bx_info("c_cflags", "-Aa -I/usr/include/Motif1.2 -I/usr/include/X11R5")
!(BX) bx_info("c_cc", "cc")
!(BX) bx_info("c_excludeungenerated", "false")
!(BX) bx_info("c_target", "main-c")
!(BX) bx_info("c_information", "")
!(BX) bx_info("c_user_main_loop", "", false)
!(BX) bx_info("c_ignore_shell_geometry", "false")
!(BX) bx_info("c_visible_windows_only", "false")
!(BX) bx_info("c_rm_exp_callbacks", "false")
!(BX) bx_info("c_reverse_dialogs", "true")
!(BX) bx_info("c_dialogs_in_routine", "true")
!(BX) bx_info("c_unmanage_dialogs", "true")
!(BX) bx_info("c_use_locales", "false")
!(BX) bx_info("c_ansi", "true")
!(BX) bx_info("c_name", "MB-System")
!(BX) bx_info("c_class", "MB-System")
!(BX) bx_info("c_app_defaults", "app-defaults", true)
!(BX) bx_info("c_utilities", "mb3dsoundings_bxutils.c", true)
!(BX) bx_info("c_constants", "mb3dsoundings_creation.h", true)
!(BX) bx_info("c_callbacks", "mb3dsoundings_callbacks.c", true)
!(BX) bx_info("c_creation", "mb3dsoundings_creation.c", true)
!(BX) bx_info("c_main", "mb3dsoundings_main.c", true)
!(BX) bx_info("c_acinclude_m4", "acinclude.m4", false)
!(BX) bx_info("c_configure_in", "configure.in", false)
!(BX) bx_info("c_makefile_am", "Makefile.am", false)
!(BX) bx_info("c_cvsmake", "CVSMake", false)
!(BX) bx_info("c_makefile", "makefile_mb3dsoundings-c", true)
!(BX) bx_info("c_imakefile", "Imakefile_mb3dsoundings", true)
!(BX) bx_info("c_dirpath", "")
!(BX) bx_info("include_path", ".", false)
!(BX) bx_info("xrunner_command", "$(M_ROOT)/arch/X11.5/Xm1.2/mic_xm.o", false)
!(BX) bx_info("system_directory", "/opt/bx-6.1")
!(BX) bx_info("builder_version", "BuilderXcessory Version 6.1.3")
!(BX) bx_info("build_lang", "C")
!(BX) bx_info("default_cpp_args", "")
!(BX) bx_info("new_mrm_style", "true")
!(BX) bx_info("c_wrap_lines", "false")
!(BX) bx_info("uil_wrap_lines", "true")
!(BX) bx_info("integrate_purify", "false")
!(BX) bx_info("purify_command", "purify")
!(BX) bx_info("integrate_xrunner", "false")

procedure BxExitCB(integer);
procedure do_mb3dsdg_action_applybias();
procedure do_mb3dsdg_dismiss();
procedure do_mb3dsdg_headingbias();
procedure do_mb3dsdg_input();
procedure do_mb3dsdg_mouse_erase();
procedure do_mb3dsdg_mouse_grab();
procedure do_mb3dsdg_mouse_info();
procedure do_mb3dsdg_mouse_panzoom();
procedure do_mb3dsdg_mouse_pick();
procedure do_mb3dsdg_mouse_restore();
procedure do_mb3dsdg_mouse_rotate();
procedure do_mb3dsdg_mouse_toggle();
procedure do_mb3dsdg_pitchbias();
procedure do_mb3dsdg_resetview();
procedure do_mb3dsdg_rollbias();
procedure do_mb3dsdg_timelag();
procedure do_mb3dsdg_view_allprofile();
procedure do_mb3dsdg_view_boundingbox();
procedure do_mb3dsdg_view_flagged();
procedure do_mb3dsdg_view_goodprofile();
procedure do_mb3dsdg_view_noprofile();
procedure do_mb3dsdg_view_scalewithflagged();

list BaseStyle : arguments {
};

list BaseStyleReasons : callbacks {
};

!(BX)list BaseStyleHandlers : handlers {
!(BX)};

list Style_use : arguments {
        arguments BaseStyle;
        XmNfontList = font_table(
		font('-*-helvetica-bold-r-*-*-*-140-75-75-*-*-iso8859-1'));
};

list Style_useReasons : callbacks {
        callbacks BaseStyleReasons;
};

!(BX)list Style_useHandlers : handlers {
!(BX)    handlers BaseStyleHandlers;
!(BX)};


object mb3dsdg : XmFormDialog widget {
    arguments {
!(BX) BxNclass = "Mb3dsdg";
!(BX) BxNsubclassDerived = "False";
        arguments Style_use;
        XmNdialogTitle = compound_string("3D Soundings");
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 775;
        XmNy = 932;
        XmNwidth = 1011;
        XmNheight = 660;
    };
    controls {
         managed XmPushButton mb3dsdg_pushButton_reset;
         managed XmScale mb3dsdg_scale_timelag;
         managed XmToggleButton mb3dsdg_toggleButton_mouse_panzoom1;
         managed XmToggleButton mb3dsdg_toggleButton_mouse_rotate1;
         managed XmLabel mb3dsdg_label_mousemode;
         managed XmScale mb3dsdg_scale_headingbias;
         managed XmScale mb3dsdg_scale_pitchbias;
         managed XmScale mb3dsdg_scale_rollbias;
         managed XmLabel mb3dsdg_label_status;
         managed XmMenuBar mb3dsdg_menuBar;
         managed XmDrawingArea mb3dsdg_drawingArea;
         managed XmRadioBox mb3dsdg_radioBox_soundingsmode;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

!(BX)object mb3dsdg_dialogShell : XmDialogShell widget {
!(BX)    arguments {
!(BX)        arguments Style_use;
!(BX)        XmNwidth = 1011;
!(BX)        XmNheight = 660;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmFormDialog mb3dsdg;
!(BX)    };
!(BX)    callbacks {
!(BX)        callbacks Style_useReasons;
!(BX)    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
!(BX)};

object mb3dsdg_mainWindow : XmMainWindow widget {
    arguments {
        arguments Style_use;
        XmNx = 747;
        XmNy = 56;
        XmNwidth = 197;
        XmNheight = 104;
    };
    controls {
        Xm_Separator1 {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
        Xm_Separator2 {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
        Xm_Separator3 {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
!(BX)         unmanaged XmDialogShell mb3dsdg_dialogShell;
    };
    callbacks {
        callbacks Style_useReasons;
        XmNdestroyCallback = procedure BxExitCB(0);
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

!(BX)object topLevelShell : TopLevelShell widget {
!(BX)    arguments {
!(BX)        arguments Style_use;
!(BX)        XmNtitle = "MBgrdviz";
!(BX)        XmNx = 747;
!(BX)        XmNy = 56;
!(BX)        XmNwidth = 197;
!(BX)        XmNheight = 104;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmMainWindow mb3dsdg_mainWindow;
!(BX)    };
!(BX)    callbacks {
!(BX)        callbacks Style_useReasons;
!(BX)    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
!(BX)};

object mb3dsdg_toggleButton_mouse_toggle : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Toggle");
        XmNwidth = 83;
        XmNheight = 28;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mb3dsdg_mouse_toggle();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_toggleButton_mouse_pick : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Pick");
        XmNwidth = 83;
        XmNheight = 28;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mb3dsdg_mouse_pick();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_toggleButton_mouse_erase : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Erase");
        XmNwidth = 83;
        XmNheight = 28;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mb3dsdg_mouse_erase();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_toggleButton_mouse_restore : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Restore");
        XmNwidth = 83;
        XmNheight = 28;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mb3dsdg_mouse_restore();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_toggleButton_mouse_grab : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Grab");
        XmNwidth = 83;
        XmNheight = 28;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mb3dsdg_mouse_grab();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_toggleButton_mouse_info : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Info");
        XmNwidth = 83;
        XmNheight = 28;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mb3dsdg_mouse_info();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_radioBox_soundingsmode : XmRadioBox widget {
    arguments {
        arguments Style_use;
        XmNorientation = XmHORIZONTAL;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 100;
        XmNtopOffset = 40;
        XmNx = 100;
        XmNy = 40;
        XmNwidth = 519;
        XmNheight = 34;
    };
    controls {
         managed XmToggleButton mb3dsdg_toggleButton_mouse_toggle;
         managed XmToggleButton mb3dsdg_toggleButton_mouse_pick;
         managed XmToggleButton mb3dsdg_toggleButton_mouse_erase;
         managed XmToggleButton mb3dsdg_toggleButton_mouse_restore;
         managed XmToggleButton mb3dsdg_toggleButton_mouse_grab;
         managed XmToggleButton mb3dsdg_toggleButton_mouse_info;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_drawingArea : XmDrawingArea widget {
    arguments {
        arguments Style_use;
        XmNborderWidth = 1;
        XmNbackground = color('white');
        XmNborderColor = color('black');
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 7;
        XmNleftOffset = 10;
        XmNrightOffset = 5;
        XmNtopOffset = 140;
        XmNx = 10;
        XmNy = 140;
        XmNwidth = 970;
        XmNheight = 435;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNinputCallback = procedure do_mb3dsdg_input();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_toggleButton_view_boundingbox : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Show Bounding Box");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mb3dsdg_view_boundingbox();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_separator1 : XmSeparator widget {
    arguments {
        arguments Style_use;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_toggleButton_view_flagged : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Show Flagged Soundings");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mb3dsdg_view_flagged();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_separator : XmSeparator widget {
    arguments {
        arguments Style_use;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_toggleButton_view_noconnect : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Show No Profiles");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mb3dsdg_view_noprofile();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_toggleButton_view_connectgood : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Show Good Profiles");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mb3dsdg_view_goodprofile();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_toggleButton_view_connectall : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Show All Profiles");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mb3dsdg_view_allprofile();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_separator2 : XmSeparator widget {
    arguments {
        arguments Style_use;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_toggleButton_view_scalewithflagged : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Scale with Flagged Soundings");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mb3dsdg_view_scalewithflagged();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_pulldownMenu_view : XmPulldownMenu widget {
    arguments {
        arguments Style_use;
        XmNx = 757;
        XmNy = 290;
        XmNwidth = 236;
        XmNheight = 154;
    };
    controls {
         managed XmToggleButton mb3dsdg_toggleButton_view_boundingbox;
         managed XmSeparator mb3dsdg_separator1;
         managed XmToggleButton mb3dsdg_toggleButton_view_flagged;
         managed XmSeparator mb3dsdg_separator;
         managed XmToggleButton mb3dsdg_toggleButton_view_noconnect;
         managed XmToggleButton mb3dsdg_toggleButton_view_connectgood;
         managed XmToggleButton mb3dsdg_toggleButton_view_connectall;
         managed XmSeparator mb3dsdg_separator2;
         managed XmToggleButton mb3dsdg_toggleButton_view_scalewithflagged;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_cascadeButton_view : XmCascadeButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("View");
        XmNx = 5;
        XmNy = 5;
        XmNwidth = 71;
        XmNheight = 24;
    };
    controls {
         unmanaged XmPulldownMenu mb3dsdg_pulldownMenu_view;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_toggleButton_mouse_rotate : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Rotate Soundings");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mb3dsdg_mouse_rotate();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_toggleButton_mouse_panzoom : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Pan and Zoom");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mb3dsdg_mouse_panzoom();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_pulldownMenu_mouse : XmPulldownMenu widget {
    arguments {
        arguments Style_use;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 152;
        XmNheight = 52;
    };
    controls {
         managed XmToggleButton mb3dsdg_toggleButton_mouse_rotate;
         managed XmToggleButton mb3dsdg_toggleButton_mouse_panzoom;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_cascadeButton_mouse : XmCascadeButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Mouse");
        XmNx = 5;
        XmNy = 29;
        XmNwidth = 71;
        XmNheight = 24;
    };
    controls {
         unmanaged XmPulldownMenu mb3dsdg_pulldownMenu_mouse;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_pushButton_action_applybias : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Apply Bias Values to Grid");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure do_mb3dsdg_action_applybias();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_pushButton_action_colorsoundingsblack : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Color Unflagged Soundings Black");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure do_mb3dsdg_action_colorsoundingsblack();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_pushButton_action_colorsoundingsred : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Color Unflagged Soundings Red");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure do_mb3dsdg_action_colorsoundingsred();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_pushButton_action_colorsoundingsyellow : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Color Unflagged Soundings Yellow");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure do_mb3dsdg_action_colorsoundingsyellow();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_pushButton_action_colorsoundingsgreen : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Color Unflagged Soundings Green");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure do_mb3dsdg_action_colorsoundingsgreen();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_pushButton_action_colorsoundingsbluegreen : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Color Unflagged Soundings Bluegreen");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure do_mb3dsdg_action_colorsoundingsbluegreen();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_pushButton_action_colorsoundingsblue : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Color Unflagged Soundings Blue");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure do_mb3dsdg_action_colorsoundingsblue();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_pushButton_action_colorsoundingspurple : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Color Unflagged Soundings Purple");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure do_mb3dsdg_action_colorsoundingspurple();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_pulldownMenu_action : XmPulldownMenu widget {
    arguments {
        arguments Style_use;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 189;
        XmNheight = 28;
    };
    controls {
         managed XmPushButton mb3dsdg_pushButton_action_applybias;
         managed XmPushButton mb3dsdg_pushButton_action_colorsoundingsblack;
         managed XmPushButton mb3dsdg_pushButton_action_colorsoundingsred;
         managed XmPushButton mb3dsdg_pushButton_action_colorsoundingsyellow;
         managed XmPushButton mb3dsdg_pushButton_action_colorsoundingsgreen;
         managed XmPushButton mb3dsdg_pushButton_action_colorsoundingsbluegreen;
         managed XmPushButton mb3dsdg_pushButton_action_colorsoundingsblue;
         managed XmPushButton mb3dsdg_pushButton_action_colorsoundingspurple;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_cascadeButton_action : XmCascadeButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Action");
        XmNx = 5;
        XmNy = 53;
        XmNwidth = 71;
        XmNheight = 24;
    };
    controls {
         unmanaged XmPulldownMenu mb3dsdg_pulldownMenu_action;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_pushButton_dismiss : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Dismiss");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure do_mb3dsdg_dismiss();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_pulldownMenu_dismiss : XmPulldownMenu widget {
    arguments {
        arguments Style_use;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 67;
        XmNheight = 28;
    };
    controls {
         managed XmPushButton mb3dsdg_pushButton_dismiss;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_cascadeButton_dismiss : XmCascadeButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Dismiss");
        XmNx = 5;
        XmNy = 77;
        XmNwidth = 71;
        XmNheight = 24;
    };
    controls {
         unmanaged XmPulldownMenu mb3dsdg_pulldownMenu_dismiss;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_menuBar : XmMenuBar widget {
    arguments {
        arguments Style_use;
        XmNorientation = XmVERTICAL;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopOffset = 10;
        XmNx = 10;
        XmNy = 10;
        XmNwidth = 81;
        XmNheight = 106;
    };
    controls {
         managed XmCascadeButton mb3dsdg_cascadeButton_view;
         managed XmCascadeButton mb3dsdg_cascadeButton_mouse;
         managed XmCascadeButton mb3dsdg_cascadeButton_action;
         managed XmCascadeButton mb3dsdg_cascadeButton_dismiss;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_label_status : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNborderWidth = 1;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNbackground = color('white');
        XmNlabelString = compound_string("Azimuth: 0.00 | Elevation: 0.00 " &
 "| Vert. Exager.: 1.00");
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 100;
        XmNtopOffset = 10;
        XmNx = 100;
        XmNy = 10;
        XmNwidth = 540;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_scale_rollbias : XmScale widget {
    arguments {
        arguments Style_use;
        XmNminimum = -100;
        XmNdecimalPoints = 2;
        XmNtitleString = compound_string("Roll Bias (degrees)");
        XmNshowArrows = TRUE;
        XmNscaleMultiple = 1;
        XmNshowValue = TRUE;
        XmNorientation = XmHORIZONTAL;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 100;
        XmNtopOffset = 70;
        XmNx = 100;
        XmNy = 70;
        XmNwidth = 170;
        XmNheight = 63;
    };
    controls {
        Xm_Title {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mb3dsdg_rollbias();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_scale_pitchbias : XmScale widget {
    arguments {
        arguments Style_use;
        XmNminimum = -100;
        XmNdecimalPoints = 2;
        XmNtitleString = compound_string("Pitch Bias (degrees)");
        XmNshowArrows = TRUE;
        XmNscaleMultiple = 1;
        XmNshowValue = TRUE;
        XmNorientation = XmHORIZONTAL;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 270;
        XmNtopOffset = 70;
        XmNx = 270;
        XmNy = 70;
        XmNwidth = 190;
        XmNheight = 63;
    };
    controls {
        Xm_Title {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mb3dsdg_pitchbias();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_scale_headingbias : XmScale widget {
    arguments {
        arguments Style_use;
        XmNminimum = -100;
        XmNdecimalPoints = 2;
        XmNtitleString = compound_string("Heading Bias (degrees)");
        XmNshowArrows = TRUE;
        XmNscaleMultiple = 1;
        XmNshowValue = TRUE;
        XmNorientation = XmHORIZONTAL;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 460;
        XmNtopOffset = 70;
        XmNx = 460;
        XmNy = 70;
        XmNwidth = 165;
        XmNheight = 63;
    };
    controls {
        Xm_Title {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mb3dsdg_headingbias();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_label_mousemode : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNborderWidth = 1;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNbackground = color('white');
        XmNlabelString = compound_string("Mouse Mode:", separate=true) &
 compound_string("L: Edit (Toggle)", separate=true) &
 compound_string("M: Rotate Soundings", separate=true) &
 compound_string("R: Exageration");
        XmNrecomputeSize = false;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 810;
        XmNrightOffset = 0;
        XmNtopOffset = 50;
        XmNx = 810;
        XmNy = 50;
        XmNwidth = 170;
        XmNheight = 80;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_toggleButton_mouse_rotate1 : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Rotate Soundings");
        XmNtopAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftOffset = 650;
        XmNtopOffset = 10;
        XmNx = 650;
        XmNy = 10;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mb3dsdg_mouse_rotate();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_toggleButton_mouse_panzoom1 : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Pan and Zoom");
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 650;
        XmNtopOffset = 40;
        XmNx = 650;
        XmNy = 40;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mb3dsdg_mouse_panzoom();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_scale_timelag : XmScale widget {
    arguments {
        arguments Style_use;
        XmNminimum = -100;
        XmNdecimalPoints = 2;
        XmNtitleString = compound_string("TIme Lag (seconds)");
        XmNshowArrows = TRUE;
        XmNscaleMultiple = 1;
        XmNshowValue = TRUE;
        XmNorientation = XmHORIZONTAL;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 630;
        XmNtopOffset = 70;
        XmNx = 630;
        XmNy = 70;
        XmNwidth = 170;
        XmNheight = 63;
    };
    controls {
        Xm_Title {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
    };
    callbacks {
        callbacks Style_useReasons;
        XmNvalueChangedCallback = procedure do_mb3dsdg_timelag();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_pushButton_reset : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Reset View");
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 810;
        XmNtopOffset = 10;
        XmNx = 810;
        XmNy = 10;
        XmNwidth = 170;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure do_mb3dsdg_resetview();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mb3dsdg_form : XmForm widget {
    arguments {
!(BX) BxNclassOnly = "Mb3dsdg";
!(BX) BxNsubclassDerived = "False";
!(BX) BxNclassOnlyFile = "False";
!(BX) BxNbaseInclude = asciz_string_table('');
!(BX) BxNderivedInclude = asciz_string_table('');
!(BX) BxNderived = "Mb3dsdgDerived";
!(BX) BxNfilebase = "Mb3dsdgDerived";
!(BX) BxNclassFilebase = "Mb3dsdg";
!(BX) BxNclassGeometry = "987x584+671+275";
!(BX) BxNgenerate = "True";
!(BX) BxNreference = "True";
!(BX) BxNpaletteGroup = "Project Classes";
!(BX) BxNpaletteName = "Mb3dsdg";
!(BX) BxNpaletteGeom = "+0+0";
        arguments Style_use;
        XmNdialogTitle = compound_string("3D Soundings");
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 671;
        XmNy = 275;
        XmNwidth = 987;
        XmNheight = 584;
    };
    controls {
         managed XmPushButton mb3dsdg_pushButton_reset;
         managed XmScale mb3dsdg_scale_timelag;
         managed XmToggleButton mb3dsdg_toggleButton_mouse_panzoom1;
         managed XmToggleButton mb3dsdg_toggleButton_mouse_rotate1;
         managed XmLabel mb3dsdg_label_mousemode;
         managed XmScale mb3dsdg_scale_headingbias;
         managed XmScale mb3dsdg_scale_pitchbias;
         managed XmScale mb3dsdg_scale_rollbias;
         managed XmLabel mb3dsdg_label_status;
         managed XmMenuBar mb3dsdg_menuBar;
         managed XmDrawingArea mb3dsdg_drawingArea;
         managed XmRadioBox mb3dsdg_radioBox_soundingsmode;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};
end module;
