/*
 * Generated by the ICS builderXcessory (BX).
 *
 *
 * BuilderXcessory Version 6.1.3.
 *
 * Identification:
 */
module main_uil
version = 'V2.1'
names = case_sensitive
!(BX) bx_info("c_options", "")
!(BX) bx_info("c_libs", "-L /usr/X11/lib -lXm -lXt -lX11 -lm")
!(BX) bx_info("c_cflags", "")
!(BX) bx_info("c_cc", "cc")
!(BX) bx_info("c_excludeungenerated", "false")
!(BX) bx_info("c_target", "mbnavadjust")
!(BX) bx_info("c_information", "")
!(BX) bx_info("c_user_main_loop", "", false)
!(BX) bx_info("c_ignore_shell_geometry", "false")
!(BX) bx_info("c_visible_windows_only", "false")
!(BX) bx_info("c_rm_exp_callbacks", "false")
!(BX) bx_info("c_reverse_dialogs", "true")
!(BX) bx_info("c_dialogs_in_routine", "true")
!(BX) bx_info("c_unmanage_dialogs", "true")
!(BX) bx_info("c_use_locales", "false")
!(BX) bx_info("c_ansi", "true")
!(BX) bx_info("c_name", "mbnavadjust")
!(BX) bx_info("c_class", "mbnavadjust")
!(BX) bx_info("c_app_defaults", "mbnavadjust_appdefaults", true)
!(BX) bx_info("c_utilities", "mbnavadjust_util.c", true)
!(BX) bx_info("c_constants", "mbnavadjust_creation.h", true)
!(BX) bx_info("c_callbacks", "mbnavadjust_callbacks.c", true)
!(BX) bx_info("c_creation", "mbnavadjust_creation.c", true)
!(BX) bx_info("c_main", "mbnavadjust.c", true)
!(BX) bx_info("c_acinclude_m4", "acinclude.m4", false)
!(BX) bx_info("c_configure_in", "configure.in", false)
!(BX) bx_info("c_makefile_am", "Makefile.am", false)
!(BX) bx_info("c_cvsmake", "CVSMake", false)
!(BX) bx_info("c_makefile", "Makefile.org", true)
!(BX) bx_info("c_imakefile", "Imakefile", false)
!(BX) bx_info("c_dirpath", "")
!(BX) bx_info("include_path", ".", false)
!(BX) bx_info("xrunner_command", "$(M_ROOT)/arch/X11.5/Xm1.2/mic_xm.o", false)
!(BX) bx_info("system_directory", "/opt/bx-6.1")
!(BX) bx_info("builder_version", "BuilderXcessory Version 6.1.3")
!(BX) bx_info("build_lang", "C")
!(BX) bx_info("default_cpp_args", "")
!(BX) bx_info("new_mrm_style", "true")
!(BX) bx_info("c_wrap_lines", "false")
!(BX) bx_info("uil_wrap_lines", "true")
!(BX) bx_info("integrate_purify", "false")
!(BX) bx_info("purify_command", "purify")
!(BX) bx_info("integrate_xrunner", "false")

value
    MBNA_FILESELECTION_IMPORT :  3;
    MBNA_FILESELECTION_NEW :  1;
    MBNA_FILESELECTION_NONE :  0;
    MBNA_FILESELECTION_OPEN :  2;
procedure BxGlobalWidgetId;
identifier BXG_text_messages;
identifier BXG_scrolledWindow_messages;
identifier BXG_label_status;
identifier BXG_label_listdata;
identifier BXG_list_data;
identifier BXG_scrolledWindow_datalist;
identifier BXG_form_mbnavadjust;
identifier BXG_pushButton_applynav;
identifier BXG_pushButton_invertnav;
identifier BXG_pushButton_zerozoffsets;
identifier BXG_pushButton_analyzecrossings;
identifier BXG_pushButton_newcrossings;
identifier BXG_pushButton_autosetsvsvertical;
identifier BXG_pushButton_autopickhorizontal;
identifier BXG_pushButton_autopick;
identifier BXG_pushButton_tie_xyz;
identifier BXG_pushButton_tie_z;
identifier BXG_pushButton_tie_xy;
identifier BXG_pushButton_fixedznav;
identifier BXG_pushButton_fixedxynav;
identifier BXG_pushButton_fixednav;
identifier BXG_pushButton_goodnav;
identifier BXG_pushButton_poornav;
identifier BXG_pushButton_showmodelplot;
identifier BXG_pushButton_makegrid;
identifier BXG_toggleButton_showselectedsection;
identifier BXG_toggleButton_showwithselectedfile;
identifier BXG_toggleButton_showwithselectedsurvey;
identifier BXG_toggleButton_showselectedfile;
identifier BXG_toggleButton_showselectedsurvey;
identifier BXG_toggleButton_showallsurveys;
identifier BXG_pushButton_showties;
identifier BXG_pushButton_showtruecrossings;
identifier BXG_pushButton_showbettercrossings;
identifier BXG_pushButton_showgoodcrossings;
identifier BXG_pushButton_showmediocrecrossings;
identifier BXG_pushButton_showcrossings;
identifier BXG_pushButton_showsections;
identifier BXG_pushButton_showdata;
identifier BXG_pushButton_showsurveys;
identifier BXG_pushButton_quit;
identifier BXG_pushButton_importdata;
identifier BXG_pushButton_close;
identifier BXG_pushButton_open;
identifier BXG_pushButton_new;
identifier BXG_label_message;
identifier BXG_bulletinBoard_message;
identifier BXG_label_error_two;
identifier BXG_label_error_one;
identifier BXG_label_error_three;
identifier BXG_bulletinBoard_error;
identifier BXG_textField_format;
identifier BXG_label_format;
identifier BXG_fileSelectionBox;
identifier BXG_bulletinBoard_fileselection;
identifier BXG_xmDialogShell_fileselection;
identifier BXG_pushButton_naverr_unset;
identifier BXG_pushButton_naverr_minxymisfit;
identifier BXG_drawingArea_naverr_zcorr;
identifier BXG_pushButton_naverr_zerozoffset;
identifier BXG_pushButton_naverr_settie;
identifier BXG_toggleButton_misfitcenter_auto;
identifier BXG_toggleButton_misfitcenter_zero;
identifier BXG_pushButton_naverr_resettie;
identifier BXG_pushButton_naverr_addtie;
identifier BXG_pushButton_naverr_deletetie;
identifier BXG_pushButton_naverr_fullsize;
identifier BXG_pushButton_naverr_zerooffset;
identifier BXG_label_naverr_offsets;
identifier BXG_pushButton_naverr_nextunset;
identifier BXG_label_naverr_status;
identifier BXG_drawingArea_naverr_cont;
identifier BXG_drawingArea_naverr_corr;
identifier BXG_pushButton_naverr_dismiss;
identifier BXG_pushButton_naverr_selecttie;
identifier BXG_pushButton_naverr_minimum;
identifier BXG_pushButton_naverr_next;
identifier BXG_pushButton_naverr_previous;
identifier BXG_pushButton_naverr_setnone;
identifier BXG_bulletinBoard_naverr;
identifier BXG_pushButton_biases_applyall;
identifier BXG_scale_biases_heading2;
identifier BXG_scale_biases_roll2;
identifier BXG_scale_biases_roll1;
identifier BXG_scale_biases_heading1;
identifier BXG_label_biases_files;
identifier BXG_toggleButton_biases_separate;
identifier BXG_toggleButton_biases_together;
identifier BXG_label_about_version;
identifier BXG_scale_controls_zoffset;
identifier BXG_scale_controls_smoothing;
identifier BXG_scale_controls_sectionlength;
identifier BXG_scale_controls_tickinterval;
identifier BXG_scale_controls_colorinterval;
identifier BXG_scale_controls_contourinterval;
identifier BXG_scale_controls_decimation;
identifier BXG_scale_controls_sectionsoundings;
identifier BXG_pushButton_modelplot_clearblock;
identifier BXG_toggleButton_modelplot_block;
identifier BXG_toggleButton_modelplot_sequential;
identifier BXG_radioBox;
identifier BXG_label_modelplot_status;
identifier BXG_drawingArea_modelplot;
identifier BXG_bulletinBoard_modelplot;
procedure BxExitCB(integer);
procedure BxManageCB(string);
procedure BxSetValuesCB(string);
procedure BxUnmanageCB(string);
procedure do_action_analyzecrossings();
procedure do_action_autopick();
procedure do_action_autopickhorizontal();
procedure do_action_autosetsvsvertical();
procedure do_action_checknewcrossings();
procedure do_action_fixednav();
procedure do_action_fixedxynav();
procedure do_action_fixedznav();
procedure do_action_goodnav();
procedure do_action_invertnav();
procedure do_action_poornav();
procedure do_action_tie_xy();
procedure do_action_tie_xyz();
procedure do_action_z();
procedure do_apply_nav();
procedure do_biases_apply();
procedure do_biases_applyall();
procedure do_biases_heading();
procedure do_biases_init();
procedure do_biases_roll();
procedure do_biases_toggle();
procedure do_controls_apply();
procedure do_controls_scale_colorinterval();
procedure do_dismiss_naverr();
procedure do_file_close();
procedure do_fileselection_mode(integer);
procedure do_fileselection_ok();
procedure do_list_data_select();
procedure do_make_grid();
procedure do_modelplot_block();
procedure do_modelplot_clearblock();
procedure do_modelplot_dismiss();
procedure do_modelplot_expose();
procedure do_modelplot_fullsize();
procedure do_modelplot_input();
procedure do_modelplot_sequential();
procedure do_modelplot_show();
procedure do_naverr_addtie();
procedure do_naverr_cont_expose();
procedure do_naverr_cont_input();
procedure do_naverr_corr_expose();
procedure do_naverr_corr_input();
procedure do_naverr_deletetie();
procedure do_naverr_fullsize();
procedure do_naverr_init();
procedure do_naverr_minmisfit();
procedure do_naverr_minxymisfit();
procedure do_naverr_misfitcenter();
procedure do_naverr_next();
procedure do_naverr_nextunset();
procedure do_naverr_previous();
procedure do_naverr_resettie();
procedure do_naverr_selecttie();
procedure do_naverr_setnone();
procedure do_naverr_setoffset();
procedure do_naverr_unset();
procedure do_naverr_zcorr_input();
procedure do_naverr_zerooffset();
procedure do_naverr_zerozoffset();
procedure do_quit();
procedure do_scale_contourinterval();
procedure do_scale_controls_decimation();
procedure do_scale_controls_sectionlength();
procedure do_scale_controls_sectionsoundings();
procedure do_scale_controls_smoothing();
procedure do_scale_controls_tickinterval();
procedure do_scale_controls_zoffset();
procedure do_view_showallsurveys();
procedure do_view_showbettercrossings();
procedure do_view_showcrossings();
procedure do_view_showdata();
procedure do_view_showmediocrecrossings();
procedure do_view_showgoodcrossings();
procedure do_view_showsections();
procedure do_view_showselectedfile();
procedure do_view_showselectedsection();
procedure do_view_showselectedsurveys();
procedure do_view_showsurveys();
procedure do_view_showties();
procedure do_view_showtruecrossings();
procedure do_view_showwithselectedfile();
procedure do_view_showwithselectedsurveys();
procedure do_zerozoffsets();

list BaseStyle : arguments {
};

list BaseStyleReasons : callbacks {
};

!(BX)list BaseStyleHandlers : handlers {
!(BX)};

list Style_use : arguments {
        arguments BaseStyle;
        XmNfontList = font_table(
		font('-*-helvetica-bold-r-*-*-*-140-75-75-*-*-iso8859-1'));
};

list Style_useReasons : callbacks {
        callbacks BaseStyleReasons;
};

!(BX)list Style_useHandlers : handlers {
!(BX)    handlers BaseStyleHandlers;
!(BX)};

list Style_use2 : arguments {
        arguments BaseStyle;
        XmNfontList = font_table(
		font('-*-helvetica-bold-r-*-*-*-120-75-75-*-*-iso8859-1'));
};

list Style_use2Reasons : callbacks {
        callbacks BaseStyleReasons;
};

!(BX)list Style_use2Handlers : handlers {
!(BX)    handlers BaseStyleHandlers;
!(BX)};


object pushButton_modelplot_dismiss : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Dismiss");
        XmNx = 10;
        XmNy = 10;
        XmNwidth = 60;
        XmNheight = 32;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
       XmNactivateCallback = procedures {
                 BxUnmanageCB("bulletinBoard_modelplot");
                 do_modelplot_dismiss();
        };
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object drawingArea_modelplot : XmDrawingArea widget {
    arguments {
        arguments Style_use2;
        XmNborderWidth = 1;
        XmNbackground = color('white');
        XmNx = 10;
        XmNy = 50;
        XmNwidth = 990;
        XmNheight = 420;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_drawingArea_modelplot);
        XmNinputCallback = procedure do_modelplot_input();
        XmNexposeCallback = procedure do_modelplot_expose();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object label_modelplot_status : XmLabel widget {
    arguments {
        arguments Style_use2;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Mouse: <left> select  tie; <midd" &
 "le> select untied crossing; <right> drag zoom extent", separate=true) &
 compound_string("Selection: No selection");
        XmNrecomputeSize = false;
        XmNx = 450;
        XmNy = 10;
        XmNwidth = 550;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_label_modelplot_status);
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_modelplot_fullsize : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Full Size");
        XmNx = 270;
        XmNy = 10;
        XmNwidth = 80;
        XmNheight = 32;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        XmNactivateCallback = procedure do_modelplot_fullsize();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object toggleButton_modelplot_sequential : XmToggleButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Sequential");
        XmNwidth = 88;
        XmNheight = 26;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_toggleButton_modelplot_sequential);
        XmNvalueChangedCallback = procedure do_modelplot_sequential();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object toggleButton_modelplot_block : XmToggleButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Block");
        XmNwidth = 88;
        XmNheight = 26;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_toggleButton_modelplot_block);
        XmNvalueChangedCallback = procedure do_modelplot_block();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object radioBox : XmRadioBox widget {
    arguments {
        arguments Style_use2;
        XmNorientation = XmHORIZONTAL;
        XmNx = 80;
        XmNy = 10;
        XmNwidth = 185;
        XmNheight = 32;
    };
    controls {
         managed XmToggleButton toggleButton_modelplot_sequential;
         managed XmToggleButton toggleButton_modelplot_block;
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_radioBox);
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_modelplot_clearblock : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Clear Block");
        XmNx = 360;
        XmNy = 10;
        XmNwidth = 80;
        XmNheight = 32;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_modelplot_clearblock);
        XmNactivateCallback = procedure do_modelplot_clearblock();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object bulletinBoard_modelplot : XmBulletinBoardDialog widget {
    arguments {
        arguments Style_use2;
        XmNautoUnmanage = false;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 757;
        XmNy = 995;
        XmNwidth = 1021;
        XmNheight = 483;
    };
    controls {
         managed XmPushButton pushButton_modelplot_clearblock;
         managed XmRadioBox radioBox;
         managed XmPushButton pushButton_modelplot_fullsize;
         managed XmLabel label_modelplot_status;
         managed XmDrawingArea drawingArea_modelplot;
         managed XmPushButton pushButton_modelplot_dismiss;
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_bulletinBoard_modelplot);
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

!(BX)object dialogShell_modelplot : XmDialogShell widget {
!(BX)    arguments {
!(BX)        arguments Style_use2;
!(BX)        XmNtitle = "Navigation Adjustment Model Plot" &
!(BX) "";
!(BX)        XmNallowShellResize = true;
!(BX)        XmNwidth = 1021;
!(BX)        XmNheight = 483;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmBulletinBoardDialog bulletinBoard_modelplot;
!(BX)    };
!(BX)    callbacks {
!(BX)        callbacks Style_use2Reasons;
!(BX)    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
!(BX)};

object pushButton_controls_dismiss : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Dismiss");
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 19;
        XmNleftOffset = 30;
        XmNrightOffset = 227;
        XmNleftWidget = XmPushButton pushButton_controls_apply;
        XmNx = 300;
        XmNy = 389;
        XmNwidth = 108;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        XmNactivateCallback = procedure BxUnmanageCB("form_controls");
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object scale_controls_sectionsoundings : XmScale widget {
    arguments {
        arguments Style_use2;
        XmNminimum = 1000;
        XmNdecimalPoints = 0;
        XmNvalue = 10000;
        XmNmaximum = 100000;
        XmNshowArrows = TRUE;
        XmNscaleMultiple = 499;
        XmNshowValue = TRUE;
        XmNorientation = XmHORIZONTAL;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_POSITION;
        XmNbottomPosition = 19;
        XmNleftOffset = 0;
        XmNrightOffset = 6;
        XmNtopOffset = 4;
        XmNleftWidget = XmLabel label_controls_sectionsoundings;
        XmNtopWidget = XmScale scale_controls_sectionlength;
        XmNx = 190;
        XmNy = 40;
        XmNwidth = 439;
        XmNheight = 43;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_scale_controls_sectionsoundings);
        XmNvalueChangedCallback = procedure do_scale_controls_sectionsoundings();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object label_controls_sectionsoundings : XmLabel widget {
    arguments {
        arguments Style_use2;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Max # Soundings in Section:");
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopOffset = 60;
        XmNx = 10;
        XmNy = 60;
        XmNwidth = 180;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object label_controls_decimation : XmLabel widget {
    arguments {
        arguments Style_use2;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Decimation:");
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopOffset = 120;
        XmNx = 10;
        XmNy = 120;
        XmNwidth = 120;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object scale_controls_decimation : XmScale widget {
    arguments {
        arguments Style_use2;
        XmNminimum = 1;
        XmNvalue = 1;
        XmNmaximum = 10;
        XmNshowArrows = TRUE;
        XmNshowValue = TRUE;
        XmNorientation = XmHORIZONTAL;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 140;
        XmNrightOffset = 6;
        XmNtopOffset = -4;
        XmNtopWidget = XmSeparator separator4;
        XmNx = 140;
        XmNy = 104;
        XmNwidth = 489;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_scale_controls_decimation);
        XmNvalueChangedCallback = procedure do_scale_controls_decimation();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object separator5 : XmSeparator widget {
    arguments {
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNrightOffset = 7;
        XmNtopOffset = 4;
        XmNtopWidget = XmScale scale_controls_tickinterval;
        XmNx = 10;
        XmNy = 264;
        XmNwidth = 618;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object separator4 : XmSeparator widget {
    arguments {
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftPosition = 2;
        XmNrightOffset = 6;
        XmNtopOffset = 5;
        XmNtopWidget = XmScale scale_controls_sectionsoundings;
        XmNx = 13;
        XmNy = 88;
        XmNwidth = 616;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object pushButton_controls_apply : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Apply");
        XmNtopAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 19;
        XmNleftOffset = 200;
        XmNx = 200;
        XmNy = 389;
        XmNwidth = 70;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        XmNactivateCallback = procedure do_controls_apply();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object label_controls_tickinterval : XmLabel widget {
    arguments {
        arguments Style_use2;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Tick Interval (m):");
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopOffset = 240;
        XmNx = 10;
        XmNy = 240;
        XmNwidth = 120;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object label_controls_colorinterval : XmLabel widget {
    arguments {
        arguments Style_use2;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Color Interval (m):");
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopOffset = 200;
        XmNx = 10;
        XmNy = 200;
        XmNwidth = 130;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object label_controls_contourinterval : XmLabel widget {
    arguments {
        arguments Style_use2;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Contour Interval (m):");
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopOffset = 160;
        XmNx = 10;
        XmNy = 160;
        XmNwidth = 140;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object scale_controls_contourinterval : XmScale widget {
    arguments {
        arguments Style_use2;
        XmNminimum = 1;
        XmNdecimalPoints = 2;
        XmNvalue = 2500;
        XmNmaximum = 40000;
        XmNshowArrows = TRUE;
        XmNshowValue = TRUE;
        XmNorientation = XmHORIZONTAL;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 140;
        XmNrightOffset = 6;
        XmNtopOffset = 4;
        XmNtopWidget = XmScale scale_controls_decimation;
        XmNx = 140;
        XmNy = 144;
        XmNwidth = 489;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_scale_controls_contourinterval);
        XmNvalueChangedCallback = procedure do_scale_contourinterval();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object scale_controls_colorinterval : XmScale widget {
    arguments {
        arguments Style_use2;
        XmNminimum = 1;
        XmNdecimalPoints = 2;
        XmNvalue = 10000;
        XmNmaximum = 40000;
        XmNshowArrows = TRUE;
        XmNshowValue = TRUE;
        XmNorientation = XmHORIZONTAL;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 140;
        XmNrightOffset = 6;
        XmNtopOffset = 4;
        XmNtopWidget = XmScale scale_controls_contourinterval;
        XmNx = 140;
        XmNy = 184;
        XmNwidth = 489;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_scale_controls_colorinterval);
        XmNvalueChangedCallback = procedure do_controls_scale_colorinterval();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object scale_controls_tickinterval : XmScale widget {
    arguments {
        arguments Style_use2;
        XmNminimum = 1;
        XmNdecimalPoints = 2;
        XmNvalue = 10000;
        XmNmaximum = 40000;
        XmNshowArrows = TRUE;
        XmNshowValue = TRUE;
        XmNorientation = XmHORIZONTAL;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 140;
        XmNrightOffset = 6;
        XmNtopOffset = 4;
        XmNtopWidget = XmScale scale_controls_colorinterval;
        XmNx = 140;
        XmNy = 224;
        XmNwidth = 489;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_scale_controls_tickinterval);
        XmNvalueChangedCallback = procedure do_scale_controls_tickinterval();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object scale_controls_sectionlength : XmScale widget {
    arguments {
        arguments Style_use2;
        XmNminimum = 1;
        XmNdecimalPoints = 2;
        XmNvalue = 2000;
        XmNmaximum = 5000;
        XmNshowArrows = TRUE;
        XmNshowValue = TRUE;
        XmNorientation = XmHORIZONTAL;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 20;
        XmNrightOffset = 7;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel label_controls_sectionlength;
        XmNx = 190;
        XmNy = 0;
        XmNwidth = 438;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_scale_controls_sectionlength);
        XmNvalueChangedCallback = procedure do_scale_controls_sectionlength();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object label_controls_sectionlength : XmLabel widget {
    arguments {
        arguments Style_use2;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Max Section Length (km):");
        XmNtopAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftOffset = 10;
        XmNtopOffset = 20;
        XmNx = 10;
        XmNy = 20;
        XmNwidth = 160;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object separator12 : XmSeparator widget {
    arguments {
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNrightOffset = 12;
        XmNtopOffset = 310;
        XmNx = 10;
        XmNy = 310;
        XmNwidth = 613;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object scale_controls_smoothing : XmScale widget {
    arguments {
        arguments Style_use2;
        XmNminimum = 1;
        XmNdecimalPoints = 2;
        XmNvalue = 10;
        XmNmaximum = 5000;
        XmNshowArrows = TRUE;
        XmNshowValue = TRUE;
        XmNorientation = XmHORIZONTAL;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 140;
        XmNrightOffset = 7;
        XmNtopOffset = 270;
        XmNx = 140;
        XmNy = 270;
        XmNwidth = 488;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_scale_controls_smoothing);
        XmNvalueChangedCallback = procedure do_scale_controls_smoothing();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object label_controls_smoothing : XmLabel widget {
    arguments {
        arguments Style_use2;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Inversion", separate=true) &
 compound_string("Smoothing (m):");
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopOffset = 270;
        XmNx = 10;
        XmNy = 270;
        XmNwidth = 120;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object label_controls_zoffset : XmLabel widget {
    arguments {
        arguments Style_use2;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Z Offset Width (m):");
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopOffset = 340;
        XmNx = 10;
        XmNy = 340;
        XmNwidth = 120;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object scale_controls_zoffset : XmScale widget {
    arguments {
        arguments Style_use2;
        XmNminimum = 1;
        XmNdecimalPoints = 0;
        XmNvalue = 10;
        XmNmaximum = 20;
        XmNshowArrows = TRUE;
        XmNshowValue = TRUE;
        XmNorientation = XmHORIZONTAL;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 140;
        XmNtopOffset = 330;
        XmNx = 140;
        XmNy = 330;
        XmNwidth = 480;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_scale_controls_zoffset);
        XmNvalueChangedCallback = procedure do_scale_controls_zoffset();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object separator14 : XmSeparator widget {
    arguments {
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopOffset = 370;
        XmNx = 10;
        XmNy = 370;
        XmNwidth = 613;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object form_controls : XmFormDialog widget {
    arguments {
        arguments Style_use2;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 0;
        XmNy = 1118;
        XmNwidth = 635;
        XmNheight = 438;
    };
    controls {
         managed XmSeparator separator14;
         managed XmScale scale_controls_zoffset;
         managed XmLabel label_controls_zoffset;
         managed XmLabel label_controls_smoothing;
         managed XmScale scale_controls_smoothing;
         managed XmSeparator separator12;
         managed XmLabel label_controls_sectionlength;
         managed XmScale scale_controls_sectionlength;
         managed XmScale scale_controls_tickinterval;
         managed XmScale scale_controls_colorinterval;
         managed XmScale scale_controls_contourinterval;
         managed XmLabel label_controls_contourinterval;
         managed XmLabel label_controls_colorinterval;
         managed XmLabel label_controls_tickinterval;
         managed XmPushButton pushButton_controls_apply;
         managed XmSeparator separator4;
         managed XmSeparator separator5;
         managed XmScale scale_controls_decimation;
         managed XmLabel label_controls_decimation;
         managed XmLabel label_controls_sectionsoundings;
         managed XmScale scale_controls_sectionsoundings;
         managed XmPushButton pushButton_controls_dismiss;
    };
    callbacks {
        callbacks Style_use2Reasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

!(BX)object dialogShell_controls : XmDialogShell widget {
!(BX)    arguments {
!(BX)        arguments Style_use2;
!(BX)        XmNtitle = "Controls";
!(BX)        XmNwidth = 635;
!(BX)        XmNheight = 438;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmFormDialog form_controls;
!(BX)    };
!(BX)    callbacks {
!(BX)        callbacks Style_use2Reasons;
!(BX)    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
!(BX)};

object label_about_mbedit : XmLabel widget {
    arguments {
        XmNfontList = font_table(
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1'));
        XmNlabelString = compound_string("MBnavadjust");
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNrightOffset = 9;
        XmNtopOffset = 0;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 479;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object label_about_function : XmLabel widget {
    arguments {
        XmNfontList = font_table(
		font('-*-times-bold-r-*-*-*-180-*-*-*-*-iso8859-1'));
        XmNlabelString = compound_string("Interactive Navigation Adjustmen" &
 "t of Swath Bathymetry");
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNrightOffset = 9;
        XmNtopOffset = 30;
        XmNx = 0;
        XmNy = 30;
        XmNwidth = 479;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object label_about_version : XmLabel widget {
    arguments {
        XmNfontList = font_table(
		font('-*-times-medium-r-*-*-*-140-*-*-*-*-iso8859-1'));
        XmNlabelString = compound_string("MB-System Release 4.6", separate=true) &
 compound_string("April 14, 1999");
        XmNrecomputeSize = false;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNrightOffset = 9;
        XmNx = 0;
        XmNy = 350;
        XmNwidth = 479;
        XmNheight = 60;
    };
    controls {
    };
    callbacks {
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_label_about_version);
    };
};

object separator : XmSeparator widget {
    arguments {
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNrightOffset = 8;
        XmNtopOffset = 60;
        XmNx = 10;
        XmNy = 60;
        XmNwidth = 470;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object label_about_for : XmLabel widget {
    arguments {
        XmNfontList = font_table(
		font('-*-times-bold-r-*-*-*-140-*-*-*-*-iso8859-1'));
        XmNlabelString = compound_string("for Processing and Display of Sw" &
 "ath Sonar Data");
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNrightOffset = 9;
        XmNx = 0;
        XmNy = 180;
        XmNwidth = 479;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object label_about_component : XmLabel widget {
    arguments {
        XmNfontList = font_table(
		font('-*-times-bold-r-*-*-*-140-*-*-*-*-iso8859-1'));
        XmNlabelString = compound_string("One Component of the");
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNrightOffset = 9;
        XmNx = 0;
        XmNy = 80;
        XmNwidth = 479;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object label_about_mbpub : XmLabel widget {
    arguments {
        XmNfontList = font_table(
		font('-*-times-bold-r-*-*-*-140-*-*-*-*-iso8859-1'));
        XmNlabelString = compound_string("An Open Source Software Package");
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNrightOffset = 9;
        XmNx = 0;
        XmNy = 150;
        XmNwidth = 479;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object label_about_mbsystem : XmLabel widget {
    arguments {
        XmNfontList = font_table(
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1'));
        XmNlabelString = compound_string("MB-System");
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNrightOffset = 9;
        XmNx = 0;
        XmNy = 110;
        XmNwidth = 479;
        XmNheight = 38;
    };
    controls {
    };
    callbacks {
    };
};

object label_about_columbia : XmLabel widget {
    arguments {
        XmNfontList = font_table(
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1'));
        XmNlabelString = compound_string("Monterey Bay", separate=true) &
 compound_string("Aquarium", separate=true) &
 compound_string("Research Institute");
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 110;
        XmNrightOffset = 268;
        XmNtopOffset = 280;
        XmNx = 110;
        XmNy = 280;
        XmNwidth = 110;
        XmNheight = 70;
    };
    controls {
    };
    callbacks {
    };
};

object label_about_lamont : XmLabel widget {
    arguments {
        XmNfontList = font_table(
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1'));
        XmNlabelString = compound_string("Lamont-Doherty ", separate=true) &
 compound_string("Earth Observatory", separate=true) &
 compound_string("of Columbia University");
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 270;
        XmNrightOffset = 118;
        XmNtopOffset = 280;
        XmNx = 270;
        XmNy = 280;
        XmNwidth = 100;
        XmNheight = 70;
    };
    controls {
    };
    callbacks {
    };
};

object label_about_create : XmLabel widget {
    arguments {
        XmNfontList = font_table(
		font('-*-times-bold-r-*-*-*-140-*-*-*-*-iso8859-1'));
        XmNlabelString = compound_string("Created by:");
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNrightOffset = 9;
        XmNx = 0;
        XmNy = 230;
        XmNwidth = 479;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object pushButton_about_dismiss : XmPushButton widget {
    arguments {
        XmNfontList = font_table(
		font('-*-times-bold-r-*-*-*-140-*-*-*-*-iso8859-1'));
        XmNlabelString = compound_string("Dismiss");
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftOffset = 170;
        XmNrightOffset = 178;
        XmNtopOffset = 410;
        XmNx = 170;
        XmNy = 410;
        XmNwidth = 140;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure BxUnmanageCB("form_about");
    };
};

object separator1 : XmSeparator widget {
    arguments {
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNleftPosition = 2;
        XmNrightOffset = 8;
        XmNtopOffset = 210;
        XmNx = 10;
        XmNy = 210;
        XmNwidth = 470;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object label_about_create1 : XmLabel widget {
    arguments {
        XmNfontList = font_table(
		font('-*-times-bold-r-*-*-*-140-*-*-*-*-iso8859-1'));
        XmNlabelString = compound_string("David W. Caress    and    Dale N" &
 ". Chayes");
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNrightOffset = 9;
        XmNx = 0;
        XmNy = 250;
        XmNwidth = 479;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object form_about : XmFormDialog widget {
    arguments {
        arguments Style_use2;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 0;
        XmNy = 1095;
        XmNwidth = 488;
        XmNheight = 484;
    };
    controls {
         managed XmLabel label_about_create1;
         managed XmSeparator separator1;
         managed XmPushButton pushButton_about_dismiss;
         managed XmLabel label_about_create;
         managed XmLabel label_about_lamont;
         managed XmLabel label_about_columbia;
         managed XmLabel label_about_mbsystem;
         managed XmLabel label_about_mbpub;
         managed XmLabel label_about_component;
         managed XmLabel label_about_for;
         managed XmSeparator separator;
         managed XmLabel label_about_version;
         managed XmLabel label_about_function;
         managed XmLabel label_about_mbedit;
    };
    callbacks {
        callbacks Style_use2Reasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

!(BX)object dialogShell_about : XmDialogShell widget {
!(BX)    arguments {
!(BX)        arguments Style_use2;
!(BX)        XmNtitle = "About MBnavadjust";
!(BX)        XmNwidth = 488;
!(BX)        XmNheight = 484;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmFormDialog form_about;
!(BX)    };
!(BX)    callbacks {
!(BX)        callbacks Style_use2Reasons;
!(BX)    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
!(BX)};

object pushButton_biases_dismiss : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Dismiss");
        XmNx = 140;
        XmNy = 400;
        XmNwidth = 70;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        XmNactivateCallback = procedure BxUnmanageCB("bulletinBoard_biases");
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_biases_apply : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Apply");
        XmNx = 70;
        XmNy = 400;
        XmNwidth = 70;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        XmNactivateCallback = procedure do_biases_apply();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object toggleButton_biases_together : XmToggleButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Same biases");
        XmNwidth = 121;
        XmNheight = 26;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_toggleButton_biases_together);
        XmNvalueChangedCallback = procedure do_biases_toggle();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object toggleButton_biases_separate : XmToggleButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Different biases");
        XmNwidth = 121;
        XmNheight = 26;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_toggleButton_biases_separate);
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object radioBox_biases_together : XmRadioBox widget {
    arguments {
        arguments Style_use2;
        XmNx = 150;
        XmNy = 10;
        XmNwidth = 127;
        XmNheight = 61;
    };
    controls {
         managed XmToggleButton toggleButton_biases_together;
         managed XmToggleButton toggleButton_biases_separate;
    };
    callbacks {
        callbacks Style_use2Reasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object label_biases_files : XmLabel widget {
    arguments {
        arguments Style_use2;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Section ID\'s:", separate=true) &
 compound_string("  Section 1: XXX:XXX", separate=true) &
 compound_string("  Section 2: XXX:XXX");
        XmNx = 10;
        XmNy = 10;
        XmNwidth = 140;
        XmNheight = 50;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_label_biases_files);
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object scale_biases_heading1 : XmScale widget {
    arguments {
        arguments Style_use2;
        XmNminimum = -99;
        XmNdecimalPoints = 1;
        XmNvalue = 0;
        XmNsliderVisual = XmSHADOWED_BACKGROUND;
        XmNtitleString = compound_string("Section 1 Heading (deg)");
        XmNmaximum = 99;
        XmNslidingMode = XmSLIDER;
        XmNshowArrows = TRUE;
        XmNshowValue = TRUE;
        XmNorientation = XmHORIZONTAL;
        XmNx = 10;
        XmNy = 80;
        XmNwidth = 260;
        XmNheight = 58;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_scale_biases_heading1);
        XmNvalueChangedCallback = procedure do_biases_heading();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object scale_biases_roll1 : XmScale widget {
    arguments {
        arguments Style_use2;
        XmNminimum = -99;
        XmNdecimalPoints = 1;
        XmNvalue = 0;
        XmNtitleString = compound_string("Section 1 Roll (deg)");
        XmNmaximum = 99;
        XmNshowArrows = TRUE;
        XmNshowValue = TRUE;
        XmNorientation = XmHORIZONTAL;
        XmNx = 10;
        XmNy = 140;
        XmNwidth = 260;
        XmNheight = 58;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_scale_biases_roll1);
        XmNvalueChangedCallback = procedure do_biases_roll();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object scale_biases_roll2 : XmScale widget {
    arguments {
        arguments Style_use2;
        XmNminimum = -99;
        XmNdecimalPoints = 1;
        XmNvalue = 0;
        XmNtitleString = compound_string("Section 2 Roll (deg)");
        XmNmaximum = 99;
        XmNshowArrows = TRUE;
        XmNshowValue = TRUE;
        XmNorientation = XmHORIZONTAL;
        XmNx = 10;
        XmNy = 280;
        XmNwidth = 260;
        XmNheight = 58;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_scale_biases_roll2);
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object scale_biases_heading2 : XmScale widget {
    arguments {
        arguments Style_use2;
        XmNminimum = -99;
        XmNdecimalPoints = 1;
        XmNvalue = 0;
        XmNtitleString = compound_string("Section 2 Heading (deg)");
        XmNmaximum = 99;
        XmNshowArrows = TRUE;
        XmNshowValue = TRUE;
        XmNorientation = XmHORIZONTAL;
        XmNx = 10;
        XmNy = 220;
        XmNwidth = 260;
        XmNheight = 58;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_scale_biases_heading2);
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object separator6 : XmSeparator widget {
    arguments {
        XmNx = 10;
        XmNy = 200;
        XmNwidth = 260;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object separator8 : XmSeparator widget {
    arguments {
        XmNx = 10;
        XmNy = 60;
        XmNwidth = 260;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object pushButton_biases_applyall : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Apply to All Files");
        XmNx = 70;
        XmNy = 360;
        XmNwidth = 140;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_biases_applyall);
        XmNactivateCallback = procedure do_biases_applyall();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object separator9 : XmSeparator widget {
    arguments {
        XmNx = 10;
        XmNy = 340;
        XmNwidth = 260;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object bulletinBoard_biases : XmBulletinBoardDialog widget {
    arguments {
        arguments Style_use2;
        XmNdialogTitle = compound_string("Heading & Roll Bias");
        XmNautoUnmanage = false;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 0;
        XmNy = 1114;
        XmNwidth = 284;
        XmNheight = 446;
    };
    controls {
         managed XmSeparator separator9;
         managed XmPushButton pushButton_biases_applyall;
         managed XmSeparator separator8;
         managed XmSeparator separator6;
         managed XmScale scale_biases_heading2;
         managed XmScale scale_biases_roll2;
         managed XmScale scale_biases_roll1;
         managed XmScale scale_biases_heading1;
         managed XmLabel label_biases_files;
         managed XmRadioBox radioBox_biases_together;
         managed XmPushButton pushButton_biases_apply;
         managed XmPushButton pushButton_biases_dismiss;
    };
    callbacks {
        callbacks Style_use2Reasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

!(BX)object dialogShell_biases : XmDialogShell widget {
!(BX)    arguments {
!(BX)        arguments Style_use2;
!(BX)        XmNtitle = "Attitude Biases";
!(BX)        XmNwidth = 284;
!(BX)        XmNheight = 446;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmBulletinBoardDialog bulletinBoard_biases;
!(BX)    };
!(BX)    callbacks {
!(BX)        callbacks Style_use2Reasons;
!(BX)    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
!(BX)};

object pushButton_naverr_setnone : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Skip Crossing");
        XmNrecomputeSize = false;
        XmNx = 350;
        XmNy = 10;
        XmNwidth = 100;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_naverr_setnone);
        XmNactivateCallback = procedure do_naverr_setnone();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_naverr_previous : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Previous");
        XmNrecomputeSize = false;
        XmNx = 90;
        XmNy = 10;
        XmNwidth = 80;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_naverr_previous);
        XmNactivateCallback = procedure do_naverr_previous();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_naverr_next : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Next");
        XmNrecomputeSize = false;
        XmNx = 170;
        XmNy = 10;
        XmNwidth = 80;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_naverr_next);
        XmNactivateCallback = procedure do_naverr_next();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_naverr_minmisfit : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Minimum Misfit");
        XmNrecomputeSize = false;
        XmNx = 10;
        XmNy = 620;
        XmNwidth = 120;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_naverr_minimum);
        XmNactivateCallback = procedure do_naverr_minmisfit();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_naverr_selecttie : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Select Tie");
        XmNrecomputeSize = false;
        XmNx = 750;
        XmNy = 10;
        XmNwidth = 100;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_naverr_selecttie);
        XmNactivateCallback = procedure do_naverr_selecttie();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_naverr_dismiss : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Dismiss");
        XmNrecomputeSize = false;
        XmNx = 850;
        XmNy = 10;
        XmNwidth = 70;
        XmNheight = 60;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_naverr_dismiss);
       XmNactivateCallback = procedures {
                 do_dismiss_naverr();
                 BxUnmanageCB("bulletinBoard_biases");
                 BxUnmanageCB("bulletinBoard_naverr");
        };
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object drawingArea_naverr_corr : XmDrawingArea widget {
    arguments {
        arguments Style_use2;
        XmNborderWidth = 1;
        XmNbackground = color('white');
        XmNresizePolicy = XmRESIZE_NONE;
        XmNx = 10;
        XmNy = 240;
        XmNwidth = 301;
        XmNheight = 301;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_drawingArea_naverr_corr);
        XmNinputCallback = procedure do_naverr_corr_input();
        XmNexposeCallback = procedure do_naverr_corr_expose();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object drawingArea_naverr_cont : XmDrawingArea widget {
    arguments {
        arguments Style_use2;
        XmNborderWidth = 1;
        XmNbackground = color('white');
        XmNresizePolicy = XmRESIZE_NONE;
        XmNx = 320;
        XmNy = 70;
        XmNwidth = 600;
        XmNheight = 600;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_drawingArea_naverr_cont);
        XmNinputCallback = procedure do_naverr_cont_input();
        XmNexposeCallback = procedure do_naverr_cont_expose();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object label_naverr_status : XmLabel widget {
    arguments {
        arguments Style_use2;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("No Data Imported");
        XmNrecomputeSize = false;
        XmNx = 10;
        XmNy = 50;
        XmNwidth = 300;
        XmNheight = 150;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_label_naverr_status);
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_naverr_nextunset : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Next Unset");
        XmNrecomputeSize = false;
        XmNx = 250;
        XmNy = 10;
        XmNwidth = 90;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_naverr_nextunset);
        XmNactivateCallback = procedure do_naverr_nextunset();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object label_naverr_offsets : XmLabel widget {
    arguments {
        arguments Style_use2;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("No Data Imported");
        XmNrecomputeSize = false;
        XmNx = 10;
        XmNy = 200;
        XmNwidth = 300;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_label_naverr_offsets);
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_naverr_zerooffset : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Zero Offset");
        XmNx = 650;
        XmNy = 40;
        XmNwidth = 100;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_naverr_zerooffset);
        XmNactivateCallback = procedure do_naverr_zerooffset();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_naverr_fullsize : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Full Size");
        XmNx = 350;
        XmNy = 40;
        XmNwidth = 100;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_naverr_fullsize);
        XmNactivateCallback = procedure do_naverr_fullsize();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_naverr_deletetie : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Delete Tie");
        XmNrecomputeSize = false;
        XmNx = 750;
        XmNy = 40;
        XmNwidth = 100;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_naverr_deletetie);
        XmNactivateCallback = procedure do_naverr_deletetie();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_naverr_addtie : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Add Tie");
        XmNrecomputeSize = false;
        XmNx = 650;
        XmNy = 10;
        XmNwidth = 100;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_naverr_addtie);
        XmNactivateCallback = procedure do_naverr_addtie();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_naverr_resettie : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Reset Offset");
        XmNrecomputeSize = false;
        XmNx = 450;
        XmNy = 40;
        XmNwidth = 100;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_naverr_resettie);
        XmNactivateCallback = procedure do_naverr_resettie();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object toggleButton_misfitcenter_zero : XmToggleButton widget {
    arguments {
        arguments Style_use2;
        XmNindicatorOn = XmINDICATOR_CHECK_BOX;
        XmNlabelString = compound_string("Center on Zero Offset");
        XmNwidth = 174;
        XmNheight = 26;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_toggleButton_misfitcenter_zero);
        XmNvalueChangedCallback = procedure do_naverr_misfitcenter();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object toggleButton_misfitcenter_auto : XmToggleButton widget {
    arguments {
        arguments Style_use2;
        XmNindicatorOn = XmINDICATOR_CHECK_BOX;
        XmNlabelString = compound_string("Center on Current Offset");
        XmNwidth = 174;
        XmNheight = 26;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_toggleButton_misfitcenter_auto);
        XmNvalueChangedCallback = procedure do_naverr_misfitcenter();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object radioBox_misfitcenter : XmRadioBox widget {
    arguments {
        arguments Style_use2;
        XmNx = 130;
        XmNy = 620;
        XmNwidth = 180;
        XmNheight = 61;
    };
    controls {
         managed XmToggleButton toggleButton_misfitcenter_zero;
         managed XmToggleButton toggleButton_misfitcenter_auto;
    };
    callbacks {
        callbacks Style_use2Reasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_naverr_settie : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Set Offset");
        XmNx = 550;
        XmNy = 10;
        XmNwidth = 100;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_naverr_settie);
        XmNactivateCallback = procedure do_naverr_setoffset();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_naverr_biases : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Biases");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
       XmNactivateCallback = procedures {
                 BxManageCB("bulletinBoard_biases");
                 do_biases_init();
        };
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_naverr_controls : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Contours");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        XmNactivateCallback = procedure BxManageCB("form_controls");
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pulldownMenu_settings : XmPulldownMenu widget {
    arguments {
        arguments Style_use2;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 65;
        XmNheight = 48;
    };
    controls {
         managed XmPushButton pushButton_naverr_biases;
         managed XmPushButton pushButton_naverr_controls;
    };
    callbacks {
        callbacks Style_use2Reasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object cascadeButton_settings : XmCascadeButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Settings");
        XmNx = 5;
        XmNy = 5;
        XmNwidth = 66;
        XmNheight = 22;
    };
    controls {
         unmanaged XmPulldownMenu pulldownMenu_settings;
    };
    callbacks {
        callbacks Style_use2Reasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object menuBar_settings : XmMenuBar widget {
    arguments {
        arguments Style_use2;
        XmNx = 10;
        XmNy = 10;
        XmNwidth = 76;
        XmNheight = 32;
    };
    controls {
         managed XmCascadeButton cascadeButton_settings;
    };
    callbacks {
        callbacks Style_use2Reasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_naverr_zerozoffset : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Zero Z Offset");
        XmNx = 550;
        XmNy = 40;
        XmNwidth = 100;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_naverr_zerozoffset);
        XmNactivateCallback = procedure do_naverr_zerozoffset();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object drawingArea_naverr_zcorr : XmDrawingArea widget {
    arguments {
        arguments Style_use2;
        XmNborderWidth = 1;
        XmNbackground = color('white');
        XmNresizePolicy = XmRESIZE_NONE;
        XmNx = 10;
        XmNy = 550;
        XmNwidth = 300;
        XmNheight = 60;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_drawingArea_naverr_zcorr);
        XmNinputCallback = procedure do_naverr_zcorr_input();
        XmNexposeCallback = procedure do_naverr_corr_expose();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_naverr_minxymisfit : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Minimum XY Misfit");
        XmNx = 10;
        XmNy = 650;
        XmNwidth = 120;
        XmNheight = 32;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_naverr_minxymisfit);
        XmNactivateCallback = procedure do_naverr_minxymisfit();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_naverr_unset : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Unset Crossing");
        XmNrecomputeSize = false;
        XmNx = 450;
        XmNy = 10;
        XmNwidth = 100;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_naverr_unset);
        XmNactivateCallback = procedure do_naverr_unset();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object bulletinBoard_naverr : XmBulletinBoardDialog widget {
    arguments {
        arguments Style_use2;
        XmNdialogTitle = compound_string("Navadjust: Nav Error at Crossing" &
 "s");
        XmNdefaultPosition = true;
        XmNautoUnmanage = false;
        XmNnoResize = true;
        XmNresizePolicy = XmRESIZE_NONE;
        XmNx = 258;
        XmNy = 456;
        XmNwidth = 935;
        XmNheight = 685;
    };
    controls {
         managed XmPushButton pushButton_naverr_unset;
         managed XmPushButton pushButton_naverr_minxymisfit;
         managed XmDrawingArea drawingArea_naverr_zcorr;
         managed XmPushButton pushButton_naverr_zerozoffset;
         managed XmMenuBar menuBar_settings;
         managed XmPushButton pushButton_naverr_settie;
         managed XmRadioBox radioBox_misfitcenter;
         managed XmPushButton pushButton_naverr_resettie;
         managed XmPushButton pushButton_naverr_addtie;
         managed XmPushButton pushButton_naverr_deletetie;
         managed XmPushButton pushButton_naverr_fullsize;
         managed XmPushButton pushButton_naverr_zerooffset;
         managed XmLabel label_naverr_offsets;
         managed XmPushButton pushButton_naverr_nextunset;
         managed XmLabel label_naverr_status;
         managed XmDrawingArea drawingArea_naverr_cont;
         managed XmDrawingArea drawingArea_naverr_corr;
         managed XmPushButton pushButton_naverr_dismiss;
         managed XmPushButton pushButton_naverr_selecttie;
         managed XmPushButton pushButton_naverr_minmisfit;
         managed XmPushButton pushButton_naverr_next;
         managed XmPushButton pushButton_naverr_previous;
         managed XmPushButton pushButton_naverr_setnone;
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_bulletinBoard_naverr);
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

!(BX)object dialogShell_naverr : XmDialogShell widget {
!(BX)    arguments {
!(BX)        arguments Style_use2;
!(BX)        XmNwidth = 935;
!(BX)        XmNheight = 685;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmBulletinBoardDialog bulletinBoard_naverr;
!(BX)    };
!(BX)    callbacks {
!(BX)        callbacks Style_use2Reasons;
!(BX)    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
!(BX)};

object fileSelectionBox : XmFileSelectionBox widget {
    arguments {
        XmNdialogStyle = XmDIALOG_MODELESS;
        XmNdialogTitle = compound_string("File Selection");
        XmNlistVisibleItemCount = 13;
        XmNtextFontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNlabelFontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNbuttonFontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNautoUnmanage = false;
        XmNnoResize = true;
        XmNresizePolicy = XmRESIZE_NONE;
        XmNx = 10;
        XmNy = 10;
        XmNwidth = 590;
        XmNheight = 470;
    };
    controls {
    };
    callbacks {
       MrmNcreateCallback = procedures {
                 BxUnmanageCB("fileSelectionBox.Help");
                 do_fileselection_mode(MBNA_FILESELECTION_NONE);
                 BxGlobalWidgetId(BXG_fileSelectionBox);
        };
       XmNokCallback = procedures {
                 do_fileselection_ok();
                 BxUnmanageCB("bulletinBoard_fileselection");
        };
       XmNcancelCallback = procedures {
                 BxUnmanageCB("bulletinBoard_fileselection");
                 do_fileselection_mode(MBNA_FILESELECTION_NONE);
        };
    };
};

object label_format : XmLabel widget {
    arguments {
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNlabelString = compound_string("MBIO Format ID:");
        XmNrecomputeSize = false;
        XmNx = 10;
        XmNy = 480;
        XmNwidth = 150;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_label_format);
    };
};

object textField_format : XmTextField widget {
    arguments {
        XmNfontList = font_table(
		font('-adobe-helvetica-bold-r-normal--14-140-75-75-p-82-iso8859-1'));
        XmNx = 160;
        XmNy = 480;
        XmNwidth = 100;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_textField_format);
    };
};

object bulletinBoard_fileselection : XmBulletinBoardDialog widget {
    arguments {
        XmNdialogStyle = XmDIALOG_FULL_APPLICATION_MODAL;
        XmNresizePolicy = XmRESIZE_NONE;
        XmNx = 0;
        XmNy = 1072;
        XmNwidth = 611;
        XmNheight = 530;
    };
    controls {
         managed XmTextField textField_format;
         managed XmLabel label_format;
         managed XmFileSelectionBox fileSelectionBox;
    };
    callbacks {
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_bulletinBoard_fileselection);
    };
};

!(BX)object xmDialogShell_fileselection : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNtitle = "Select Input Data File";
!(BX)        XmNallowShellResize = false;
!(BX)        XmNwidth = 611;
!(BX)        XmNheight = 530;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmBulletinBoardDialog bulletinBoard_fileselection;
!(BX)    };
!(BX)    callbacks {
!(BX)        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_xmDialogShell_fileselection);
!(BX)    };
!(BX)};

object pushButton_error : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("OK");
        XmNx = 110;
        XmNy = 110;
        XmNwidth = 90;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object label_error_three : XmLabel widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("permission in this directory!");
        XmNrecomputeSize = false;
        XmNx = 10;
        XmNy = 70;
        XmNwidth = 290;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_label_error_three);
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object label_error_one : XmLabel widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Unable to open output file.");
        XmNrecomputeSize = false;
        XmNx = 10;
        XmNy = 10;
        XmNwidth = 290;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_label_error_one);
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object label_error_two : XmLabel widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("You probably do not have write");
        XmNrecomputeSize = false;
        XmNx = 10;
        XmNy = 40;
        XmNwidth = 290;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_label_error_two);
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object bulletinBoard_error : XmBulletinBoardDialog widget {
    arguments {
        arguments Style_use2;
        XmNdialogStyle = XmDIALOG_APPLICATION_MODAL;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 0;
        XmNy = 1257;
        XmNwidth = 311;
        XmNheight = 160;
    };
    controls {
         managed XmLabel label_error_two;
         managed XmLabel label_error_one;
         managed XmLabel label_error_three;
         managed XmPushButton pushButton_error;
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_bulletinBoard_error);
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

!(BX)object xmDialogShell_error : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNtitle = "Error";
!(BX)        XmNwidth = 311;
!(BX)        XmNheight = 160;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmBulletinBoardDialog bulletinBoard_error;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object label_message : XmLabel widget {
    arguments {
        arguments Style_use2;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("MBnavadjust is loading data...");
        XmNx = 10;
        XmNy = 10;
        XmNwidth = 510;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_label_message);
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object label_pleasewait : XmLabel widget {
    arguments {
        arguments Style_use2;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Thank you for your patience.");
        XmNrecomputeSize = false;
        XmNx = 10;
        XmNy = 40;
        XmNwidth = 510;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object bulletinBoard_message : XmBulletinBoardDialog widget {
    arguments {
        arguments Style_use2;
        XmNdialogStyle = XmDIALOG_FULL_APPLICATION_MODAL;
        XmNresizePolicy = XmRESIZE_ANY;
        XmNx = 0;
        XmNy = 1294;
        XmNwidth = 542;
        XmNheight = 86;
    };
    controls {
         managed XmLabel label_pleasewait;
         managed XmLabel label_message;
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_bulletinBoard_message);
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

!(BX)object xmDialogShell_message : XmDialogShell widget {
!(BX)    arguments {
!(BX)        arguments Style_use2;
!(BX)        XmNtitle = "Please Wait...";
!(BX)        XmNallowShellResize = true;
!(BX)        XmNmwmInputMode = MWM_INPUT_MODELESS;
!(BX)        XmNdeleteResponse = XmUNMAP;
!(BX)        XmNwidth = 542;
!(BX)        XmNheight = 86;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmBulletinBoardDialog bulletinBoard_message;
!(BX)    };
!(BX)    callbacks {
!(BX)        callbacks Style_use2Reasons;
!(BX)    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
!(BX)};

object pushButton_new : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("New");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_new);
       XmNactivateCallback = procedures {
                 BxManageCB("bulletinBoard_fileselection");
                 BxSetValuesCB("xmDialogShell_fileselection.tit" &
 "le=Specify New Project");
                 BxUnmanageCB("label_format");
                 BxUnmanageCB("textField_format");
                 do_fileselection_mode(MBNA_FILESELECTION_NEW);
        };
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_open : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Open");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_open);
       XmNactivateCallback = procedures {
                 BxManageCB("bulletinBoard_fileselection");
                 BxUnmanageCB("label_format");
                 BxUnmanageCB("textField_format");
                 BxSetValuesCB("xmDialogShell_fileselection.tit" &
 "le=Open Project");
                 do_fileselection_mode(MBNA_FILESELECTION_OPEN);
        };
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_close : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Close");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_close);
        XmNactivateCallback = procedure do_file_close();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object separator2 : XmSeparator widget {
    arguments {
        arguments Style_use2;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_importdata : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Import Swath Data");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_importdata);
       XmNactivateCallback = procedures {
                 BxSetValuesCB("xmDialogShell_fileselection.tit" &
 "le=Import Swath Data File or Datalist");
                 BxSetValuesCB("label_format.labelString=MBIO F" &
 "ormat ID:");
                 BxManageCB("label_format");
                 BxManageCB("textField_format");
                 BxManageCB("bulletinBoard_fileselection");
                 do_fileselection_mode(MBNA_FILESELECTION_IMPORT);
        };
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object separator3 : XmSeparator widget {
    arguments {
        arguments Style_use2;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_quit : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Quit");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_quit);
       XmNactivateCallback = procedures {
                 do_quit();
                 BxExitCB(0);
        };
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pulldownMenu_file : XmPulldownMenu widget {
    arguments {
        arguments Style_use2;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 126;
        XmNheight = 118;
    };
    controls {
         managed XmPushButton pushButton_new;
         managed XmPushButton pushButton_open;
         managed XmPushButton pushButton_close;
         managed XmSeparator separator2;
         managed XmPushButton pushButton_importdata;
         managed XmSeparator separator3;
         managed XmPushButton pushButton_quit;
    };
    callbacks {
        callbacks Style_use2Reasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object cascadeButton_file : XmCascadeButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("File");
        XmNx = 5;
        XmNy = 5;
        XmNwidth = 36;
        XmNheight = 22;
    };
    controls {
         unmanaged XmPulldownMenu pulldownMenu_file;
    };
    callbacks {
        callbacks Style_use2Reasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_controls : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Controls");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        XmNactivateCallback = procedure BxManageCB("form_controls");
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pulldownMenu_option : XmPulldownMenu widget {
    arguments {
        arguments Style_use2;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 61;
        XmNheight = 26;
    };
    controls {
         managed XmPushButton pushButton_controls;
    };
    callbacks {
        callbacks Style_use2Reasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object cascadeButton_option : XmCascadeButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Option");
        XmNx = 41;
        XmNy = 5;
        XmNwidth = 55;
        XmNheight = 22;
    };
    controls {
         unmanaged XmPulldownMenu pulldownMenu_option;
    };
    callbacks {
        callbacks Style_use2Reasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_showsurveys : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Show Surveys");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_showsurveys);
        XmNactivateCallback = procedure do_view_showsurveys();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_showdata : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Show Data Files");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_showdata);
        XmNactivateCallback = procedure do_view_showdata();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_showsections : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Show Data File Sections");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_showsections);
        XmNactivateCallback = procedure do_view_showsections();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_showcrossings : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Show All Crossings");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_showcrossings);
        XmNactivateCallback = procedure do_view_showcrossings();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_showmediocrecrossings : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Show >10% Overlap Crossings");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_showmediocrecrossings);
        XmNactivateCallback = procedure do_view_showmediocrecrossings();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_showgoodcrossings : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Show >25% Overlap Crossings");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_showgoodcrossings);
        XmNactivateCallback = procedure do_view_showgoodcrossings();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_showbettercrossings : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Show >50% Overlap Crossings");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_showbettercrossings);
        XmNactivateCallback = procedure do_view_showbettercrossings();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_showtruecrossings : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Show True Crossings");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_showtruecrossings);
        XmNactivateCallback = procedure do_view_showtruecrossings();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_showties : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Show Ties");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_showties);
        XmNactivateCallback = procedure do_view_showties();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object separator13 : XmSeparator widget {
    arguments {
    };
    controls {
    };
    callbacks {
    };
};

object toggleButton_showallsurveys : XmToggleButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Show All Surveys");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_toggleButton_showallsurveys);
        XmNvalueChangedCallback = procedure do_view_showallsurveys();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object toggleButton_showselectedsurvey : XmToggleButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Show Only Selected Survey");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_toggleButton_showselectedsurvey);
        XmNvalueChangedCallback = procedure do_view_showselectedsurveys();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object toggleButton_showselectedfile : XmToggleButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Show Only Selected File");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_toggleButton_showselectedfile);
        XmNvalueChangedCallback = procedure do_view_showselectedfile();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object toggleButton_showwithselectedsurvey : XmToggleButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Show Only With Selected Survey");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_toggleButton_showwithselectedsurvey);
        XmNvalueChangedCallback = procedure do_view_showwithselectedsurveys();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object toggleButton_showwithselectedfile : XmToggleButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Show Only With Selected File");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_toggleButton_showwithselectedfile);
        XmNvalueChangedCallback = procedure do_view_showwithselectedfile();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object toggleButton_showselectedsection : XmToggleButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Show Only With Selected Section");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_toggleButton_showselectedsection);
        XmNvalueChangedCallback = procedure do_view_showselectedsection();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object separator15 : XmSeparator widget {
    arguments {
    };
    controls {
    };
    callbacks {
    };
};

object pushButton_makegrid : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Visualize Survey");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_makegrid);
        XmNactivateCallback = procedure do_make_grid();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_showmodelplot : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Show Modelplot");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_showmodelplot);
       XmNactivateCallback = procedures {
                 BxManageCB("bulletinBoard_modelplot");
                 do_modelplot_show();
        };
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pulldownMenu_view : XmPulldownMenu widget {
    arguments {
        arguments Style_use2;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 225;
        XmNheight = 360;
    };
    controls {
         managed XmPushButton pushButton_showsurveys;
         managed XmPushButton pushButton_showdata;
         managed XmPushButton pushButton_showsections;
         managed XmPushButton pushButton_showcrossings;
         managed XmPushButton pushButton_showmediocrecrossings;
         managed XmPushButton pushButton_showgoodcrossings;
         managed XmPushButton pushButton_showbettercrossings;
         managed XmPushButton pushButton_showtruecrossings;
         managed XmPushButton pushButton_showties;
         managed XmSeparator separator13;
         managed XmToggleButton toggleButton_showallsurveys;
         managed XmToggleButton toggleButton_showselectedsurvey;
         managed XmToggleButton toggleButton_showselectedfile;
         managed XmToggleButton toggleButton_showwithselectedsurvey;
         managed XmToggleButton toggleButton_showwithselectedfile;
         managed XmToggleButton toggleButton_showselectedsection;
         managed XmSeparator separator15;
         managed XmPushButton pushButton_makegrid;
         managed XmPushButton pushButton_showmodelplot;
    };
    callbacks {
        callbacks Style_use2Reasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object cascadeButton_view : XmCascadeButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("View");
        XmNx = 96;
        XmNy = 5;
        XmNwidth = 45;
        XmNheight = 22;
    };
    controls {
         unmanaged XmPulldownMenu pulldownMenu_view;
    };
    callbacks {
        callbacks Style_use2Reasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_poornav : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Set File Poor Navigation");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_poornav);
        XmNactivateCallback = procedure do_action_poornav();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_goodnav : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Set File Good Navigation");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_goodnav);
        XmNactivateCallback = procedure do_action_goodnav();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_fixednav : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Set File Fixed Navigation");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_fixednav);
        XmNactivateCallback = procedure do_action_fixednav();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_fixedxynav : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Set File Fixed XY Navigation");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_fixedxynav);
        XmNactivateCallback = procedure do_action_fixedxynav();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_fixedznav : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Set File Fixed Z Navigation");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_fixedznav);
        XmNactivateCallback = procedure do_action_fixedznav();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_tie_xy : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Set tie to XY only");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_tie_xy);
        XmNactivateCallback = procedure do_action_tie_xy();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_tie_z : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Set tie to Z only");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_tie_z);
        XmNactivateCallback = procedure do_action_z();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_tie_xyz : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Set tie to full XYZ");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_tie_xyz);
        XmNactivateCallback = procedure do_action_tie_xyz();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object separator7 : XmSeparator widget {
    arguments {
    };
    controls {
    };
    callbacks {
    };
};

object pushButton_autopick : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Auto-Pick Offsets");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_autopick);
        XmNactivateCallback = procedure do_action_autopick();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_autopickhorizontal : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Auto-Pick Horizontal Offsets");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_autopickhorizontal);
        XmNactivateCallback = procedure do_action_autopickhorizontal();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_autosetsvsvertical : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Auto-Set Survey-vs-Survey Vertical Offsets");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_autosetsvsvertical);
        XmNactivateCallback = procedure do_action_autosetsvsvertical();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object separator10 : XmSeparator widget {
    arguments {
    };
    controls {
    };
    callbacks {
    };
};

object pushButton_newcrossings : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Check For New Crossings");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_newcrossings);
        XmNactivateCallback = procedure do_action_checknewcrossings();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object separator17 : XmSeparator widget {
    arguments {
    };
    controls {
    };
    callbacks {
    };
};

object pushButton_analyzecrossings : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Analyze Crossings");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_analyzecrossings);
       XmNactivateCallback = procedures {
                 BxManageCB("bulletinBoard_naverr");
                 do_naverr_init();
                 do_action_analyzecrossings();
        };
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object separator11 : XmSeparator widget {
    arguments {
    };
    controls {
    };
    callbacks {
    };
};

object pushButton_zerozoffsets : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Zero All Z Offsets");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_zerozoffsets);
        XmNactivateCallback = procedure do_zerozoffsets();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object separator16 : XmSeparator widget {
    arguments {
    };
    controls {
    };
    callbacks {
    };
};

object pushButton_invertnav : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Invert Navigation");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_invertnav);
        XmNactivateCallback = procedure do_action_invertnav();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_applynav : XmPushButtonGadget widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Apply Adjusted Navigation");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_applynav);
        XmNactivateCallback = procedure do_apply_nav();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pulldownMenu_action : XmPulldownMenu widget {
    arguments {
        arguments Style_use2;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 182;
        XmNheight = 344;
    };
    controls {
         managed XmPushButton pushButton_poornav;
         managed XmPushButton pushButton_goodnav;
         managed XmPushButton pushButton_fixednav;
         managed XmPushButton pushButton_fixedxynav;
         managed XmPushButton pushButton_fixedznav;
         managed XmPushButton pushButton_tie_xy;
         managed XmPushButton pushButton_tie_z;
         managed XmPushButton pushButton_tie_xyz;
         managed XmSeparator separator7;
         managed XmPushButton pushButton_autopick;
         managed XmPushButton pushButton_autopickhorizontal;
         managed XmPushButton pushButton_autosetsvsvertical;
         managed XmSeparator separator10;
         managed XmPushButton pushButton_newcrossings;
         managed XmSeparator separator17;
         managed XmPushButton pushButton_analyzecrossings;
         managed XmSeparator separator11;
         managed XmPushButton pushButton_zerozoffsets;
         managed XmSeparator separator16;
         managed XmPushButton pushButton_invertnav;
         managed XmPushButtonGadget pushButton_applynav;
    };
    callbacks {
        callbacks Style_use2Reasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object cascadeButton_action : XmCascadeButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("Action");
        XmNx = 141;
        XmNy = 5;
        XmNwidth = 53;
        XmNheight = 22;
    };
    controls {
         unmanaged XmPulldownMenu pulldownMenu_action;
    };
    callbacks {
        callbacks Style_use2Reasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pushButton_about : XmPushButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("About");
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        XmNactivateCallback = procedure BxManageCB("form_about");
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object pulldownMenu_about : XmPulldownMenu widget {
    arguments {
        arguments Style_use2;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 46;
        XmNheight = 26;
    };
    controls {
         managed XmPushButton pushButton_about;
    };
    callbacks {
        callbacks Style_use2Reasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object cascadeButton_about : XmCascadeButton widget {
    arguments {
        arguments Style_use2;
        XmNlabelString = compound_string("About");
        XmNx = 907;
        XmNy = 5;
        XmNwidth = 50;
        XmNheight = 22;
    };
    controls {
         unmanaged XmPulldownMenu pulldownMenu_about;
    };
    callbacks {
        callbacks Style_use2Reasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object menuBar_mbnavadjust : XmMenuBar widget {
    arguments {
        arguments Style_use2;
        XmNmenuHelpWidget = XmCascadeButton cascadeButton_about;
        XmNwidth = 962;
        XmNheight = 32;
    };
    controls {
         managed XmCascadeButton cascadeButton_file;
         managed XmCascadeButton cascadeButton_option;
         managed XmCascadeButton cascadeButton_view;
         managed XmCascadeButton cascadeButton_action;
         managed XmCascadeButton cascadeButton_about;
    };
    callbacks {
        callbacks Style_use2Reasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object list_data : XmList widget {
    arguments {
        arguments Style_use2;
        XmNitemCount = 1;
        XmNitems = string_table(
	compound_string(" "));
        XmNfontList = font_table(
		font('-*-fixed-medium-r-*-*-*-120-*-*-*-*-iso8859-1'));
        XmNselectionPolicy = XmSINGLE_SELECT;
        XmNlistSizePolicy = XmCONSTANT;
        XmNwidth = 490;
        XmNheight = 330;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_list_data);
        XmNsingleSelectionCallback = procedure do_list_data_select();
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object scrolledWindow_datalist : XmScrolledWindow widget {
    arguments {
        arguments Style_use2;
        XmNscrollingPolicy = XmAPPLICATION_DEFINED;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 8;
        XmNleftOffset = 10;
        XmNrightOffset = 22;
        XmNtopOffset = 30;
        XmNleftWidget = XmScrolledWindow scrolledWindow_messages;
        XmNtopWidget = XmLabel label_listdata;
        XmNx = 450;
        XmNy = 30;
        XmNwidth = 490;
        XmNheight = 330;
    };
    controls {
         managed XmList list_data;
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_scrolledWindow_datalist);
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object label_listdata : XmLabel widget {
    arguments {
        arguments Style_use2;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Data Files:");
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 450;
        XmNx = 450;
        XmNy = 0;
        XmNwidth = 120;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_label_listdata);
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object label_status : XmLabel widget {
    arguments {
        arguments Style_use2;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("No Data Imported");
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomWidget = XmScrolledWindow scrolledWindow_messages;
        XmNleftOffset = 0;
        XmNtopOffset = 0;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 440;
        XmNheight = 140;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_label_status);
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object text_messages : XmText widget {
    arguments {
        arguments Style_use2;
        XmNeditMode = XmMULTI_LINE_EDIT;
        XmNfontList = font_table(
		font('-*-fixed-medium-r-*-*-*-120-*-*-*-*-iso8859-1'));
        XmNcolumns = 120;
        XmNwordWrap = false;
        XmNautoShowCursorPosition = false;
        XmNrows = 1;
        XmNeditable = false;
    };
    controls {
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_text_messages);
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object scrolledWindow_messages : XmScrolledWindow widget {
    arguments {
        arguments Style_use2;
        XmNscrollingPolicy = XmAUTOMATIC;
        XmNscrollBarDisplayPolicy = XmAS_NEEDED;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = -2;
        XmNleftOffset = 0;
        XmNtopOffset = 10;
        XmNtopWidget = XmLabel label_status;
        XmNx = 0;
        XmNy = 150;
        XmNwidth = 440;
        XmNheight = 220;
    };
    controls {
         managed XmText text_messages;
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_scrolledWindow_messages);
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object form_mbnavadjust : XmForm widget {
    arguments {
        arguments Style_use2;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNwidth = 962;
        XmNheight = 368;
    };
    controls {
         managed XmScrolledWindow scrolledWindow_messages;
         managed XmLabel label_status;
         managed XmLabel label_listdata;
         managed XmScrolledWindow scrolledWindow_datalist;
    };
    callbacks {
        callbacks Style_use2Reasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_form_mbnavadjust);
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

object mainWindow : XmMainWindow widget {
    arguments {
        arguments Style_use2;
        XmNx = 82;
        XmNy = 396;
        XmNwidth = 962;
        XmNheight = 400;
    };
    controls {
!(BX)         unmanaged XmDialogShell dialogShell_modelplot;
!(BX)         unmanaged XmDialogShell dialogShell_controls;
!(BX)         unmanaged XmDialogShell dialogShell_about;
!(BX)         unmanaged XmDialogShell dialogShell_biases;
!(BX)         unmanaged XmDialogShell dialogShell_naverr;
!(BX)         unmanaged XmDialogShell xmDialogShell_fileselection;
!(BX)         unmanaged XmDialogShell xmDialogShell_error;
!(BX)         unmanaged XmDialogShell xmDialogShell_message;
         managed XmMenuBar menuBar_mbnavadjust;
         managed XmForm form_mbnavadjust;
    };
    callbacks {
        callbacks Style_use2Reasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_use2Handlers;
!(BX)    };
};

!(BX)object topLevelShell : TopLevelShell widget {
!(BX)    arguments {
!(BX)        XmNtitle = "MBnavadjust";
!(BX)        XmNiconName = "MBnavadjust";
!(BX)        XmNx = 82;
!(BX)        XmNy = 396;
!(BX)        XmNwidth = 962;
!(BX)        XmNheight = 400;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmMainWindow mainWindow;
!(BX)    };
!(BX)    callbacks {
!(BX)        XmNdestroyCallback = procedure BxExitCB(0);
!(BX)    };
!(BX)};
end module;
