/*
 * Generated by the ICS builderXcessory (BX).
 *
 *
 * BuilderXcessory Version 6.1.3.
 *
 * Identification: 
 */
module main_uil
version = 'V2.1'
names = case_sensitive
!(BX) bx_info("c_options", "")
!(BX) bx_info("c_libs", "-L/usr/lib/Motif1.2 -lXm -lXt -lX11")
!(BX) bx_info("c_cflags", "-Aa -I/usr/include/Motif1.2 -I/usr/include/X11R5")
!(BX) bx_info("c_cc", "cc")
!(BX) bx_info("c_excludeungenerated", "false")
!(BX) bx_info("c_target", "main-c")
!(BX) bx_info("c_information", "")
!(BX) bx_info("c_user_main_loop", "", false)
!(BX) bx_info("c_ignore_shell_geometry", "false")
!(BX) bx_info("c_visible_windows_only", "false")
!(BX) bx_info("c_rm_exp_callbacks", "false")
!(BX) bx_info("c_reverse_dialogs", "true")
!(BX) bx_info("c_dialogs_in_routine", "true")
!(BX) bx_info("c_unmanage_dialogs", "true")
!(BX) bx_info("c_use_locales", "false")
!(BX) bx_info("c_ansi", "true")
!(BX) bx_info("c_name", "MB-System")
!(BX) bx_info("c_class", "MB-System")
!(BX) bx_info("c_app_defaults", "app-defaults", true)
!(BX) bx_info("c_utilities", "bxutils.c", true)
!(BX) bx_info("c_constants", "mbeditviz_creation.h", true)
!(BX) bx_info("c_callbacks", "mbeditviz_callbacks.c", true)
!(BX) bx_info("c_creation", "mbeditviz_creation.c", true)
!(BX) bx_info("c_main", "mbeditviz_main.c", true)
!(BX) bx_info("c_acinclude_m4", "acinclude.m4", false)
!(BX) bx_info("c_configure_in", "configure.in", false)
!(BX) bx_info("c_makefile_am", "Makefile.am", false)
!(BX) bx_info("c_cvsmake", "CVSMake", false)
!(BX) bx_info("c_makefile", "mbeditviz_makefile-c", true)
!(BX) bx_info("c_imakefile", "mbeditviz_Imakefile", true)
!(BX) bx_info("c_dirpath", "")
!(BX) bx_info("include_path", "./sandbox/mbsystem/src/mbview",
!(BX)		".", false)
!(BX) bx_info("xrunner_command", "$(M_ROOT)/arch/X11.5/Xm1.2/mic_xm.o", false)
!(BX) bx_info("system_directory", "/opt/bx-6.1")
!(BX) bx_info("builder_version", "BuilderXcessory Version 6.1.3")
!(BX) bx_info("build_lang", "C")
!(BX) bx_info("default_cpp_args", "")
!(BX) bx_info("new_mrm_style", "true")
!(BX) bx_info("c_wrap_lines", "false")
!(BX) bx_info("uil_wrap_lines", "true")
!(BX) bx_info("integrate_purify", "false")
!(BX) bx_info("purify_command", "purify")
!(BX) bx_info("integrate_xrunner", "false")

procedure BxGlobalWidgetId;
identifier BXG_label_mbeditviz_status;
identifier BXG_toggleButton_mode_browse;
identifier BXG_toggleButton_mode_edit;
identifier BXG_pushButton_deleteselected;
identifier BXG_pushButton_viewselected;
identifier BXG_pushButton_viewall;
identifier BXG_list_filelist;
identifier BXG_pushButton_updategrid;
identifier BXG_pushButton_openswath;
identifier BXG_label_about_version;
identifier BXG_label_mbeditviz_message;
identifier BXG_bulletinBoard_mbeditviz_message;
identifier BXG_dialogShell_mbeditviz_message;
identifier BXG_toggleButton_openmodebrowse;
identifier BXG_toggleButton_openmodeedit;
identifier BXG_radioBox_openmode;
identifier BXG_text_format;
identifier BXG_fileSelectionBox;
identifier BXG_form_open;
identifier BXG_dialogShell_open;
identifier BXG_scale_cellsize;
identifier BXG_label_current;
identifier BXG_label_implied;
identifier BXG_label_error_two;
identifier BXG_label_error_one;
identifier BXG_label_error_three;
identifier BXG_bulletinBoard_error;
procedure BxExitCB(integer);
procedure BxManageCB(string);
procedure BxUnmanageCB(string);
procedure do_mbeditviz_changecellsize();
procedure do_mbeditviz_changeoutputmode();
procedure do_mbeditviz_deleteselected();
procedure do_mbeditviz_fileSelectionBox_openswath();
procedure do_mbeditviz_mode_change();
procedure do_mbeditviz_openfile();
procedure do_mbeditviz_quit();
procedure do_mbeditviz_regrid();
procedure do_mbeditviz_updategrid();
procedure do_mbeditviz_viewall();
procedure do_mbeditviz_viewselected();

list BaseStyle : arguments {
};

list BaseStyleReasons : callbacks {
};

!(BX)list BaseStyleHandlers : handlers {
!(BX)};

list Style_use : arguments {
        arguments BaseStyle;
        XmNfontList = font_table(
		font('-*-helvetica-bold-r-*-*-*-140-75-75-*-*-iso8859-1'));
};

list Style_useReasons : callbacks {
        callbacks BaseStyleReasons;
};

!(BX)list Style_useHandlers : handlers {
!(BX)    handlers BaseStyleHandlers;
!(BX)};


object pushButton_error : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("OK");
        XmNx = 110;
        XmNy = 110;
        XmNwidth = 90;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure BxUnmanageCB("bulletinBoard_error");
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object label_error_three : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("permission in this directory!");
        XmNrecomputeSize = false;
        XmNx = 10;
        XmNy = 70;
        XmNwidth = 290;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_label_error_three);
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object label_error_one : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Unable to open output file.");
        XmNrecomputeSize = false;
        XmNx = 10;
        XmNy = 10;
        XmNwidth = 290;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_label_error_one);
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object label_error_two : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("You probably do not have write");
        XmNrecomputeSize = false;
        XmNx = 10;
        XmNy = 40;
        XmNwidth = 290;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_label_error_two);
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object bulletinBoard_error : XmBulletinBoardDialog widget {
    arguments {
        arguments Style_use;
        XmNdialogStyle = XmDIALOG_APPLICATION_MODAL;
        XmNdialogTitle = compound_string("Error");
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 1125;
        XmNy = 1234;
        XmNwidth = 311;
        XmNheight = 205;
    };
    controls {
         managed XmLabel label_error_two;
         managed XmLabel label_error_one;
         managed XmLabel label_error_three;
         managed XmPushButton pushButton_error;
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_bulletinBoard_error);
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

!(BX)object dialogShell_error : XmDialogShell widget {
!(BX)    arguments {
!(BX)        arguments Style_use;
!(BX)        XmNwidth = 311;
!(BX)        XmNheight = 205;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmBulletinBoardDialog bulletinBoard_error;
!(BX)    };
!(BX)    callbacks {
!(BX)        callbacks Style_useReasons;
!(BX)    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
!(BX)};

object pushButton_gridparameters_apply : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Apply");
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftOffset = 70;
        XmNtopOffset = 18;
        XmNtopWidget = XmLabel label_implied;
        XmNx = 70;
        XmNy = 290;
        XmNwidth = 100;
        XmNheight = 32;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
       XmNactivateCallback = procedures {
                 BxUnmanageCB("form_gridparameters");
                 do_mbeditviz_updategrid();
        };
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object pushButton_gridparameters_dismiss : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Dismiss");
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNrightOffset = 63;
        XmNtopOffset = 18;
        XmNtopWidget = XmLabel label_implied;
        XmNx = 290;
        XmNy = 290;
        XmNwidth = 100;
        XmNheight = 32;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure BxUnmanageCB("form_gridparameters");
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object label_implied : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNborderWidth = 1;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNbackground = color('white');
        XmNlabelString = compound_string("Selected Grid Parameters:", separate=true) &
 compound_string("    Cell Size: 5.00 m", separate=true) &
 compound_string("    Dimensions 2345 X 3456");
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNrightOffset = 11;
        XmNtopOffset = 11;
        XmNtopWidget = XmScale scale_cellsize;
        XmNx = 10;
        XmNy = 200;
        XmNwidth = 430;
        XmNheight = 70;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_label_implied);
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object label_current : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNborderWidth = 0;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Current Grid Parameters:", separate=true) &
 compound_string("    Longitude: -151.56667 -150.00000", separate=true) &
 compound_string("    Latitude:     23.4567 24.0000", separate=true) &
 compound_string("    Cell Size: 10.00 m", separate=true) &
 compound_string("    Dimensions:  1234 X 2345");
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNrightOffset = 11;
        XmNtopOffset = 10;
        XmNx = 10;
        XmNy = 10;
        XmNwidth = 432;
        XmNheight = 110;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_label_current);
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object scale_cellsize : XmScale widget {
    arguments {
        arguments Style_use;
        XmNminimum = 1;
        XmNdecimalPoints = 2;
        XmNvalue = 100;
        XmNtitleString = compound_string("Grid Cell Size (m)");
        XmNmaximum = 25000;
        XmNshowArrows = TRUE;
        XmNshowValue = TRUE;
        XmNhighlightThickness = 1;
        XmNorientation = XmHORIZONTAL;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNrightOffset = 13;
        XmNtopOffset = 8;
        XmNtopWidget = XmLabel label_current;
        XmNx = 10;
        XmNy = 128;
        XmNwidth = 430;
        XmNheight = 61;
    };
    controls {
        Xm_Title {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_scale_cellsize);
        XmNvalueChangedCallback = procedure do_mbeditviz_changecellsize();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object form_gridparameters : XmFormDialog widget {
    arguments {
        arguments Style_use;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 1054;
        XmNy = 1168;
        XmNwidth = 453;
        XmNheight = 337;
    };
    controls {
         managed XmScale scale_cellsize;
         managed XmLabel label_current;
         managed XmLabel label_implied;
         managed XmPushButton pushButton_gridparameters_dismiss;
         managed XmPushButton pushButton_gridparameters_apply;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

!(BX)object dialogShell_gridparameters : XmDialogShell widget {
!(BX)    arguments {
!(BX)        arguments Style_use;
!(BX)        XmNtitle = "Grid Parameters";
!(BX)        XmNwidth = 453;
!(BX)        XmNheight = 337;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmFormDialog form_gridparameters;
!(BX)    };
!(BX)    callbacks {
!(BX)        callbacks Style_useReasons;
!(BX)    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
!(BX)};

object fileSelectionBox : XmFileSelectionBox widget {
    arguments {
        arguments Style_use;
        XmNnoResize = true;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 72;
        XmNleftOffset = 0;
        XmNrightOffset = 6;
        XmNtopOffset = 0;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 498;
        XmNheight = 478;
    };
    controls {
        Xm_Items managed {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
        Xm_ItemsList managed {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
        Xm_Selection managed {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
        Xm_Text managed {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
        Xm_Separator managed {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
        Xm_OK managed {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
        Xm_Cancel managed {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
        Xm_Help managed {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
        Xm_Apply managed {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
        Xm_FilterLabel managed {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
        Xm_FilterText managed {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
        Xm_DirList managed {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
        Xm_Dir managed {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
        Xm_Filter managed {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_fileSelectionBox);
       XmNokCallback = procedures {
                 do_mbeditviz_openfile();
                 BxUnmanageCB("form_open");
        };
        XmNcancelCallback = procedure BxUnmanageCB("form_open");
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object label_open_mbio : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("MBIO Format ID:");
        XmNtopAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 23;
        XmNleftOffset = 0;
        XmNx = 0;
        XmNy = 497;
        XmNwidth = 130;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object text_format : XmText widget {
    arguments {
        arguments Style_use;
        XmNtopAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 20;
        XmNleftOffset = 120;
        XmNx = 120;
        XmNy = 490;
        XmNwidth = 70;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_text_format);
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object label_outputmode : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Output Mode:");
        XmNtopAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 23;
        XmNleftOffset = 200;
        XmNx = 200;
        XmNy = 497;
        XmNwidth = 120;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object toggleButton_openmodeedit : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Output Edits");
        XmNwidth = 116;
        XmNheight = 28;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_toggleButton_openmodeedit);
        XmNvalueChangedCallback = procedure do_mbeditviz_changeoutputmode();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object toggleButton_openmodebrowse : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Browse Only");
        XmNwidth = 116;
        XmNheight = 28;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_toggleButton_openmodebrowse);
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object radioBox_openmode : XmRadioBox widget {
    arguments {
        arguments Style_use;
        XmNtopAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 7;
        XmNleftOffset = 310;
        XmNx = 310;
        XmNy = 478;
        XmNwidth = 122;
        XmNheight = 65;
    };
    controls {
         managed XmToggleButton toggleButton_openmodeedit;
         managed XmToggleButton toggleButton_openmodebrowse;
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_radioBox_openmode);
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object form_open : XmFormDialog widget {
    arguments {
        arguments Style_use;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 1029;
        XmNy = 1062;
        XmNwidth = 504;
        XmNheight = 550;
    };
    controls {
         managed XmRadioBox radioBox_openmode;
         managed XmLabel label_outputmode;
         managed XmText text_format;
         managed XmLabel label_open_mbio;
         managed XmFileSelectionBox fileSelectionBox;
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_form_open);
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

!(BX)object dialogShell_open : XmDialogShell widget {
!(BX)    arguments {
!(BX)        arguments Style_use;
!(BX)        XmNtitle = "Open Swath Data";
!(BX)        XmNwidth = 504;
!(BX)        XmNheight = 550;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmFormDialog form_open;
!(BX)    };
!(BX)    callbacks {
!(BX)        callbacks Style_useReasons;
!(BX)        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_dialogShell_open);
!(BX)    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
!(BX)};

object label_mbeditviz_message : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Message...");
        XmNx = 10;
        XmNy = 10;
        XmNwidth = 380;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_label_mbeditviz_message);
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object label_mbeditviz_patience : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Thank you for your patience...");
        XmNx = 10;
        XmNy = 50;
        XmNwidth = 350;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object bulletinBoard_mbeditviz_message : XmBulletinBoardDialog widget {
    arguments {
        arguments Style_use;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 1076;
        XmNy = 1290;
        XmNwidth = 409;
        XmNheight = 93;
    };
    controls {
         managed XmLabel label_mbeditviz_patience;
         managed XmLabel label_mbeditviz_message;
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_bulletinBoard_mbeditviz_message);
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

!(BX)object dialogShell_mbeditviz_message : XmDialogShell widget {
!(BX)    arguments {
!(BX)        arguments Style_use;
!(BX)        XmNtitle = "Please Wait...";
!(BX)        XmNwidth = 409;
!(BX)        XmNheight = 93;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmBulletinBoardDialog bulletinBoard_mbeditviz_message;
!(BX)    };
!(BX)    callbacks {
!(BX)        callbacks Style_useReasons;
!(BX)        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_dialogShell_mbeditviz_message);
!(BX)    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
!(BX)};

object pushButton_about_dismiss : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Dismiss");
        XmNx = 170;
        XmNy = 470;
        XmNwidth = 120;
        XmNheight = 50;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure BxUnmanageCB("bulletinBoard_about");
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object label_about_title : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNfontList = font_table(
		font('-*-times-bold-r-*-*-*-180-*-*-*-*-iso8859-1',character_set=character_set('TimesBold18')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')));
        XmNlabelString = compound_string(#character_set("TimesBold24")"MBe" &
 "ditviz") &
 compound_string("", separate=true) &
 compound_string(#character_set("TimesBold18")"Swath Bathymetry Editing", separate=true) &
 compound_string(#character_set("TimesBold18")"and", separate=true) &
 compound_string(#character_set("TimesBold18")"Patch Test Tool");
        XmNx = 10;
        XmNy = 10;
        XmNwidth = 440;
        XmNheight = 90;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object separator1 : XmSeparator widget {
    arguments {
        arguments Style_use;
        XmNx = 10;
        XmNy = 100;
        XmNwidth = 440;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object label_about_mbsystem : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNfontList = font_table(
		font('-*-times-bold-r-*-*-*-140-*-*-*-*-iso8859-1',character_set=character_set('TimesBold14')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')));
        XmNlabelString = compound_string(#character_set("TimesBold14")"One" &
 " component of the", separate=true) &
 compound_string(#character_set("T" &
 "imesBold24")"MB-System") &
 compound_string(#character_set("TimesBold14")"", separate=true) &
 compound_string(#character_set("TimesBold14")"An open Source Software Package", separate=true) &
 compound_string(#character_set("TimesBold14")"for Processing and Display", separate=true) &
 compound_string(#character_set("TimesBold14")"of Swath Sonar Data");
        XmNx = 10;
        XmNy = 120;
        XmNwidth = 440;
        XmNheight = 140;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object separator3 : XmSeparator widget {
    arguments {
        arguments Style_use;
        XmNx = 10;
        XmNy = 260;
        XmNwidth = 440;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object label_about_LDEO : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNfontList = font_table(
		font('-*-times-bold-r-*-*-*-140-*-*-*-*-iso8859-1',character_set=character_set('TimesBold14')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')));
        XmNlabelString = compound_string(#character_set("TimesBold12")"Lam" &
 "ont-Doherty", separate=true) &
 compound_string(#character_set("T" &
 "imesBold12")"Earth Observatory", separate=true) &
 compound_string(#character_set("TimesBold12")"of Columbia University");
        XmNx = 230;
        XmNy = 340;
        XmNwidth = 180;
        XmNheight = 80;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object label_about_MBARI : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNfontList = font_table(
		font('-*-times-bold-r-*-*-*-140-*-*-*-*-iso8859-1',character_set=character_set('TimesBold14')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')));
        XmNlabelString = compound_string(#character_set("TimesBold12")"Mon" &
 "terey Bay", separate=true) &
 compound_string(#character_set("T" &
 "imesBold12")"Aquarium", separate=true) &
 compound_string(#character_set("TimesBold12")"Research Institute");
        XmNx = 70;
        XmNy = 340;
        XmNwidth = 140;
        XmNheight = 80;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object label_about_authors : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNfontList = font_table(
		font('-*-times-bold-r-*-*-*-140-*-*-*-*-iso8859-1',character_set=character_set('TimesBold14')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')),
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')));
        XmNlabelString = compound_string(#character_set("TimesBold14")"Cre" &
 "ated By:", separate=true) &
 compound_string(#character_set("T" &
 "imesBold14")"David W. Caress   and   Dale N. Chayes ");
        XmNx = 10;
        XmNy = 280;
        XmNwidth = 440;
        XmNheight = 60;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object label_about_version : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNfontList = font_table(
		font('-*-times-bold-r-*-*-*-240-*-*-*-*-iso8859-1',character_set=character_set('TimesBold24')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')),
		font('-*-times-bold-r-*-*-*-140-*-*-*-*-iso8859-1',character_set=character_set('TimesBold14')),
		font('-*-times-medium-r-*-*-*-140-*-*-*-*-iso8859-1',character_set=character_set('TimesMedium14')),
		font('-*-times-bold-r-*-*-*-120-*-*-*-*-iso8859-1',character_set=character_set('TimesBold12')),
		font('-*-times-bold-r-*-*-*-140-*-*-*-*-iso8859-1',character_set=character_set('TimesBold14')),
		font('-*-times-medium-r-*-*-*-140-*-*-*-*-iso8859-1',character_set=character_set('TimesMedium14')));
        XmNlabelString = compound_string(#character_set("TimesMedium14")"M" &
 "B-System Release 5.0.8", separate=true) &
 compound_string(#character_set("T" &
 "imesMedium14")"February 2, 2006");
        XmNrecomputeSize = false;
        XmNx = 10;
        XmNy = 410;
        XmNwidth = 440;
        XmNheight = 50;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_label_about_version);
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object bulletinBoard_about : XmBulletinBoardDialog widget {
    arguments {
        arguments Style_use;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 1049;
        XmNy = 1071;
        XmNwidth = 463;
        XmNheight = 531;
    };
    controls {
         managed XmLabel label_about_version;
         managed XmLabel label_about_authors;
         managed XmLabel label_about_MBARI;
         managed XmLabel label_about_LDEO;
         managed XmSeparator separator3;
         managed XmLabel label_about_mbsystem;
         managed XmSeparator separator1;
         managed XmLabel label_about_title;
         managed XmPushButton pushButton_about_dismiss;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

!(BX)object dialogShell_about : XmDialogShell widget {
!(BX)    arguments {
!(BX)        arguments Style_use;
!(BX)        XmNtitle = "About MBeditviz...";
!(BX)        XmNwidth = 463;
!(BX)        XmNheight = 531;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmBulletinBoardDialog bulletinBoard_about;
!(BX)    };
!(BX)    callbacks {
!(BX)        callbacks Style_useReasons;
!(BX)    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
!(BX)};

object pushButton_openswath : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Open Swath Data");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_openswath);
       XmNactivateCallback = procedures {
                 do_mbeditviz_fileSelectionBox_openswath();
                 BxManageCB("form_open");
        };
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object separator2 : XmSeparator widget {
    arguments {
        arguments Style_use;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object pushButton_quit : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Quit");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
       XmNactivateCallback = procedures {
                 do_mbeditviz_quit();
                 BxExitCB(0);
        };
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object pulldownMenu_file : XmPulldownMenu widget {
    arguments {
        arguments Style_use;
        XmNx = 185;
        XmNy = 612;
        XmNwidth = 132;
        XmNheight = 54;
    };
    controls {
         managed XmPushButton pushButton_openswath;
         managed XmSeparator separator2;
         managed XmPushButton pushButton_quit;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object cascadeButton_file : XmCascadeButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("File");
        XmNx = 5;
        XmNy = 5;
        XmNwidth = 41;
        XmNheight = 24;
    };
    controls {
         unmanaged XmPulldownMenu pulldownMenu_file;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object pushButton_updategrid : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Generate New Grid");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_updategrid);
       XmNactivateCallback = procedures {
                 BxManageCB("form_gridparameters");
                 do_mbeditviz_regrid();
        };
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object pulldownMenu_options : XmPulldownMenu widget {
    arguments {
        arguments Style_use;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 142;
        XmNheight = 28;
    };
    controls {
         managed XmPushButton pushButton_updategrid;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object cascadeButton_options : XmCascadeButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Options");
        XmNx = 46;
        XmNy = 5;
        XmNwidth = 72;
        XmNheight = 24;
    };
    controls {
         unmanaged XmPulldownMenu pulldownMenu_options;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object pushButton_help_about : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("About");
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        XmNactivateCallback = procedure BxManageCB("bulletinBoard_about");
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object pulldownMenu_help : XmPulldownMenu widget {
    arguments {
        arguments Style_use;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 54;
        XmNheight = 28;
    };
    controls {
         managed XmPushButton pushButton_help_about;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object cascadeButton_help : XmCascadeButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Help");
        XmNx = 401;
        XmNy = 5;
        XmNwidth = 47;
        XmNheight = 24;
    };
    controls {
         unmanaged XmPulldownMenu pulldownMenu_help;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object menuBar_mbeditviz : XmMenuBar widget {
    arguments {
        arguments Style_use;
        XmNpacking = XmPACK_TIGHT;
        XmNmenuHelpWidget = XmCascadeButton cascadeButton_help;
        XmNwidth = 453;
        XmNheight = 34;
    };
    controls {
         managed XmCascadeButton cascadeButton_file;
         managed XmCascadeButton cascadeButton_options;
         managed XmCascadeButton cascadeButton_help;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object list_filelist : XmList widget {
    arguments {
        arguments Style_use;
        XmNfontList = font_table(
		font('-*-courier-*-r-*-*-*-90-*-*-*-*-iso8859-1'));
        XmNselectionPolicy = XmEXTENDED_SELECT;
        XmNwidth = 435;
        XmNheight = 289;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_list_filelist);
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object scrolledWindow_mbeditviz : XmScrolledWindow widget {
    arguments {
        arguments Style_use;
        XmNscrollingPolicy = XmAPPLICATION_DEFINED;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 14;
        XmNleftOffset = 10;
        XmNrightOffset = 8;
        XmNtopOffset = 220;
        XmNx = 10;
        XmNy = 220;
        XmNwidth = 435;
        XmNheight = 289;
    };
    controls {
         managed XmList list_filelist;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object label_filelist : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Swath Files:");
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNrightOffset = 8;
        XmNtopOffset = 190;
        XmNx = 10;
        XmNy = 190;
        XmNwidth = 435;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object pushButton_viewall : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("View", separate=true) &
 compound_string("All", separate=true) &
 compound_string("Files");
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 12;
        XmNrightOffset = 0;
        XmNtopOffset = 100;
        XmNleftWidget = XmLabel label_mbeditviz_status;
        XmNx = 220;
        XmNy = 100;
        XmNwidth = 70;
        XmNheight = 70;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_viewall);
       XmNactivateCallback = procedures {
                 do_mbeditviz_viewall();
                 BxManageCB("form_gridparameters");
        };
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object pushButton_viewselected : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("View", separate=true) &
 compound_string("Selected", separate=true) &
 compound_string("Files");
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 6;
        XmNtopOffset = 100;
        XmNleftWidget = XmPushButton pushButton_viewall;
        XmNx = 296;
        XmNy = 100;
        XmNwidth = 70;
        XmNheight = 70;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_viewselected);
       XmNactivateCallback = procedures {
                 do_mbeditviz_viewselected();
                 BxManageCB("form_gridparameters");
        };
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object pushButton_deleteselected : XmPushButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Remove", separate=true) &
 compound_string("Selected", separate=true) &
 compound_string("Files");
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 10;
        XmNtopOffset = 100;
        XmNleftWidget = XmPushButton pushButton_viewselected;
        XmNx = 376;
        XmNy = 100;
        XmNwidth = 70;
        XmNheight = 70;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_pushButton_deleteselected);
        XmNactivateCallback = procedure do_mbeditviz_deleteselected();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object toggleButton_mode_edit : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Edit Bathymetry");
        XmNwidth = 138;
        XmNheight = 28;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_toggleButton_mode_edit);
        XmNvalueChangedCallback = procedure do_mbeditviz_mode_change();
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object toggleButton_mode_browse : XmToggleButton widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Browse Only");
        XmNwidth = 138;
        XmNheight = 28;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_toggleButton_mode_browse);
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object radioBox_programmode : XmRadioBox widget {
    arguments {
        arguments Style_use;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 260;
        XmNtopOffset = 30;
        XmNx = 260;
        XmNy = 30;
        XmNwidth = 144;
        XmNheight = 65;
    };
    controls {
         managed XmToggleButton toggleButton_mode_edit;
         managed XmToggleButton toggleButton_mode_browse;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object label_programmode : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Mode:");
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNrightOffset = 43;
        XmNtopOffset = 0;
        XmNx = 260;
        XmNy = 0;
        XmNwidth = 150;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object label_mbeditviz_status : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNborderWidth = 1;
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNbackground = color('white');
        XmNborderColor = color('black');
        XmNlabelString = compound_string("Available Files: 0", separate=true) &
 compound_string("Loaded Files: 0", separate=true) &
 compound_string("Grid Bounds:", separate=true) &
 compound_string("     Longitude: 0.00 0.00", separate=true) &
 compound_string("     Latitude: 0.00 0.00", separate=true) &
 compound_string("Grid Spacing: 10.0 m", separate=true) &
 compound_string("Mode: Edit Bathymetry");
        XmNrecomputeSize = false;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNrightOffset = 245;
        XmNtopOffset = 30;
        XmNx = 10;
        XmNy = 30;
        XmNwidth = 196;
        XmNheight = 150;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
        MrmNcreateCallback = procedure BxGlobalWidgetId(BXG_label_mbeditviz_status);
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object label_status : XmLabel widget {
    arguments {
        arguments Style_use;
        XmNlabelString = compound_string("Status:");
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNrightOffset = 243;
        XmNtopOffset = 0;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 210;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object form_mbeditviz : XmForm widget {
    arguments {
        arguments Style_use;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNwidth = 453;
        XmNheight = 523;
    };
    controls {
         managed XmLabel label_status;
         managed XmLabel label_mbeditviz_status;
         managed XmLabel label_programmode;
         managed XmRadioBox radioBox_programmode;
         managed XmPushButton pushButton_deleteselected;
         managed XmPushButton pushButton_viewselected;
         managed XmPushButton pushButton_viewall;
         managed XmLabel label_filelist;
         managed XmScrolledWindow scrolledWindow_mbeditviz;
    };
    callbacks {
        callbacks Style_useReasons;
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

object mainWindow_mbeditviz : XmMainWindow widget {
    arguments {
        arguments Style_use;
        XmNx = 180;
        XmNy = 583;
        XmNwidth = 453;
        XmNheight = 557;
    };
    controls {
        Xm_Separator1 {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
        Xm_Separator2 {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
        Xm_Separator3 {
            arguments {
                arguments Style_use;
            };
            callbacks {
                    callbacks Style_useReasons;
            };
!(BX)            handlers {
!(BX)                handlers Style_useHandlers;
!(BX)            };
        };
!(BX)         unmanaged XmDialogShell dialogShell_error;
!(BX)         unmanaged XmDialogShell dialogShell_gridparameters;
!(BX)         unmanaged XmDialogShell dialogShell_open;
!(BX)         unmanaged XmDialogShell dialogShell_mbeditviz_message;
!(BX)         unmanaged XmDialogShell dialogShell_about;
         managed XmMenuBar menuBar_mbeditviz;
         managed XmForm form_mbeditviz;
    };
    callbacks {
        callbacks Style_useReasons;
       XmNdestroyCallback = procedures {
                 do_mbeditviz_quit();
                 BxExitCB(0);
        };
    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
};

!(BX)object topLevelShell : TopLevelShell widget {
!(BX)    arguments {
!(BX)        arguments Style_use;
!(BX)        XmNtitle = "MBeditviz";
!(BX)        XmNx = 180;
!(BX)        XmNy = 583;
!(BX)        XmNwidth = 453;
!(BX)        XmNheight = 557;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmMainWindow mainWindow_mbeditviz;
!(BX)    };
!(BX)    callbacks {
!(BX)        callbacks Style_useReasons;
!(BX)       XmNdestroyCallback = procedures {
!(BX)                 do_mbeditviz_quit();
!(BX)                 BxExitCB(0);
!(BX)        };
!(BX)    };
!(BX)    handlers {
!(BX)        handlers Style_useHandlers;
!(BX)    };
!(BX)};
end module;
