eval '(exit $?0)' && eval 'exec perl -S $0 ${1+"$@"}'
                    & eval 'exec perl -S $0 $argv:q'
                         if 0;
#--------------------------------------------------------------------
#    The MB-system:	install_makefiles	5/20/94
#    $Id: install_makefiles,v 4.17 1999-02-04 23:55:57 caress Exp $
#
#    Copyright (c) 1993, 1994, 1995, 1996, 1997 by 
#    D. W. Caress (caress@lamont.ldgo.columbia.edu)
#    and D. N. Chayes (dale@lamont.ldgo.columbia.edu)
#    Lamont-Doherty Earth Observatory
#    Palisades, NY  10964
#
#    See README file for copying and redistribution conditions.
#--------------------------------------------------------------------
#
# Command:
#   install_makefiles
#
# Purpose:
#   Perl shellscript to create makefiles appropriate to a particular
#   MB-System installation.  Before running this script, the
#   installer should edit the variable declarations below (where
#   indicated) so that these values are appropriate for the system
#   on which MB-System is being installed.  At execution the script 
#   will read template makefiles in the MB-System source directories 
#   and create makefiles with the correct attributes.
#   This enables users to install MB-System without having to edit
#   the makefiles.  Instead of editing the makefiles directly, the
#   installer should edit this script so that the locations of
#   important libraries and include files are accurate and so that
#   the compile and link flags are correct.
#
# Usage:
#   install_makefiles
#
# Author:
#   David W. Caress
#   Lamont-Doherty Earth Observatory
#   Palisades, NY  10964
#   May 20, 1994
#
# Version:
#   $Id: install_makefiles,v 4.17 1999-02-04 23:55:57 caress Exp $
#
# Revisions:
#   $Log: not supported by cvs2svn $
# Revision 4.16  1998/10/05  22:12:48  caress
# MB-System version 4.6beta
#
# Revision 4.15  1997/09/18  13:29:15  caress
# Removed references to realtime stuff.
#
# Revision 4.14  1997/09/15  19:02:15  caress
# Real Version 4.5
#
# Revision 4.13  1997/04/21  16:51:19  caress
# MB-System 4.5 Beta Release.
#
# Revision 4.14  1997/04/17  19:31:15  caress
# Removed Fortran related parameters from user edit area
# and added LINUX to list of supported operating systems.
#
# Revision 4.13  1997/04/17  15:18:34  caress
# MB-System 4.5 Beta Release
#
# Revision 4.12  1996/09/09  15:17:50  caress
# Turning GRAPHICAL off now turns mbnavedit off.
#
# Revision 4.11  1995/08/17  16:39:53  caress
# Revision for release 4.3.
#
# Revision 4.10  1995/08/07  17:25:26  caress
# Moved to GMT V3.
#
# Revision 4.9  1995/07/14  14:09:01  caress
# Check during serious bug fix flail.
#
# Revision 4.8  1995/06/06  14:18:26  caress
# Updated example for installing under Solaris 2.4
#
# Revision 4.7  1995/03/23  16:30:08  caress
# Added -Olimit flag for compiling mbgrid.c under IRIX
#
# Revision 4.6  1995/03/22  19:19:27  caress
# Added support for HPUX.
#
# Revision 4.5  1995/02/15  14:42:44  caress
# Version 4.2 Release
#
# Revision 4.4  1994/10/21  13:38:18  caress
# Release V4.0
#
# Revision 4.3  1994/10/20  21:23:53  caress
# Release V4.0
#
# Revision 4.2  1994/06/22  19:30:38  caress
# Added support for different archivers used under
# different operating systems (e.g. ar used for Suns and
# SGIs, libr used under Lynx).
#
# Revision 4.1  1994/06/21  22:52:01  caress
# Changes to support PCs running Lynx OS.
#
# Revision 4.0  1994/05/24  20:40:50  caress
# First cut.
#
#
#
#
# The important parameters to be set are:
#	MBSYSTEM_HOME	Absolute path to the directory containing
#				this file.
#	OS		Operating system (SUN, IRIX, LINUX, LYNX, 
#				SOLARIS, HPUX, or OTHER).
#	BYTESWAPPED	If set to "YES" will enable byte swapping
#				of input and output binary data.
#				Otherwise byte swapping is disabled.
#				Byte swapping needs to be enabled
#				when installing on "little endian"
#				machines such as PCs or VAXs.
#	CC		C compiler to be used (optional).
#	CFLAGS		Compile flags for C source files.
#	LFLAGS		Load flags for all object files.
#	GRAPHICAL	If set to "YES" will enable the installation
#			of the Motif based graphical utilities mbedit,
#			mbnavedit, and mbvelocitytool. If Motif 
#                       is not available but the nongraphical utilities 
#                       are desired then disable with "NO". 
#			(optional, default is "YES")
#       MOTIFINCDIR	Location of Motif include files.
#       MOTIFLIBS	X and Motif libraries required for graphical tools.
#	GMTLIBDIR	Location of GMT libraries libgmt.a and libpsl.a
#	GMTINCDIR	Location of GMT include files gmt.h, grd.h,
#				and pslib.h
#	NETCDFLIBDIR	Location of NetCDF library libnetcdf.a
#	NETCDFINCDIR	Location of NetCDF include file netcdf.h
#	LEVITUS		Path for Levitus data file annual.
#
# Example for installing on L-DEO Sun workstations running SunOs 4.1.x:
#	$MBSYSTEM_HOME = "/home/hs/caress/dev/mbsystem";
#	$OS = "SUN";
#	$BYTESWAPPED = "NO";
#	$CFLAGS = "-O2";
#	$LFLAGS = "-lm";
#	$GRAPHICAL = "YES";
#	$MOTIFINCDIR = "/usr/include/Xm";
#	$MOTIFLIBS = "-lXm -lXt -lX11";
#	$GMTLIBDIR = "/ocean/mgg/gmt2/sun4/lib";
#	$GMTINCDIR = "/ocean/mgg/gmt2/src";
#	$NETCDFLIBDIR = "/ocean/mgg/netcdf/sun4/lib";
#	$NETCDFINCDIR = "/ocean/mgg/netcdf/include";
#	$LEVITUS = "/ocean/mgg/levitus/annual";
#
# Example for installing on R/V Ewing Sun workstations:
#	$MBSYSTEM_HOME = "/net/heezen/packages/mbsystem";
#	$OS = "SUN";
#	$BYTESWAPPED = "NO";
#	$CFLAGS = "-O2";
#	$LFLAGS = "-lm";
#	$GRAPHICAL = "YES";
#	$MOTIFINCDIR = "/usr/include/Xm";
#	$MOTIFLIBS = "-lXm -lXt -lX11";
#	$GMTLIBDIR = "/net/heezen/packages/gmt2/bin";
#	$GMTINCDIR = "/net/heezen/packages/gmt2/src";
#	$NETCDFLIBDIR = "/net/heezen/packages/netcdf/lib";
#	$NETCDFINCDIR = "/net/heezen/packages/netcdf/include";
#	$LEVITUS = "/net/heezen/packages/levitus/annual";
#
# Example for installing on Sun workstations running Solaris 2.4:
#	$MBSYSTEM_HOME = "/usr/local/mbsystem";
#	$OS = "SOLARIS";
#	$BYTESWAPPED = "NO";
#	$CFLAGS = "-O -I/usr/openwin/include -I/usr/ucbinclude";
#	$LFLAGS = "-lnsl -lm";
#	$GRAPHICAL = "YES";
#	$MOTIFINCDIR = "/usr/dt/include";
#	$MOTIFLIBS = "-L/usr/openwin/lib -L/usr/dt/lib -lXm -lXt -lX11";
#	$GMTLIBDIR = "/usr/local/gmt/src";
#	$GMTINCDIR = "/usr/local/gmt/src";
#	$NETCDFLIBDIR = "/usr/local/netcdf/lib";
#	$NETCDFINCDIR = "/usr/local/netcdf/include";
#	$LEVITUS = "/usr/local/levitus/annual";
#
# Example for installing on SeaBeam Instruments SGI IRIX workstations:
#	$MBSYSTEM_HOME = "/usr/local/mbsystem";
#	$OS = "IRIX";
#	$BYTESWAPPED = "NO";
#	$CFLAGS = "-O2";
#	$LFLAGS = "-lm -lsun";
#	$GRAPHICAL = "YES";
#	$MOTIFINCDIR = "/usr/include/Xm";
#	$MOTIFLIBS = "-lXm -lXt -lX11";
#	$GMTLIBDIR = "/usr/local/gmt/src";
#	$GMTINCDIR = "/usr/local/gmt/src";
#	$NETCDFLIBDIR = "/usr/local/netcdf/lib";
#	$NETCDFINCDIR = "/usr/local/netcdf/include";
#	$LEVITUS = "/usr/local/levitus/annual";
#
# Example for installing on SeaBeam Instruments SGI IRIX 6.4 workstations:
#	$MBSYSTEM_HOME = "/usr/local/mbsystem";
#	$OS = "IRIX64";
#	$BYTESWAPPED = "NO";
#	$CFLAGS = "-O2";
#	$LFLAGS = "-lm -lsun";
#	$GRAPHICAL = "YES";
#	$MOTIFINCDIR = "/usr/include/Xm";
#	$MOTIFLIBS = "-lXm -lXt -lX11";
#	$GMTLIBDIR = "/usr/local/gmt/src";
#	$GMTINCDIR = "/usr/local/gmt/src";
#	$NETCDFLIBDIR = "/usr/local/netcdf/lib";
#	$NETCDFINCDIR = "/usr/local/netcdf/include";
#	$LEVITUS = "/usr/local/levitus/annual";
#
# Example for installing on SeaBeam Instruments Lynx PC:
#	$MBSYSTEM_HOME = "/usr/local/mbsystem";
#	$OS = "LYNX";
#	$BYTESWAPPED = "YES";
#	$CC = "cc";
#	$CFLAGS = "-k";
#	$LFLAGS = "-lm -lbsd -X";
#	$GRAPHICAL = "YES";
#	$MOTIFINCDIR = "/usr/include/Xm";
#	$MOTIFLIBS = "-lXm -lXt -lX11";
#	$GMTLIBDIR = "/usr/local/gmt/src";
#	$GMTINCDIR = "/usr/local/gmt/src";
#	$NETCDFLIBDIR = "/usr/local/netcdf/lib";
#	$NETCDFINCDIR = "/usr/local/netcdf/include";
#	$LEVITUS = "/usr/local/levitus/annual";
##
# Example for installing on PC running LINUX:
#	$MBSYSTEM_HOME = "/usr/local/mbsystem";
#	$OS = "LINUX";
#	$BYTESWAPPED = "YES";
#	$CC = "cc";
#	$CFLAGS = "?";
#	$LFLAGS = "?";
#	$GRAPHICAL = "YES";
#	$MOTIFINCDIR = "?";
#	$MOTIFLIBS = "?";
#	$GMTLIBDIR = "/usr/local/gmt/src";
#	$GMTINCDIR = "/usr/local/gmt/src";
#	$NETCDFLIBDIR = "/usr/local/netcdf/lib";
#	$NETCDFINCDIR = "/usr/local/netcdf/include";
#	$LEVITUS = "/usr/local/levitus/annual";
#
# Example for installing on Hewlett Packard workstations
# running HPUX version 9.0X or later:
#	$MBSYSTEM_HOME = "/usr/local/mbsystem";
#	$OS = "HPUX";
#	$BYTESWAPPED = "NO";
#	$CFLAGS = "-Ae +O3 -I/usr/include/X11R5 -I/usr/include/Motif1.2";
#	$LFLAGS = "-lm ";
#	$GRAPHICAL = "YES";
#	$MOTIFINCDIR = "/usr/lib/Motif1.2/Xm";
#	$MOTIFLIBS = "-Wl,-L/usr/lib/Motif1.2 -Wl, -Wl,-lXm -Wl,-L/usr/lib/X11R5 -Wl,-lX11 -Wl,-lXt";
#	$GMTLIBDIR = "/usr/local/gmt/src";
#	$GMTINCDIR = "/usr/local/gmt/src";
#	$NETCDFLIBDIR = "/usr/local/gmt/lib";
#	$NETCDFINCDIR = "/usr/local/gmt/include";
#	$LEVITUS = "/usr/local/levitus/annual";
#
# **** EDIT THE PARAMETERS HERE ****
# Set the environment parameters:
$MBSYSTEM_HOME = "/usr/people/caress/dev/mbsystem";
$OS = "IRIX64";
$BYTESWAPPED = "NO";
$CFLAGS = "-g -w";
$LFLAGS = "-lm";
$GRAPHICAL = "YES";
$GMTOLD = "NO";
$MOTIFINCDIR = "/usr/include/Xm";
$MOTIFLIBS = "-lXm -lXt -lX11";
$GMTLIBDIR = "/usr/local/gmt/src";
$GMTINCDIR = "/usr/local/gmt/src";
$NETCDFLIBDIR = "/usr/local/netcdf/lib";
$NETCDFINCDIR = "/usr/local/netcdf/include";
$LEVITUS = "/usr/local/levitus/annual";
#
# **** LEAVE EVERYTHING ELSE BELOW ALONE ****

# Program Name:
$program_name = "install_makefiles";

# add operating system to CFLAGS
$CFLAGS = "$CFLAGS -D$OS";

# add byte swapping to CFLAGS if necessary
if ($BYTESWAPPED eq "YES")
	{
	$CFLAGS = "$CFLAGS -DBYTESWAPPED";
	}

# use GMT 3.0 instead of GMT 3.1 if desired
if ($GMTOLD eq "YES")
	{
	$CFLAGS = "$CFLAGS -DGMT_OLD";
	}

# set archiver 
if ($OS eq "LYNX")
	{
	$ARCHIVE = "libr rcv";
	}
else
	{
	$ARCHIVE = "ar rcv";
	}

# set $GRAPHICAL if not set
if (!$GRAPHICAL)
	{
	$GRAPHICAL = "YES";
	}

# set $BIGFLAG for compiling mbgrid.c under IRIX
if ($OS eq "IRIX")
	{
	$BIGFLAG = "-Olimit 2000";
	}
elsif ($OS eq "IRIX64")
	{
	$BIGFLAG = "-OPT:Olimit=5000";
	$OS = "IRIX";
	}
else
	{
	$BIGFLAG = "";
	}

# outputting attributes:
print "\nParameters defined for Makefiles:\n";
print "Mb-System Home:            $MBSYSTEM_HOME\n";
print "Operating System:          $OS\n";
if ($BYTESWAPPED eq "YES")
	{
	print "Byte swapping:             enabled\n";
	}
else
	{
	print "Byte swapping:             disabled\n";
	}
if ($CC)
	{
	print "C Compiler:                $CC\n";
	}
print "C Compile Flags:           $CFLAGS\n";
print "Load Flags:                $LFLAGS\n";
print "Library Archiver:          $ARCHIVE\n";
if ($GRAPHICAL eq "YES")
	{
	print "Graphical Utilities:       enabled\n";
	}
else
	{
	print "Graphical Utilities:       disabled\n";
	}
print "Motif Include Location:    $MOTIFINCDIR\n";
print "Motif Libraries:           $MOTIFLIBS\n";
print "GMT Library Location:      $GMTLIBDIR\n";
print "GMT Include Location:      $GMTINCDIR\n";
print "NetCDF Library Location:   $NETCDFLIBDIR\n";
print "NetCDF Include Location:   $NETCDFINCDIR\n";
print "Levitus Data Location:     $LEVITUS\n";

# get filenames
@files = `ls Makefile.template src/Makefile.template src/*/Makefile.template`;
while (@files)
	{
	# get files
	$template = shift @files;
	chop($template);
	print "\nMakefile Template: $template\n";
	$pos = 0;
	while (($tpos = index($template,"/",$pos)) >= 0)
		{
		$pos = $tpos + 1;
		}
	$path = substr($template,0,$pos);
	chop($path);
	if (length($path) == 0)
		{
		$path = ".";
		}
	$makefile = "$path/Makefile";
	print "Output Makefile:   $makefile\n";

	# open files
	open(TMP,"<$template") || die "Cannot open template Makefile $template\nMacro $program_name aborted.\n";
	open(MAK,">$makefile") || die "Cannot open output Makefile $makefile\nMacro $program_name aborted.\n";

	# loop through the file
	while (<TMP>)
		{
		if (index($_,"MBSYSTEM_HOME",0) == 0)
			{
			print MAK "MBSYSTEM_HOME = $MBSYSTEM_HOME\n";
			}
		elsif (index($_,"OS",0) == 0)
			{
			print MAK "OS = $OS\n";
			}
		elsif (index($_,"CC",0) == 0)
			{
			if ($CC)
				{
				print MAK "CC = $CC\n";
				}
			else
				{
				print MAK "# C compiler left as default\n";
				}
			}
		elsif (index($_,"CFLAGS",0) == 0)
			{
			print MAK "CFLAGS = $CFLAGS\n";
			}
		elsif (index($_,"LFLAGS",0) == 0)
			{
			print MAK "LFLAGS = $LFLAGS\n";
			}
		elsif (index($_,"MOTIFINCDIR",0) == 0)
			{
			print MAK "MOTIFINCDIR = $MOTIFINCDIR\n";
			}
		elsif (index($_,"MOTIFLIBS",0) == 0)
			{
			print MAK "MOTIFLIBS = $MOTIFLIBS\n";
			}
		elsif (index($_,"GMTLIBDIR",0) == 0)
			{
			print MAK "GMTLIBDIR = $GMTLIBDIR\n";
			}
		elsif (index($_,"GMTINCDIR",0) == 0)
			{
			print MAK "GMTINCDIR = $GMTINCDIR\n";
			}
		elsif (index($_,"NETCDFLIBDIR",0) == 0)
			{
			print MAK "NETCDFLIBDIR = $NETCDFLIBDIR\n";
			}
		elsif (index($_,"NETCDFINCDIR",0) == 0)
			{
			print MAK "NETCDFINCDIR = $NETCDFINCDIR\n";
			}
		elsif (index($_,"LEVITUS",0) == 0)
			{
			print MAK "LEVITUS = $LEVITUS\n";
			}
		elsif (index($_,"ARCHIVE",0) == 0)
			{
			print MAK "ARCHIVE = $ARCHIVE\n";
			}
		elsif (index($_,"BIGFLAG",0) == 0)
			{
			print MAK "BIGFLAG = $BIGFLAG\n";
			}
		elsif (index($_,"ranlib",0) >= 0 && $OS ne "SUN")
			{
			}
		elsif (index($_,"catman",0) >= 0 && $OS ne "SUN")
			{
			}
		elsif (index($_,"cd mbedit",0) >= 0 && $GRAPHICAL ne "YES")
			{
			}
		elsif (index($_,"cd mbvelocitytool",0) >= 0 && $GRAPHICAL ne "YES")
			{
			}
		elsif (index($_,"cd mbnavedit",0) >= 0 && $GRAPHICAL ne "YES")
			{
			}
		else
			{
			print MAK "$_";
			}
		}

	# close files
	close TMP;
	close MAK;

	}


die "\nAll done!\n";

