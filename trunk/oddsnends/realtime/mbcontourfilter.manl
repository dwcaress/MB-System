.TH mbcontourfilter l "31 October 1994"
.SH NAME
\fBmbcontourfilter\fP - Read multibeam bathymetry data and generate
a contoured swath plot using generic ascii plot calls which
can be interpreted by other programs.

.SH VERSION
Version 4.1

.SH SYNOPSIS
\fBmbcontourfilter\fP \fB-I\fIdatalist \fB-J\fIparameters \fB-R\fIwest/east/south/north \fP[\fB-A\fIcont_int/col_int/tic_int/lab_int/tic_int/lab_hgt \fB-b\fIyr/mo/da/hr/mn/sc \fB-D\fItime_tick/time_annot/date_annot/time_tick_len\fP \fB-E\fIyr/mo/da/hr/mn/sc \fB-L\fIlonflip \fB-N\fInplot \fB-p\fIpings\fP \fB-V -H\fP]

.SH DESCRIPTION
\fBmbcontourfilter\fP is an utility for swath contouring of multibeam 
bathymetry data using an ascii plot call format directed to stdout.
Two contouring
algorithms are available. The first draws contours between successive
pings; this algorithm is simple and therefore fast but produces poor
looking contours when beams from one ping lie "behind" beams from a
previous ping (this happens for sonars that ping at nonnull pitch
angles or for the "inside" beams when ships make sharp turns). The
second algorithm constructs a triangular network from the available
soundings and contours the network; this approach is complicated
and therefore slow but produces good looking contours under most
conditions. The contour levels 
and colors can be controlled directly or set implicitly using contour 
and color change intervals. Contours can also be set to have ticks 
pointing downhill.
The primary purpose of \fBmbcontourfilter\fP
is to serve as part of a real-time plotting system. Real-time data
is piped into \fBmbcontourfilter\fP, which in turn pipes contours
in the form of ascii plot calls to a plotting filter specific to the
local plotting hardware. See the manual pages for \fBmbplotfilter\fP and
\fBmbm_calcomp_plot\fP for a description of realtime pen plotting on
the R/V Maurice Ewing.

.SH AUTHORSHIP
David W. Caress (caress@lamont.ldeo.columbia.edu)
.br
Dale N. Chayes (dale@lamont.ldeo.columbia.edu)
.br
Lamont-Doherty Earth Observatory
.br
Palisades, NY 10964

.SH OPTIONS
.TP
.B \fB-A\fIcont_int/col_int/tic_int/lab_int/tic_len/lab_hgt\fP
If specific contour levels are not specified with the \fI-C\fP option,
then contours will be
generated in four colors (black, red, green, and blue) with intervals,
annotations, and tickmarks controlled by these parameters.  Contours will be
generated at invervals of \fIcont_int\fP meters.  Color changes
will occur at intervals of \fIcol_int\fP meters.  Contours will have
downhill facing tickmarks \fItic_int\fP inches long every \fItic_int\fP
meters. Contours will have annotations 
\fIlabel_len\fP inches high every \fIlab_int\fP meters.
Defaults: \fIcont_int\fP = 25; \fIcol_int\fP = 100; 
\fItic_int\fP = 100; \fIlab_int\fP = 100; \fItic_int\fP = 0.1; 
\fIlab_hgt\fP = 0.05.
.TP
.B \fB-b\fIyr/mo/da/hr/mn/sc\fP
Sets the starting time for data allowed in the input data; pings
with times before the starting time will be ignored. 
Default: \fIyr/mo/da/hr/mn/sc\fP = 1962/2/21/10/30/0.
.TP
.B \fB-D\fItime_tick/time_annot/date_annot/time_tick_len\fP
Sets the parameters governing the annotation of the shiptrack.  
Time marks are made with "X" marks along the shiptrack; annotated
time marks show the time in HH:MM format next to the time mark
and annotated date marks show the time and julian day in
HH:MM/DDD format.  The "X" marks are
\fItime_tick_len\fP inches high for normal time marks and 
1.5 times \fItime_tick_len\fP inches high for annotated time or date
marks.  The interval of time ticks, annotated time ticks, and 
annotated date ticks are given in hours by 
\fItime_tick\fP, \fItime_annot\fP, and \fIdate_annot\fP, respectively.
Defaults: \fItime_tick\fP = 0.25; \fItime_annot\fP = 1.0; 
\fIdate_annot\fP = 4.0; \fItime_tick_len\fP = 0.1.
.TP
.B \fB-E\fIyr/mo/da/hr/mn/sc\fP
Sets the ending time for data allowed in the input data; pings
with times after the ending time will be ignored. 
Default: \fIyr/mo/da/hr/mn/sc\fP = 2062/2/21/10/30/0.
.TP
.B \fB-f\fIformat\fP
Sets the data format used if the input is read from stdin
(the default, which can be overridden with the \fB-I\fP option).
This program uses the \fBMBIO\fP library and will read or write any multibeam
format supported by \fBMBIO\fP. A list of the multibeam data formats
currently supported by \fBMBIO\fP and their identifier values
is given in the \fBMBIO\fP manual page.
.TP
.B \fB-H\fP
This "help" flag cause the program to print out a description
of its operation and then exit immediately.
.TP
.B \fB-I\fIdatalist\fP
Sets the filename of the file containing a list of the input multibeam
data files and their formats.  The program will read and plot the
data in each one of these files instead of the default, which is
to read and plot a single data stream from stdin.
In the \fIdatalist\fP file, each
data file should be followed by a data format identifier, e.g.:
 	datafile1 11
 	datafile2 24
.br
This program uses the \fBMBIO\fP library and will read or write any multibeam
format supported by \fBMBIO\fP. A list of the multibeam data formats
currently supported by \fBMBIO\fP and their identifier values
is given in the \fBMBIO\fP manual page.
.TP
.B \fB-J\fP
Defines the map projection.  Although the GMT convention is used, the
only projection available is the Mercator projection:
.br
\fB\-Jm\fP\fIscale\fP (Mercator)
.TP
.B \fB-L\fIlonflip\fP
Sets the range of the longitude values returned by the multibeam i/o routines.
If \fIlonflip\fP=-1 then the longitude values will be in
the range from -360 to 0 degrees. If \fIlonflip\fP=0 
then the longitude values will be in
the range from -180 to 180 degrees. If \fIlonflip\fP=1 
then the longitude values will be in
the range from 0 to 360 degrees.
Default: \fIlonflip\fP = 0.
.TP
.B \fB-N\fInplot\fP
Sets the number of pings to be read in before each contouring
episode. See the description of the \fB-Z\fIalgorithm\fP option
for advice on reasonable values
Default: \fInplot\fP = 50 unless \fB-Z\fI1\fP is specified,
in which case the default is \fInplot\fP = 5.
.TP
.B \fB-p\fIpings\fP
Sets the ping averaging of the input data. If \fIpings\fP = 1, then
no ping averaging is performed. If \fIpings\fP > 0, then
that number of input pings will be averaged to produce one output
ping.  If \fIpings\fP = 0, then the ping averaging will automatically
be done so that the along-track ping spacing is equal to the across-track
beam spacing.
Default: \fIpings\fP = 1 (no ping averaging).
.TP
.B \fB-Q\fP
Causes the program to plot the triangles constructed as part of the
contouring if the "triangle algorithm" is specified using the
\fB-Z\fI0\fP option. This allows the data distribution to be directly viewed.
.TP
.B \fB-R\fIwest/east/south/north\fP
Sets the longitude and latitude bounds within which multibeam 
data will be read and plotted. Only the data which lies within 
these bounds will be read. 
Default: \fIwest\fP=-360, east\fI=360\fP, \fIsouth\fP=-90, \fInorth\fP=90.
.TP
.B \fB-T\fItimegap\fP
Sets the maximum time gap in minutes between adjacent pings allowed before
the data is considered to have a gap. Default: \fItimegap\fP = 1.
.TP
.B \-V
Selects verbose mode, which will send progress reports to stderr [Default runs "silently"].
.TP
.B \fB-Z\fIalgorithm\fP
Sets the contouring algorithm to be used. If \fIalgorithm\fP=0,
a simple ping to ping contouring approach is used; this algorithm
is fast but produces poor looking contours when used with data
where beams from one ping may lie "behind" beams from previous
pings (this happens for sonars that ping at nonnull pitch
angles or for the "inside" beams when ships make sharp turns).
If \fIalgorithm\fP=1 then a triangular network is constructed from
the available soundings and this network is in turn contoured;
this algorithm is slow but produces good looking contours in
most cases. It is important to note that the time required for
"triangle" algorithm increases with the square of the number
of beams to be contoured; thus it is sensible to keep the number
of pings contoured at a time small (e.g. use \fB-N\fI5\fP).
The time required for the "ping to ping" algorithm varies linearly
with the number of pings contoured; thus larger numbers of pings
may be reasonably contoured at a time (e.g. use \fB-N\fI50\fP). 
Default: \fIalgorithm\fP = 0.
.TP
.B \-#
Specifies the number of plot copies. [Default is 1]
.SH EXAMPLES
On the R/V Maurice Ewing, the real-time hydrosweep data 
is logged in a file which changes each day.  In order to make a 
contour pen plot of the real time data in a file called
/net/moray/logger/data/9305hs.d237 the following approach can
be used:
 	tail -0f /net/moray/logger/data/9305hs.d237 | mbcontourfilter 
 		-F5 -R-43.0/-42.0/10.08333/10.916667 -Jm30 
 		-C50/200/200/200/.02/.07 -A0.25/1.0/4.0 | mbplotfilter 
 		 -R-43.0/-42.0/10.08333/10.916667 -W30 | ccgr -d /dev/ttyb
.br
As invoked, the tail command will read through the input file until it
reaches the end and then enter an infinite loop, reading new 
data as it is added to the end of the file.  The data is piped to 
\fBmbcontourfilter\fP, which generates contours, shiptracks, and 
annotations as ascii plot calls printed to stdout.  The ascii plot calls
are piped to \fBmbplotfilter\fP, which interprets them in terms of
Lamont metafile graphics calls.  The metafile graphics are piped to
a program called ccgr, which translates them to Calcomp pen
plotter commands and sends those commands to a serial port.  Assuming
that the plotter is connected to the port used, the plotter then
draws the contours on paper.

In order to use this system for pen plotting in other environments or
with other pen plotters, the user would need to replace mbplotfilter and
ccgr with one or more programs to translate the ascii plot calls to
the required plot call format.

The format of the plot calls generated by \fBmbcontourfilter\fP is
simple.  Four calls are understood:
 	init
 	newp ipen
 	plot x y penup
 	stop
.br
Here ipen is the pen number to be used (usually 1-4), x and y are the plot
coordinates in longitude and latitude, and penup indicates whether
the pen is up (penup=3) or down (penup=2) during the pen move.

.SH BUGS
Many but hopefully minor.
